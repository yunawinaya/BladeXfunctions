{
  "list": [
    {
      "name": "Flex",
      "type": "flex",
      "el": "su-fm-flex",
      "mainIcon": "自动布局",
      "typeIcon": "自动布局",
      "icon": "icon-zhediemianban",
      "group": "Design",
      "groupSort": 6,
      "enableScopes": ["Component", "Table", "Page"],
      "options": {
        "title": "布局",
        "customClass": "",
        "hidden": false,
        "recursive": false,
        "recursiveStyleFx": "",
        "slotTarget": "",
        "defaultValue": "",
        "flexDirection": "row",
        "flexWrap": "nowrap",
        "alignItems": "",
        "justifyContent": "",
        "hGap": "",
        "vGap": "",
        "grid": {
          "row": {
            "value": "",
            "visible": true
          },
          "col": {
            "value": "",
            "visible": true
          },
          "use": false
        },
        "padding": ["", "", "", ""],
        "margin": ["", "", "", ""],
        "boxSizing": "border-box",
        "width": "",
        "height": "",
        "radius": ["", "", "", ""],
        "position": "",
        "positions": ["", "", "", ""],
        "zIndex": "",
        "flex": "",
        "flexGrow": "",
        "flexShrink": "",
        "fills": [],
        "borders": [],
        "effects": [],
        "states": [],
        "hoverClass": "",
        "overflow": "",
        "styleFx": "",
        "behave": "",
        "remoteFunc": "func_9gduvhxb",
        "remoteOption": "option_9gduvhxb",
        "tableColumn": false,
        "subform": false,
        "props": {},
        "datasource": {
          "rules": {
            "collectionId": "",
            "list": [
              {
                "id": 1723795236686,
                "parentId": 1723795236685,
                "isTop": true,
                "prop": "",
                "operator": "",
                "valueType": "",
                "value": "",
                "type": "leaf",
                "level": 1
              }
            ]
          }
        },
        "remote": false,
        "remoteType": "datasource",
        "url_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "valueLabel": ""
            }
          ]
        },
        "paging_enabled": 0,
        "paging_way": "Pagination",
        "page_size": 10,
        "more_fields": [],
        "body_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "valueLabel": ""
            }
          ]
        },
        "request_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "valueLabel": ""
            }
          ]
        }
      },
      "list": [
        {
          "name": "",
          "type": "utext",
          "el": "su-fm-text",
          "mainIcon": "文字",
          "typeIcon": "文字",
          "icon": "icon-wenzishezhi-",
          "group": "Design",
          "groupSort": 6,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "defaultValue": "Process Route",
            "customClass": "marginright",
            "hidden": false,
            "isRich": false,
            "padding": ["", "", "", ""],
            "margin": ["", "", "", ""],
            "boxSizing": "border-box",
            "width": "",
            "maxWidth": "",
            "lineHeight": "",
            "color": "#333333",
            "fontSize": "24px",
            "fontWeight": "700",
            "textAlign": "left",
            "fontStyle": "",
            "textOverflow": "",
            "whiteSpace": "",
            "lines": 0,
            "radius": ["", "", "", ""],
            "position": "",
            "positions": ["", "", "", ""],
            "zIndex": "",
            "flex": "",
            "flexGrow": "",
            "flexShrink": "",
            "fills": [],
            "borders": [],
            "effects": [],
            "states": [],
            "styleFx": "",
            "remoteFunc": "func_vn4w63lx",
            "remoteOption": "option_vn4w63lx",
            "tableColumn": false,
            "subform": false,
            "dynamicValueFx": "",
            "dynamicValueType": "fx",
            "isDynamicValue": false
          },
          "events": {
            "onClick": ""
          },
          "key": "vn4w63lx",
          "model": "process_title",
          "rules": []
        }
      ],
      "events": {
        "onClick": ""
      },
      "key": "9gduvhxb",
      "model": "flex_9gduvhxb",
      "rules": []
    },
    {
      "name": "Page Status",
      "type": "input",
      "mainIcon": "单行文本",
      "typeIcon": "多行文本",
      "icon": "icon-input",
      "group": "Text",
      "groupSort": 1,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-input",
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "dataType": "",
        "dataTypeCheck": false,
        "dataTypeMessage": "",
        "pattern": "",
        "patternCheck": false,
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "disabled": false,
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "showPassword": false,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_t81efiiy",
        "remoteOption": "option_t81efiiy",
        "tableColumn": false,
        "subform": false
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "novalid": {},
      "key": "g7q5xdr6",
      "model": "page_status",
      "rules": []
    },
    {
      "name": "Dialog",
      "type": "dialog",
      "mainIcon": "对话框",
      "typeIcon": "对话框",
      "icon": "icon-Dialog",
      "group": "Container",
      "groupSort": 2,
      "enableScopes": ["Component", "Table", "Page"],
      "options": {
        "defaultValue": {},
        "visible": false,
        "drawerMode": false,
        "customClass": "",
        "title": "This Item Has A Main Process Route",
        "width": "",
        "top": "15vh",
        "center": false,
        "cancelText": "Cancel",
        "showClose": true,
        "okText": "Confirm",
        "showCancel": true,
        "showOk": true,
        "confirmLoading": false,
        "dataBind": true,
        "remoteFunc": "func_g11fy0pa",
        "remoteOption": "option_g11fy0pa",
        "tableColumn": false,
        "subform": false
      },
      "list": [
        {
          "name": "Process Route No.",
          "type": "input",
          "mainIcon": "单行文本",
          "typeIcon": "多行文本",
          "icon": "icon-input",
          "group": "Text",
          "groupSort": 1,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-input",
          "options": {
            "width": "",
            "defaultValue": "",
            "required": false,
            "requiredMessage": "",
            "dataType": "",
            "dataTypeCheck": false,
            "dataTypeMessage": "",
            "pattern": "",
            "patternCheck": false,
            "patternMessage": "",
            "validatorCheck": false,
            "validator": "",
            "placeholder": "",
            "customClass": "",
            "disabled": true,
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "showPassword": false,
            "clearable": false,
            "maxlength": "",
            "showWordLimit": false,
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_a6zr48vc",
            "remoteOption": "option_a6zr48vc",
            "tableColumn": false,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "key": "a6zr48vc",
          "model": "main_process_route",
          "rules": []
        },
        {
          "name": "Confirm To Change New Main Process Route",
          "type": "text",
          "mainIcon": "文字",
          "typeIcon": "文字",
          "icon": "icon-wenzishezhi-",
          "group": "View",
          "groupSort": 1,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "defaultValue": "",
            "customClass": "",
            "labelWidth": 400,
            "isLabelWidth": true,
            "hidden": false,
            "dataBind": true,
            "required": false,
            "width": "",
            "tip": "",
            "color": "",
            "fontSize": "",
            "lineHeight": "",
            "fontWeight": "",
            "textAlign": "",
            "textDecoration": "",
            "fontStyle": "",
            "margin": "",
            "border": "",
            "padding": "",
            "lines": 0,
            "remoteFunc": "func_fg0cadlp",
            "remoteOption": "option_fg0cadlp",
            "tableColumn": false,
            "subform": false
          },
          "events": {
            "onChange": ""
          },
          "key": "fg0cadlp",
          "model": "text_fg0cadlp",
          "rules": []
        },
        {
          "name": "process route id",
          "type": "input",
          "mainIcon": "单行文本",
          "typeIcon": "多行文本",
          "icon": "icon-input",
          "group": "Text",
          "groupSort": 1,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-input",
          "options": {
            "width": "",
            "defaultValue": "",
            "required": false,
            "requiredMessage": "",
            "dataType": "",
            "dataTypeCheck": false,
            "dataTypeMessage": "",
            "pattern": "",
            "patternCheck": false,
            "patternMessage": "",
            "validatorCheck": false,
            "validator": "",
            "placeholder": "",
            "customClass": "",
            "disabled": true,
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": true,
            "dataBind": true,
            "showPassword": false,
            "clearable": false,
            "maxlength": "",
            "showWordLimit": false,
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_55dskdim",
            "remoteOption": "option_55dskdim",
            "tableColumn": false,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "key": "55dskdim",
          "model": "process_route_id",
          "rules": []
        }
      ],
      "events": {
        "onCancel": "q0n9sg1r",
        "onConfirm": "k4usje7f"
      },
      "key": "g11fy0pa",
      "model": "default_dialog",
      "rules": []
    },
    {
      "name": "Card",
      "type": "card",
      "mainIcon": "卡片",
      "typeIcon": "卡片",
      "icon": "icon-kapian",
      "group": "Layout",
      "groupSort": 5,
      "enableScopes": ["Component", "Table", "Page"],
      "list": [
        {
          "name": "Plant",
          "type": "treeselect",
          "mainIcon": "下拉树状单选",
          "typeIcon": "下拉树状单选",
          "icon": "icon-shuxuanzeqi",
          "group": "Select",
          "groupSort": 4,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "defaultValue": "",
            "width": "",
            "placeholder": "",
            "disabled": false,
            "clearable": true,
            "options": [
              {
                "value": "Option 1",
                "label": "Option 1",
                "children": [
                  {
                    "value": "Option 1 - children",
                    "label": "Option 1 - children"
                  }
                ]
              },
              {
                "value": "Option 2",
                "label": "Option 2",
                "children": [
                  {
                    "value": "Option 2 - children",
                    "label": "Option 2 - children"
                  }
                ]
              },
              {
                "value": "Option 3",
                "label": "Option 3"
              }
            ],
            "remote": true,
            "remoteType": "innerdatasource",
            "remoteOption": "option_0mk7xl3f",
            "remoteOptions": [],
            "props": {
              "value": "id",
              "label": "dept_name",
              "children": "children",
              "cascade": "",
              "image": "",
              "icon": ""
            },
            "remoteFunc": "func_0mk7xl3f",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "required": true,
            "validatorCheck": false,
            "validator": "",
            "multiple": false,
            "filterable": true,
            "checkStrictly": false,
            "customProps": {},
            "tip": "",
            "tableColumn": false,
            "subform": false,
            "paging_enabled": 0,
            "paging_way": "Pagination",
            "page_size": 10,
            "more_fields": [],
            "columns": [],
            "datasource": {
              "source": "组织机构(勿删勿改):Table:1789995126399348747",
              "rules": {
                "collectionId": "1789995126399348747",
                "list": [
                  {
                    "id": 1748401843379,
                    "parentId": 1748401843380,
                    "isTop": true,
                    "type": "branch",
                    "operator": "any",
                    "prop": "",
                    "valueType": "",
                    "value": "",
                    "level": 1,
                    "children": [
                      {
                        "id": 1748401843382,
                        "isTop": false,
                        "parentId": 1748401843379,
                        "type": "branch",
                        "operator": "all",
                        "level": 2,
                        "children": [
                          {
                            "id": 1723795236686,
                            "parentId": 1748401843382,
                            "isTop": false,
                            "prop": "id",
                            "operator": "numberEqual",
                            "valueType": "field",
                            "value": "{{system:deptIds}}",
                            "type": "leaf",
                            "level": 3,
                            "propLabel": "主键ID",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "字段"
                          },
                          {
                            "id": 1748401843383,
                            "parentId": 1748401843382,
                            "isTop": false,
                            "prop": "parent_id",
                            "operator": "numberEqual",
                            "valueType": "field",
                            "value": "{{global:deptParentId}}",
                            "type": "leaf",
                            "level": 3,
                            "propLabel": "父主键",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "字段"
                          }
                        ]
                      },
                      {
                        "id": 1748401843384,
                        "isTop": false,
                        "parentId": 1748401843379,
                        "type": "branch",
                        "operator": "all",
                        "level": 2,
                        "children": [
                          {
                            "id": 1748401843381,
                            "parentId": 1748401843384,
                            "isTop": false,
                            "prop": "id",
                            "operator": "in",
                            "valueType": "formula",
                            "value": "{{global:deptIdList}}.split(',')",
                            "type": "leaf",
                            "level": 3,
                            "propLabel": "主键ID",
                            "valueLabel": "",
                            "operatorLabel": "等于任意一个",
                            "valueTypeLabel": "公式"
                          },
                          {
                            "id": 1748401843385,
                            "parentId": 1748401843384,
                            "isTop": false,
                            "prop": "parent_id",
                            "operator": "numberEqual",
                            "valueType": "field",
                            "value": "{{system:deptIds}}",
                            "type": "leaf",
                            "level": 3,
                            "propLabel": "父主键",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "字段"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "url_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "valueLabel": ""
                }
              ]
            },
            "body_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "valueLabel": ""
                }
              ]
            },
            "request_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "valueLabel": ""
                }
              ]
            }
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "key": "0mk7xl3f",
          "model": "plant_id",
          "rules": [
            {
              "required": true,
              "message": ""
            }
          ]
        },
        {
          "name": "Item Code",
          "el": "su-fm-table-select",
          "mainIcon": "数据源",
          "typeIcon": "数据源",
          "group": "Select",
          "groupSort": 4,
          "generate": "part",
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "disabled": false,
            "dataBind": true,
            "required": true,
            "validator": "",
            "hideLabel": false,
            "pageSourceId": "1921600217086271489",
            "customProps": {},
            "pagingEnabled": true,
            "multiple": false,
            "placeholder": "",
            "lazyLoad": true,
            "props": {
              "value": "id",
              "label": "material_code",
              "cascade": "",
              "children": "",
              "image": "",
              "icon": ""
            },
            "datasource": {
              "source": "Item:Table:1901546842240438273",
              "rules": {
                "collectionId": "1901546842240438273",
                "list": [
                  {
                    "id": 1748336954624,
                    "parentId": 1748336954625,
                    "isTop": true,
                    "type": "branch",
                    "operator": "all",
                    "prop": "",
                    "valueType": "",
                    "value": "",
                    "level": 1,
                    "children": [
                      {
                        "id": 1748336949705,
                        "parentId": 1748336954624,
                        "isTop": false,
                        "prop": "is_active",
                        "operator": "numberEqual",
                        "valueType": "value",
                        "value": 1,
                        "type": "leaf",
                        "level": 2,
                        "propLabel": "Active",
                        "valueLabel": "",
                        "operatorLabel": "等于",
                        "valueTypeLabel": "值"
                      },
                      {
                        "id": 1748336954627,
                        "isTop": false,
                        "parentId": 1748336954624,
                        "type": "branch",
                        "operator": "any",
                        "level": 2,
                        "children": [
                          {
                            "id": 1748336954626,
                            "parentId": 1748336954627,
                            "isTop": false,
                            "prop": "organization_id",
                            "operator": "equal",
                            "valueType": "field",
                            "value": "{{system:deptIds}}",
                            "type": "leaf",
                            "level": 3,
                            "propLabel": "Organization",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "值"
                          },
                          {
                            "id": 1748336954628,
                            "parentId": 1748336954627,
                            "isTop": false,
                            "prop": "organization_id",
                            "operator": "equal",
                            "valueType": "field",
                            "value": "{{global:deptParentId}}",
                            "type": "leaf",
                            "level": 3,
                            "propLabel": "Organization",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "值"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "remoteFunc": "func_ntyfz0of",
            "remoteOption": "option_ntyfz0of",
            "tableColumn": false,
            "subform": false,
            "paging_enabled": 1,
            "paging_way": "Pagination",
            "page_size": 10,
            "more_fields": [],
            "columns": [
              {
                "value": "material_code",
                "label": "Item Code",
                "item": {
                  "bsonType": "string",
                  "defaultValue": "",
                  "description": "Item Code",
                  "encryptedKey": false,
                  "errorMessage": {
                    "format": "",
                    "pattern": "",
                    "required": ""
                  },
                  "format": "",
                  "historyKey": false,
                  "immutableKey": false,
                  "isRequired": true,
                  "key": "2lx6vnxk",
                  "name": "material_code",
                  "pattern": "",
                  "persistField": true,
                  "primaryKey": false,
                  "title": "Item Code",
                  "validator": "const page_status = this.getValue(\"page_status\");\n\nif (page_status === \"View\" || !value) {\n  callback();\n  return;\n}\n\nlet organizationId = this.getVarGlobal('deptParentId');\nif(organizationId === '0'){\n    organizationId = this.getVarSystem('deptIds').split(',')[0];\n}\n\n\ndb.collection(\"Item\")\n  .where({ material_code: value, organization_id: organizationId })\n  .get()\n  .then((response) => {\n    const matchingItems = response.data || [];\n\n    if (matchingItems.length === 0) {\n      callback();\n      return;\n    }\n\n    if (page_status === \"Edit\") {\n      const currentItemId = this.getValue(\"id\");\n      const isSameItem = matchingItems.some(\n        (item) => item.id === currentItemId\n      );\n      callback(isSameItem ? undefined : \"Item code already exists.\");\n    } else {\n      callback(\"Item code already exists.\");\n    }\n  })\n  .catch((error) => {\n    console.error(\"Error checking item:\", error);\n    callback(\"Error validating item code.\");\n  });\n"
                }
              },
              {
                "value": "material_name",
                "label": "Item Name",
                "item": {
                  "bsonType": "string",
                  "defaultValue": "",
                  "description": "Item Name",
                  "encryptedKey": false,
                  "errorMessage": {
                    "format": "",
                    "pattern": "",
                    "required": ""
                  },
                  "format": "",
                  "historyKey": false,
                  "immutableKey": false,
                  "isRequired": true,
                  "key": "fol922c5",
                  "name": "material_name",
                  "pattern": "",
                  "persistField": true,
                  "primaryKey": false,
                  "title": "Item Name"
                }
              }
            ],
            "url_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "valueLabel": ""
                }
              ]
            },
            "body_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "valueLabel": ""
                }
              ]
            },
            "request_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "valueLabel": ""
                }
              ]
            },
            "remote": true,
            "remoteType": "innerdatasource",
            "pageId": "1921600217140797441"
          },
          "events": {
            "onChange": "7xvc1t7j"
          },
          "type": "custom",
          "key": "ntyfz0of",
          "model": "material_code",
          "rules": [
            {
              "required": true,
              "message": ""
            }
          ]
        },
        {
          "name": "Item Name",
          "type": "input",
          "mainIcon": "单行文本",
          "typeIcon": "多行文本",
          "icon": "icon-input",
          "group": "Text",
          "groupSort": 1,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-input",
          "options": {
            "width": "",
            "defaultValue": "",
            "required": false,
            "requiredMessage": "",
            "dataType": "",
            "dataTypeCheck": false,
            "dataTypeMessage": "",
            "pattern": "",
            "patternCheck": false,
            "patternMessage": "",
            "validatorCheck": false,
            "validator": "",
            "placeholder": "",
            "customClass": "",
            "disabled": true,
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "showPassword": false,
            "clearable": false,
            "maxlength": "",
            "showWordLimit": false,
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_a7dr3sgr",
            "remoteOption": "option_a7dr3sgr",
            "tableColumn": false,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "key": "a7dr3sgr",
          "model": "material_name",
          "rules": []
        },
        {
          "name": "Item Description",
          "type": "textarea",
          "mainIcon": "多行文本",
          "typeIcon": "多行文本(1)",
          "icon": "icon-diy-com-textarea",
          "group": "Text",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "width": "",
            "defaultValue": "",
            "required": false,
            "requiredMessage": "",
            "disabled": true,
            "pattern": "",
            "patternMessage": "",
            "validatorCheck": false,
            "validator": "",
            "placeholder": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "clearable": false,
            "maxlength": "",
            "showWordLimit": false,
            "rows": 1,
            "autosize": true,
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_to266ona",
            "remoteOption": "option_to266ona",
            "tableColumn": false,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "key": "to266ona",
          "model": "material_desc",
          "rules": []
        },
        {
          "name": "BOM Version",
          "type": "select",
          "mainIcon": "下拉单选",
          "typeIcon": "下拉单选",
          "icon": "icon-select",
          "group": "Select",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-select",
          "options": {
            "defaultValue": "",
            "multiple": false,
            "disabled": true,
            "clearable": true,
            "placeholder": "",
            "required": true,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "width": "",
            "options": [
              {
                "value": "Option 1",
                "label": "Option 1"
              },
              {
                "value": "Option 2",
                "label": "Option 2"
              },
              {
                "value": "Option 3",
                "label": "Option 3"
              }
            ],
            "remote": true,
            "remoteType": "innerdatasource",
            "remoteOption": "option_uji42bhe",
            "filterable": true,
            "pagingEnabled": true,
            "remoteOptions": [],
            "props": {
              "value": "id",
              "label": "parent_mat_bom_version",
              "cascade": "",
              "children": "",
              "image": "",
              "icon": ""
            },
            "remoteFunc": "func_uji42bhe",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "customProps": {},
            "tip": "",
            "tableColumn": false,
            "subform": false,
            "paging_enabled": 1,
            "paging_way": "Pagination",
            "page_size": 10,
            "more_fields": [],
            "datasource": {
              "source": "Bill of Materials:Table:1902195284188975106",
              "rules": {
                "collectionId": "1902195284188975106",
                "list": [
                  {
                    "id": 1747574735407,
                    "parentId": 1747574735406,
                    "isTop": true,
                    "prop": "",
                    "operator": "",
                    "valueType": "",
                    "value": "",
                    "type": "leaf",
                    "level": 1
                  }
                ]
              }
            },
            "url_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "valueLabel": ""
                }
              ]
            },
            "body_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "valueLabel": ""
                }
              ]
            },
            "request_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "valueLabel": ""
                }
              ]
            },
            "columns": []
          },
          "events": {
            "onChange": "4ya3bzxz",
            "onFocus": "",
            "onBlur": ""
          },
          "key": "uji42bhe",
          "model": "bom_version",
          "rules": [
            {
              "required": true,
              "message": ""
            }
          ]
        },
        {
          "name": "Process Route Name",
          "type": "input",
          "mainIcon": "单行文本",
          "typeIcon": "多行文本",
          "icon": "icon-input",
          "group": "Text",
          "groupSort": 1,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-input",
          "options": {
            "width": "",
            "defaultValue": "",
            "required": true,
            "requiredMessage": "",
            "dataType": "",
            "dataTypeCheck": false,
            "dataTypeMessage": "",
            "pattern": "",
            "patternCheck": false,
            "patternMessage": "",
            "validatorCheck": false,
            "validator": "",
            "placeholder": "",
            "customClass": "",
            "disabled": false,
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "showPassword": false,
            "clearable": false,
            "maxlength": "",
            "showWordLimit": false,
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_zcwjeljr",
            "remoteOption": "option_zcwjeljr",
            "tableColumn": false,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "zcwjeljr",
          "model": "process_route_name",
          "rules": [
            {
              "required": true,
              "message": ""
            }
          ]
        },
        {
          "name": "Process Route No.",
          "type": "input",
          "mainIcon": "单行文本",
          "typeIcon": "多行文本",
          "icon": "icon-input",
          "group": "Text",
          "groupSort": 1,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-input",
          "options": {
            "width": "",
            "defaultValue": "",
            "required": true,
            "requiredMessage": "",
            "dataType": "",
            "dataTypeCheck": false,
            "dataTypeMessage": "",
            "pattern": "",
            "patternCheck": false,
            "patternMessage": "",
            "validatorCheck": false,
            "validator": "",
            "placeholder": "",
            "customClass": "",
            "disabled": true,
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "showPassword": false,
            "clearable": false,
            "maxlength": "",
            "showWordLimit": false,
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_t81efiiy",
            "remoteOption": "option_t81efiiy",
            "tableColumn": false,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "t81efiiy",
          "model": "process_route_no",
          "rules": [
            {
              "required": true,
              "message": ""
            }
          ]
        },
        {
          "name": "Organization",
          "type": "input",
          "mainIcon": "单行文本",
          "typeIcon": "多行文本",
          "icon": "icon-input",
          "group": "Text",
          "groupSort": 1,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-input",
          "options": {
            "width": "",
            "defaultValue": "",
            "required": false,
            "requiredMessage": "",
            "dataType": "",
            "dataTypeCheck": false,
            "dataTypeMessage": "",
            "pattern": "",
            "patternCheck": false,
            "patternMessage": "",
            "validatorCheck": false,
            "validator": "",
            "placeholder": "",
            "customClass": "",
            "disabled": false,
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": true,
            "dataBind": true,
            "showPassword": false,
            "clearable": false,
            "maxlength": "",
            "showWordLimit": false,
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_t81efiiy",
            "remoteOption": "option_t81efiiy",
            "tableColumn": false,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "a4zxejrn",
          "model": "organization_id",
          "rules": []
        },
        {
          "name": "Main Process Route",
          "type": "switch",
          "mainIcon": "开关",
          "typeIcon": "开关",
          "icon": "icon-switch",
          "group": "Select",
          "groupSort": 8,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "defaultValue": 0,
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "disabled": false,
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "width": "250px",
            "customProps": {},
            "tip": "",
            "booleanValueMode": false,
            "alignright": false,
            "checkboxMode": true,
            "remoteFunc": "func_knva11pu",
            "remoteOption": "option_knva11pu",
            "tableColumn": false,
            "subform": false
          },
          "events": {
            "onChange": "rhe9v0bb"
          },
          "novalid": {},
          "key": "knva11pu",
          "model": "is_main_process_route",
          "rules": []
        }
      ],
      "options": {
        "title": "Process Route Details",
        "showHeader": true,
        "bordered": true,
        "customClass": "",
        "shadow": "always",
        "width": "",
        "padding": "10px",
        "hidden": false,
        "remoteFunc": "func_62mczie2",
        "remoteOption": "option_62mczie2",
        "tableColumn": false,
        "subform": false
      },
      "key": "62mczie2",
      "model": "card_62mczie2",
      "rules": []
    },
    {
      "name": "Card",
      "type": "card",
      "mainIcon": "卡片",
      "typeIcon": "卡片",
      "icon": "icon-kapian",
      "group": "Layout",
      "groupSort": 5,
      "enableScopes": ["Component", "Table", "Page"],
      "list": [
        {
          "name": "Sub-Form",
          "type": "table",
          "mainIcon": "子表单",
          "typeIcon": "子表单",
          "icon": "icon-table",
          "group": "Container",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "defaultValue": [],
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "disabled": false,
            "required": false,
            "validatorCheck": false,
            "validator": "",
            "paging": false,
            "pageSize": 5,
            "isAdd": true,
            "isDelete": true,
            "showControl": true,
            "virtualTable": true,
            "sortable": true,
            "tip": "",
            "remoteFunc": "func_yes81y2n",
            "remoteOption": "option_yes81y2n",
            "tableColumn": false,
            "subform": false,
            "hideLabel": true
          },
          "events": {
            "onChange": "",
            "onRowAdd": "",
            "onRowRemove": "",
            "onPageChange": ""
          },
          "tableColumns": [
            {
              "name": "index",
              "type": "number",
              "icon": "icon-number",
              "mainIcon": "数字",
              "typeIcon": "数字",
              "group": "Number",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-number",
              "options": {
                "width": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "defaultValue": 0,
                "min": 0,
                "step": 1,
                "disabled": true,
                "controls": false,
                "controlsPosition": "",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "precision": 0,
                "customProps": {
                  "progressColor": "",
                  "dividingNumber": "",
                  "showNumber": "",
                  "viewMode": "",
                  "format": "rmb",
                  "cacheProp": true
                },
                "tip": "",
                "remoteFunc": "func_5tf5jogn",
                "remoteOption": "option_5tf5jogn",
                "tableColumn": true,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "5tf5jogn",
              "model": "index_no",
              "rules": []
            },
            {
              "name": "Process No",
              "type": "select",
              "mainIcon": "下拉单选",
              "typeIcon": "下拉单选",
              "icon": "icon-select",
              "group": "Select",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-select",
              "options": {
                "defaultValue": "",
                "multiple": false,
                "disabled": false,
                "clearable": true,
                "placeholder": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "width": "",
                "options": [
                  {
                    "value": "Option 1",
                    "label": "Option 1"
                  },
                  {
                    "value": "Option 2",
                    "label": "Option 2"
                  },
                  {
                    "value": "Option 3",
                    "label": "Option 3"
                  }
                ],
                "remote": true,
                "remoteType": "innerdatasource",
                "remoteOption": "option_137pdhes",
                "filterable": true,
                "pagingEnabled": true,
                "remoteOptions": [],
                "props": {
                  "value": "id",
                  "label": "process_no",
                  "cascade": "",
                  "children": "",
                  "image": "",
                  "icon": ""
                },
                "remoteFunc": "func_137pdhes",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "customProps": {},
                "tip": "",
                "tableColumn": true,
                "subform": false,
                "paging_enabled": 1,
                "paging_way": "Pagination",
                "page_size": 10,
                "more_fields": [],
                "datasource": {
                  "source": "Process:Table:1902216155611910145",
                  "rules": {
                    "collectionId": "1902216155611910145",
                    "list": [
                      {
                        "id": 1723795236686,
                        "parentId": 1723795236685,
                        "isTop": true,
                        "prop": "plant_id",
                        "operator": "numberEqual",
                        "valueType": "field",
                        "value": "{{value:plant_id}}",
                        "type": "leaf",
                        "level": 1,
                        "propLabel": "Plant",
                        "valueLabel": "",
                        "operatorLabel": "等于",
                        "valueTypeLabel": "值"
                      }
                    ]
                  }
                },
                "url_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "valueLabel": ""
                    }
                  ]
                },
                "body_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "valueLabel": ""
                    }
                  ]
                },
                "request_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "valueLabel": ""
                    }
                  ]
                },
                "columns": []
              },
              "events": {
                "onChange": "iq5ab2je",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "137pdhes",
              "model": "process_no",
              "rules": []
            },
            {
              "name": "Process Name",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": true,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_703w77k4",
                "remoteOption": "option_703w77k4",
                "tableColumn": true,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "703w77k4",
              "model": "process_name",
              "rules": []
            },
            {
              "name": "Process Category",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": true,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_c0aj8dtn",
                "remoteOption": "option_c0aj8dtn",
                "tableColumn": true,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "c0aj8dtn",
              "model": "process_category",
              "rules": []
            }
          ],
          "key": "yes81y2n",
          "model": "process_table",
          "rules": []
        }
      ],
      "options": {
        "title": "Production Process",
        "showHeader": true,
        "bordered": true,
        "customClass": "",
        "shadow": "always",
        "width": "",
        "padding": "10px",
        "hidden": false,
        "remoteFunc": "func_yb4y60vm",
        "remoteOption": "option_yb4y60vm",
        "tableColumn": false,
        "subform": false
      },
      "key": "yb4y60vm",
      "model": "card_yb4y60vm",
      "rules": []
    },
    {
      "name": "Card",
      "type": "card",
      "mainIcon": "卡片",
      "typeIcon": "卡片",
      "icon": "icon-kapian",
      "group": "Layout",
      "groupSort": 5,
      "enableScopes": ["Component", "Table", "Page"],
      "list": [
        {
          "name": "Material Consumption Table",
          "type": "table",
          "mainIcon": "子表单",
          "typeIcon": "子表单",
          "icon": "icon-table",
          "group": "Container",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "defaultValue": [],
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "disabled": false,
            "required": false,
            "validatorCheck": false,
            "validator": "",
            "paging": false,
            "pageSize": 5,
            "isAdd": false,
            "isDelete": false,
            "showControl": true,
            "virtualTable": true,
            "sortable": true,
            "tip": "",
            "remoteFunc": "func_axsjay1a",
            "remoteOption": "option_axsjay1a",
            "tableColumn": false,
            "subform": false,
            "hideLabel": true
          },
          "events": {
            "onChange": "",
            "onRowAdd": "",
            "onRowRemove": "",
            "onPageChange": ""
          },
          "tableColumns": [
            {
              "name": "Material Code",
              "type": "select",
              "mainIcon": "下拉单选",
              "typeIcon": "下拉单选",
              "icon": "icon-select",
              "group": "Select",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-select",
              "options": {
                "defaultValue": "",
                "multiple": false,
                "disabled": true,
                "clearable": true,
                "placeholder": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "width": "",
                "options": [
                  {
                    "value": "Option 1",
                    "label": "Option 1"
                  },
                  {
                    "value": "Option 2",
                    "label": "Option 2"
                  },
                  {
                    "value": "Option 3",
                    "label": "Option 3"
                  }
                ],
                "remote": true,
                "remoteType": "innerdatasource",
                "remoteOption": "option_bvimkadg",
                "filterable": true,
                "pagingEnabled": true,
                "remoteOptions": [],
                "props": {
                  "value": "id",
                  "label": "material_code",
                  "cascade": "",
                  "children": "",
                  "image": "",
                  "icon": ""
                },
                "remoteFunc": "func_bvimkadg",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "customProps": {},
                "tip": "",
                "tableColumn": true,
                "subform": false,
                "paging_enabled": 1,
                "paging_way": "Pagination",
                "page_size": 10,
                "more_fields": [],
                "datasource": {
                  "source": "Item:Table:1901546842240438273",
                  "rules": {
                    "collectionId": "1901546842240438273",
                    "list": [
                      {
                        "id": 1746697655406,
                        "parentId": 1746697655407,
                        "isTop": true,
                        "type": "branch",
                        "operator": "all",
                        "prop": "",
                        "valueType": "",
                        "value": "",
                        "level": 1,
                        "children": [
                          {
                            "id": 1723795236686,
                            "parentId": 1746697655406,
                            "isTop": false,
                            "prop": "is_active",
                            "operator": "numberEqual",
                            "valueType": "value",
                            "value": 1,
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "Active",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "值"
                          },
                          {
                            "id": 1746697655409,
                            "isTop": false,
                            "parentId": 1746697655406,
                            "type": "branch",
                            "operator": "any",
                            "level": 2,
                            "children": [
                              {
                                "id": 1746697655408,
                                "parentId": 1746697655409,
                                "isTop": false,
                                "prop": "organization_id",
                                "operator": "equal",
                                "valueType": "field",
                                "value": "{{system:deptIds}}",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "Organization",
                                "valueLabel": "",
                                "operatorLabel": "等于",
                                "valueTypeLabel": "字段"
                              },
                              {
                                "id": 1746697655410,
                                "parentId": 1746697655409,
                                "isTop": false,
                                "prop": "organization_id",
                                "operator": "equal",
                                "valueType": "field",
                                "value": "{{global:deptParentId}}",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "Organization",
                                "valueLabel": "",
                                "operatorLabel": "等于",
                                "valueTypeLabel": "值"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                "url_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "valueLabel": ""
                    }
                  ]
                },
                "body_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "valueLabel": ""
                    }
                  ]
                },
                "request_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "valueLabel": ""
                    }
                  ]
                }
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "key": "c8n2udcp",
              "model": "bom_material_code",
              "rules": [],
              "novalid": {}
            },
            {
              "name": "Material Name",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": true,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_gvbhmnsq",
                "remoteOption": "option_gvbhmnsq",
                "tableColumn": true,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "gvbhmnsq",
              "model": "bom_material_name",
              "rules": []
            },
            {
              "name": "Material Category",
              "type": "select",
              "mainIcon": "下拉单选",
              "typeIcon": "下拉单选",
              "icon": "icon-select",
              "group": "Select",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-select",
              "options": {
                "defaultValue": "",
                "multiple": false,
                "disabled": true,
                "clearable": true,
                "placeholder": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "width": "",
                "options": [
                  {
                    "value": "Option 1",
                    "label": "Option 1"
                  },
                  {
                    "value": "Option 2",
                    "label": "Option 2"
                  },
                  {
                    "value": "Option 3",
                    "label": "Option 3"
                  }
                ],
                "remote": true,
                "remoteType": "innerdatasource",
                "remoteOption": "option_s521afjo",
                "filterable": true,
                "pagingEnabled": true,
                "remoteOptions": [],
                "props": {
                  "value": "id",
                  "label": "mat_cat_name",
                  "cascade": "",
                  "children": "",
                  "image": "",
                  "icon": ""
                },
                "remoteFunc": "func_s521afjo",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "customProps": {},
                "tip": "",
                "tableColumn": true,
                "subform": false,
                "paging_enabled": 0,
                "paging_way": "Pagination",
                "page_size": 10,
                "more_fields": [],
                "datasource": {
                  "source": "Material Category:Table:1901981572257665025",
                  "rules": {
                    "collectionId": "1901981572257665025",
                    "list": [
                      {
                        "id": 1723795236686,
                        "parentId": 1723795236685,
                        "isTop": true,
                        "prop": "",
                        "operator": "",
                        "valueType": "",
                        "value": "",
                        "type": "leaf",
                        "level": 1
                      }
                    ]
                  }
                },
                "url_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "valueLabel": ""
                    }
                  ]
                },
                "body_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "valueLabel": ""
                    }
                  ]
                },
                "request_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "valueLabel": ""
                    }
                  ]
                }
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "s521afjo",
              "model": "bom_material_category",
              "rules": []
            },
            {
              "name": "Quantity",
              "type": "number",
              "icon": "icon-number",
              "mainIcon": "数字",
              "typeIcon": "数字",
              "group": "Number",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-number",
              "options": {
                "width": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "defaultValue": 0,
                "min": 0,
                "step": 1,
                "disabled": false,
                "controls": false,
                "controlsPosition": "",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "precision": 0,
                "customProps": {
                  "progressColor": "",
                  "dividingNumber": "",
                  "showNumber": "",
                  "viewMode": "",
                  "format": "rmb",
                  "cacheProp": true
                },
                "tip": "",
                "remoteFunc": "func_l9ceftoh",
                "remoteOption": "option_l9ceftoh",
                "tableColumn": true,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "l9ceftoh",
              "model": "quantity",
              "rules": []
            },
            {
              "name": "Quantity (UOM)",
              "type": "select",
              "mainIcon": "下拉单选",
              "typeIcon": "下拉单选",
              "icon": "icon-select",
              "group": "Select",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-select",
              "options": {
                "defaultValue": "",
                "multiple": false,
                "disabled": true,
                "clearable": true,
                "placeholder": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "width": "",
                "options": [
                  {
                    "value": "Option 1",
                    "label": "Option 1"
                  },
                  {
                    "value": "Option 2",
                    "label": "Option 2"
                  },
                  {
                    "value": "Option 3",
                    "label": "Option 3"
                  }
                ],
                "remote": true,
                "remoteType": "innerdatasource",
                "remoteOption": "option_s521afjo",
                "filterable": true,
                "pagingEnabled": true,
                "remoteOptions": [],
                "props": {
                  "value": "id",
                  "label": "uom_name",
                  "cascade": "",
                  "children": "",
                  "image": "",
                  "icon": ""
                },
                "remoteFunc": "func_s521afjo",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "customProps": {},
                "tip": "",
                "tableColumn": true,
                "subform": false,
                "paging_enabled": 1,
                "paging_way": "Pagination",
                "page_size": 10,
                "more_fields": [],
                "datasource": {
                  "source": "UOM:Table:1901805375573839874",
                  "rules": {
                    "collectionId": "1901805375573839874",
                    "list": [
                      {
                        "id": 1747621850044,
                        "parentId": 1747621850043,
                        "isTop": true,
                        "prop": "",
                        "operator": "",
                        "valueType": "",
                        "value": "",
                        "type": "leaf",
                        "level": 1
                      }
                    ]
                  }
                },
                "url_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "valueLabel": ""
                    }
                  ]
                },
                "body_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "valueLabel": ""
                    }
                  ]
                },
                "request_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "valueLabel": ""
                    }
                  ]
                }
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "90gd6zaq",
              "model": "base_uom",
              "rules": []
            },
            {
              "name": "Input Process",
              "type": "select",
              "mainIcon": "下拉单选",
              "typeIcon": "下拉单选",
              "icon": "icon-select",
              "group": "Select",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-select",
              "options": {
                "defaultValue": "",
                "multiple": false,
                "disabled": true,
                "clearable": true,
                "placeholder": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "width": "",
                "options": [
                  {
                    "value": "Option 1",
                    "label": "Option 1"
                  },
                  {
                    "value": "Option 2",
                    "label": "Option 2"
                  },
                  {
                    "value": "Option 3",
                    "label": "Option 3"
                  }
                ],
                "remote": true,
                "remoteType": "innerdatasource",
                "remoteOption": "option_q5h6zr2d",
                "filterable": true,
                "pagingEnabled": true,
                "remoteOptions": [],
                "props": {
                  "value": "id",
                  "label": "process_name",
                  "cascade": "",
                  "children": "",
                  "image": "",
                  "icon": ""
                },
                "remoteFunc": "func_q5h6zr2d",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "customProps": {},
                "tip": "",
                "tableColumn": true,
                "subform": false,
                "paging_enabled": 1,
                "paging_way": "Pagination",
                "page_size": 10,
                "more_fields": [],
                "columns": [],
                "datasource": {
                  "source": "Process:Table:1902216155611910145",
                  "rules": {
                    "collectionId": "1902216155611910145",
                    "list": [
                      {
                        "id": 1748402208625,
                        "parentId": 1748402208624,
                        "isTop": true,
                        "prop": "",
                        "operator": "",
                        "valueType": "value",
                        "value": "",
                        "type": "leaf",
                        "level": 1
                      }
                    ]
                  }
                },
                "url_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "valueLabel": ""
                    }
                  ]
                },
                "body_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "valueLabel": ""
                    }
                  ]
                },
                "request_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "valueLabel": ""
                    }
                  ]
                }
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "q5h6zr2d",
              "model": "item_process_id",
              "rules": []
            },
            {
              "name": "Wastage",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_do2z7c8x",
                "remoteOption": "option_do2z7c8x",
                "tableColumn": true,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "do2z7c8x",
              "model": "wastage",
              "rules": []
            },
            {
              "name": "Warehouse",
              "type": "select",
              "mainIcon": "下拉单选",
              "typeIcon": "下拉单选",
              "icon": "icon-select",
              "group": "Select",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-select",
              "options": {
                "defaultValue": "",
                "multiple": false,
                "disabled": false,
                "clearable": true,
                "placeholder": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "width": "",
                "options": [
                  {
                    "value": "Option 1",
                    "label": "Option 1"
                  },
                  {
                    "value": "Option 2",
                    "label": "Option 2"
                  },
                  {
                    "value": "Option 3",
                    "label": "Option 3"
                  }
                ],
                "remote": true,
                "remoteType": "innerdatasource",
                "remoteOption": "option_uji42bhe",
                "filterable": true,
                "pagingEnabled": true,
                "remoteOptions": [],
                "props": {
                  "value": "id",
                  "label": "bin_location_combine",
                  "cascade": "",
                  "children": "",
                  "image": "",
                  "icon": ""
                },
                "remoteFunc": "func_uji42bhe",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "customProps": {},
                "tip": "",
                "tableColumn": true,
                "subform": false,
                "paging_enabled": 1,
                "paging_way": "Pagination",
                "page_size": 10,
                "more_fields": [],
                "datasource": {
                  "source": "Bin Location:Table:1902282127538507778",
                  "rules": {
                    "collectionId": "1902282127538507778",
                    "list": [
                      {
                        "id": 1747574828241,
                        "parentId": 1747574828242,
                        "isTop": true,
                        "type": "branch",
                        "operator": "all",
                        "prop": "",
                        "valueType": "",
                        "value": "",
                        "level": 1,
                        "children": [
                          {
                            "id": 1748402061272,
                            "isTop": false,
                            "parentId": 1747574828241,
                            "type": "branch",
                            "operator": "any",
                            "level": 2,
                            "children": [
                              {
                                "id": 1723795236686,
                                "parentId": 1748402061272,
                                "isTop": false,
                                "prop": "organization_id",
                                "operator": "equal",
                                "valueType": "field",
                                "value": "{{system:deptIds}}",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "Organization",
                                "valueLabel": "",
                                "operatorLabel": "等于",
                                "valueTypeLabel": "字段"
                              },
                              {
                                "id": 1748402061273,
                                "parentId": 1748402061272,
                                "isTop": false,
                                "prop": "organization_id",
                                "operator": "equal",
                                "valueType": "field",
                                "value": "{{global:deptParentId}}",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "Organization",
                                "valueLabel": "",
                                "operatorLabel": "等于",
                                "valueTypeLabel": "值"
                              }
                            ]
                          },
                          {
                            "id": 1747574828243,
                            "parentId": 1747574828241,
                            "isTop": false,
                            "prop": "plant_id",
                            "operator": "numberEqual",
                            "valueType": "field",
                            "value": "{{value:plant_id}}",
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "Plant",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "字段"
                          }
                        ]
                      }
                    ]
                  }
                },
                "url_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "valueLabel": ""
                    }
                  ]
                },
                "body_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "valueLabel": ""
                    }
                  ]
                },
                "request_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "valueLabel": ""
                    }
                  ]
                },
                "columns": []
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "key": "aslius7y",
              "model": "bin_location",
              "rules": [],
              "novalid": {}
            }
          ],
          "key": "axsjay1a",
          "model": "mat_consumption_table",
          "rules": []
        }
      ],
      "options": {
        "title": "Material Consumption",
        "showHeader": true,
        "bordered": true,
        "customClass": "",
        "shadow": "always",
        "width": "",
        "padding": "10px",
        "hidden": false,
        "remoteFunc": "func_5t3kqpx5",
        "remoteOption": "option_5t3kqpx5",
        "tableColumn": false,
        "subform": false
      },
      "key": "5t3kqpx5",
      "model": "card_5t3kqpx5",
      "rules": []
    },
    {
      "name": "Card",
      "type": "card",
      "mainIcon": "卡片",
      "typeIcon": "卡片",
      "icon": "icon-kapian",
      "group": "Layout",
      "groupSort": 5,
      "enableScopes": ["Component", "Table", "Page"],
      "list": [
        {
          "name": "Remark",
          "type": "textarea",
          "mainIcon": "多行文本",
          "typeIcon": "多行文本(1)",
          "icon": "icon-diy-com-textarea",
          "group": "Text",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "width": "",
            "defaultValue": "",
            "required": false,
            "requiredMessage": "",
            "disabled": false,
            "pattern": "",
            "patternMessage": "",
            "validatorCheck": false,
            "validator": "",
            "placeholder": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "clearable": false,
            "maxlength": "",
            "showWordLimit": false,
            "rows": 2,
            "autosize": false,
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_8axc1e1t",
            "remoteOption": "option_8axc1e1t",
            "tableColumn": false,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "key": "8axc1e1t",
          "model": "remark",
          "rules": []
        }
      ],
      "options": {
        "title": "Remarks",
        "showHeader": true,
        "bordered": true,
        "customClass": "",
        "shadow": "always",
        "width": "",
        "padding": "10px",
        "hidden": false,
        "remoteFunc": "func_tgf221hg",
        "remoteOption": "option_tgf221hg",
        "tableColumn": false,
        "subform": false
      },
      "key": "tgf221hg",
      "model": "card_tgf221hg",
      "rules": []
    },
    {
      "name": "Flex",
      "type": "flex",
      "el": "su-fm-flex",
      "mainIcon": "自动布局",
      "typeIcon": "自动布局",
      "icon": "icon-zhediemianban",
      "group": "Design",
      "groupSort": 6,
      "enableScopes": ["Component", "Table", "Page"],
      "options": {
        "title": "布局",
        "customClass": "",
        "hidden": false,
        "recursive": false,
        "recursiveStyleFx": "",
        "slotTarget": "",
        "defaultValue": "",
        "flexDirection": "column",
        "flexWrap": "",
        "alignItems": "",
        "justifyContent": "",
        "hGap": "",
        "vGap": "",
        "grid": {
          "row": {
            "value": "",
            "visible": true
          },
          "col": {
            "value": "",
            "visible": true
          },
          "use": false
        },
        "padding": ["", "", "", ""],
        "margin": ["", "", "", ""],
        "boxSizing": "border-box",
        "width": "",
        "height": "",
        "radius": ["", "", "", ""],
        "position": "",
        "positions": ["", "", "", ""],
        "zIndex": "",
        "flex": "",
        "flexGrow": "",
        "flexShrink": "",
        "fills": [
          {
            "type": "color",
            "value": "#ffffffff",
            "mode": "aspectFill",
            "rotate": "",
            "visible": true
          }
        ],
        "borders": [],
        "effects": [],
        "states": [],
        "hoverClass": "",
        "overflow": "",
        "styleFx": "",
        "behave": "",
        "remoteFunc": "func_n4zoki5b",
        "remoteOption": "option_n4zoki5b",
        "tableColumn": false,
        "subform": false,
        "props": {},
        "datasource": {
          "rules": {
            "collectionId": "",
            "list": [
              {
                "id": 1723795236686,
                "parentId": 1723795236685,
                "isTop": true,
                "prop": "",
                "operator": "",
                "valueType": "",
                "value": "",
                "type": "leaf",
                "level": 1
              }
            ]
          }
        },
        "remote": false,
        "remoteType": "datasource",
        "url_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "valueLabel": ""
            }
          ]
        },
        "body_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "valueLabel": ""
            }
          ]
        },
        "request_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "valueLabel": ""
            }
          ]
        }
      },
      "list": [],
      "events": {
        "onClick": ""
      },
      "key": "n4zoki5b",
      "model": "flex_n4zoki5b",
      "rules": []
    },
    {
      "name": "Flex",
      "type": "flex",
      "el": "su-fm-flex",
      "mainIcon": "自动布局",
      "typeIcon": "自动布局",
      "icon": "icon-zhediemianban",
      "group": "Design",
      "groupSort": 6,
      "enableScopes": ["Component", "Table", "Page"],
      "options": {
        "title": "布局",
        "customClass": "fixbutton",
        "hidden": false,
        "recursive": false,
        "recursiveStyleFx": "",
        "slotTarget": "",
        "defaultValue": "",
        "flexDirection": "row",
        "flexWrap": "nowrap",
        "alignItems": "flex-end",
        "justifyContent": "flex-end",
        "hGap": "",
        "vGap": "",
        "grid": {
          "row": {
            "value": "",
            "visible": true
          },
          "col": {
            "value": "",
            "visible": true
          },
          "use": false
        },
        "padding": ["", "", "", ""],
        "margin": ["", "", "", ""],
        "boxSizing": "border-box",
        "width": "60px",
        "height": "",
        "radius": ["", "", "", ""],
        "position": "",
        "positions": ["", "", "", ""],
        "zIndex": "",
        "flex": "",
        "flexGrow": "",
        "flexShrink": "",
        "fills": [],
        "borders": [],
        "effects": [],
        "states": [],
        "hoverClass": "",
        "overflow": "",
        "styleFx": "",
        "behave": "",
        "remoteFunc": "func_x3frfstv",
        "remoteOption": "option_x3frfstv",
        "tableColumn": false,
        "subform": false,
        "props": {},
        "datasource": {
          "rules": {
            "collectionId": "",
            "list": [
              {
                "id": 1723795236686,
                "parentId": 1723795236685,
                "isTop": true,
                "prop": "",
                "operator": "",
                "valueType": "",
                "value": "",
                "type": "leaf",
                "level": 1
              }
            ]
          }
        },
        "remote": false,
        "remoteType": "datasource",
        "url_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "valueLabel": ""
            }
          ]
        },
        "body_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "valueLabel": ""
            }
          ]
        },
        "request_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "valueLabel": ""
            }
          ]
        }
      },
      "list": [
        {
          "name": "Cancel",
          "type": "button",
          "mainIcon": "按钮",
          "typeIcon": "按钮",
          "icon": "icon-button",
          "group": "Buttons",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "customClass": "marginright",
            "disabled": false,
            "labelWidth": 100,
            "isLabelWidth": false,
            "hideLabel": true,
            "hidden": false,
            "buttonSize": "default",
            "buttonType": "info",
            "buttonPlain": true,
            "buttonRound": true,
            "buttonCircle": false,
            "buttonName": "Cancel",
            "width": "",
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_115gv45g",
            "remoteOption": "option_115gv45g",
            "tableColumn": false,
            "subform": false
          },
          "events": {
            "onClick": ""
          },
          "key": "115gv45g",
          "model": "button_cancel",
          "rules": []
        },
        {
          "name": "Save",
          "type": "button",
          "mainIcon": "按钮",
          "typeIcon": "按钮",
          "icon": "icon-button",
          "group": "Buttons",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "customClass": "",
            "disabled": false,
            "labelWidth": 100,
            "isLabelWidth": false,
            "hideLabel": true,
            "hidden": false,
            "buttonSize": "default",
            "buttonType": "success",
            "buttonPlain": true,
            "buttonRound": true,
            "buttonCircle": false,
            "buttonName": "Save",
            "width": "",
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_hk6k20us",
            "remoteOption": "option_hk6k20us",
            "tableColumn": false,
            "subform": false
          },
          "events": {
            "onClick": "d29rictd"
          },
          "key": "hk6k20us",
          "model": "button_save",
          "rules": []
        }
      ],
      "events": {
        "onClick": ""
      },
      "key": "x3frfstv",
      "model": "flex_x3frfstv",
      "rules": []
    }
  ],
  "config": {
    "labelWidth": 180,
    "labelPosition": "left",
    "size": "default",
    "customClass": "padding",
    "ui": "element",
    "layout": "horizontal",
    "width": "100%",
    "hideLabel": false,
    "hideErrorMessage": false,
    "eventScript": [
      {
        "key": "onFormChange",
        "name": "onFormChange",
        "type": "rule"
      },
      {
        "key": "mounted",
        "name": "mounted",
        "func": "// Helper functions\nconst generatePrefix = (prefixData) => {\n  const now = new Date();\n  let generated = prefixData.current_prefix_config;\n  generated = generated.replace(\"prefix\", prefixData.prefix_value);\n  generated = generated.replace(\"suffix\", prefixData.suffix_value);\n  generated = generated.replace(\n    \"month\",\n    String(now.getMonth() + 1).padStart(2, \"0\")\n  );\n  generated = generated.replace(\"day\", String(now.getDate()).padStart(2, \"0\"));\n  generated = generated.replace(\"year\", now.getFullYear());\n  generated = generated.replace(\n    \"running_number\",\n    String(prefixData.running_number).padStart(prefixData.padding_zeroes, \"0\")\n  );\n  return generated;\n};\n\nconst checkUniqueness = async (generatedPrefix, organizationId) => {\n  try {\n    const existingDoc = await db\n      .collection(\"process_route\")\n      .where({ process_route_no: generatedPrefix, organization_id: organizationId })\n      .get();\n    return !existingDoc.data || existingDoc.data.length === 0;\n  } catch (error) {\n    console.error(\"Error checking uniqueness:\", error);\n    return false;\n  }\n};\n\nconst findUniquePrefix = async (prefixData, organizationId) => {\n  let prefixToShow;\n  let runningNumber = prefixData.running_number || 1;\n  let isUnique = false;\n  let maxAttempts = 10;\n  let attempts = 0;\n\n  while (!isUnique && attempts < maxAttempts) {\n    attempts++;\n    prefixToShow = generatePrefix({\n      ...prefixData,\n      running_number: runningNumber,\n    });\n    isUnique = await checkUniqueness(prefixToShow, organizationId);\n    if (!isUnique) {\n      runningNumber++;\n    }\n  }\n\n  if (!isUnique) {\n    throw new Error(\n      \"Could not generate a unique Process Route number after maximum attempts\"\n    );\n  }\n\n  return { prefixToShow, runningNumber };\n};\n\nconst getPrefixConfiguration = async (organizationId) => {\n  try {\n    const prefixEntry = await db\n      .collection(\"prefix_configuration\")\n      .where({ document_types: \"Process Route\" , organization_id: organizationId})\n      .get();\n\n    return prefixEntry.data && prefixEntry.data.length > 0\n      ? prefixEntry.data[0]\n      : null;\n  } catch (error) {\n    console.error(\"Error fetching prefix configuration:\", error);\n    return null;\n  }\n};\n\n// Main execution function\n(async () => {\n  try {\n    let pageStatus = \"\";\n\nlet organizationId = this.getVarGlobal('deptParentId');\n        if(organizationId === '0'){\n            organizationId = this.getVarSystem('deptIds').split(',')[0];\n        }\n\n    // Determine page status using multiple methods for compatibility\n    if (this.isAdd) pageStatus = \"Add\";\n    else if (this.isEdit) pageStatus = \"Edit\";\n    else if (this.isView) pageStatus = \"View\";\n    else if (this.isCopy) pageStatus = \"Clone\";\n    else throw new Error(\"Invalid page state\");\n\n    // Set page status in data for reference\n    this.setData({ page_status: pageStatus });\n\n    console.log(\"Page status:\", pageStatus);\n\n    if (pageStatus !== \"Add\") {\n      try {\n        const processRouteId = this.getValue(\"id\");\n\n        if (!processRouteId) {\n          throw new Error(\"Process Route ID not found\");\n        }\n\n        // Fetch process route data\n        const processRouteResponse = await db\n          .collection(\"process_route\")\n          .where({ id: processRouteId })\n          .get();\n\n        if (\n          !processRouteResponse.data ||\n          processRouteResponse.data.length === 0\n        ) {\n          throw new Error(`Process Route with ID ${processRouteId} not found`);\n        }\n\n        const processRouteData = processRouteResponse.data[0];\n        console.log(\"Process Route data retrieved:\", processRouteData);\n\n        // Extract all necessary fields\n        const {\n          id,\n          process_route_no,\n          process_route_name,\n          material_code,\n          is_main_process_route,\n          bom_version,\n          process_table,\n          remark,\n          mat_consumption_table,\n        } = processRouteData;\n\n        // Set data for all modes\n        await this.setData({\n          id,\n          process_route_no,\n          process_route_name,\n          material_code,\n          is_main_process_route,\n          bom_version,\n          process_table,\n          remark,\n          mat_consumption_table,\n        });\n\n        // Always disable material_code in Edit mode\n        this.disabled([\"material_code\"], true);\n\n        // Handle View mode\n        if (pageStatus === \"View\") {\n          this.disabled(\n            [\n              \"process_route_no\",\n              \"process_route_name\",\n              \"material_code\",\n              \"is_main_process_route\",\n              \"bom_version\",\n              \"process_table\",\n              \"remark\",\n              \"mat_consumption_table\",\n            ],\n            true\n          );\n\n          this.hide([\"button_save\", \"button_cancel\"], true);\n        }\n      } catch (error) {\n        console.error(\"Error loading process route data:\", error);\n        this.$message.error(\n          `Failed to load process route data: ${error.message}`\n        );\n      }\n    } else {\n      // Add mode - generate prefix\n      try {\n        // Get prefix configuration\n        const prefixData = await getPrefixConfiguration(organizationId);\n\n        if (prefixData) {\n          if (prefixData.is_active === 0) {\n            this.disabled([\"process_route_no\"], false);\n          } else {\n            // Generate unique prefix\n            const { prefixToShow, runningNumber } = await findUniquePrefix(\n              prefixData, organizationId\n            );\n            await this.setData({ process_route_no: prefixToShow });\n            this.disabled([\"process_route_no\"], true);\n          }\n        } else {\n          console.warn(\"No prefix configuration found for Process Route\");\n          this.disabled([\"process_route_no\"], false);\n        }\n      } catch (error) {\n        console.error(\"Error generating prefix:\", error);\n        this.$message.error(`Error generating prefix: ${error.message}`);\n        this.disabled([\"process_route_no\"], false);\n      }\n    }\n  } catch (error) {\n    console.error(\"Error in process route mounted function:\", error);\n    this.$message.error(\"An error occurred while initializing the form\");\n  }\n})();",
        "type": "js"
      },
      {
        "key": "refresh",
        "name": "refresh",
        "func": ""
      },
      {
        "key": "onBeforeAdd",
        "name": "onBeforeAdd",
        "func": ""
      },
      {
        "key": "onAfterAdd",
        "name": "onAfterAdd",
        "func": ""
      },
      {
        "key": "onBeforeUpdate",
        "name": "onBeforeUpdate",
        "func": ""
      },
      {
        "key": "onAfterUpdate",
        "name": "onAfterUpdate",
        "func": ""
      },
      {
        "key": "7xvc1t7j",
        "name": "onChange_main_material",
        "func": "",
        "type": "rule",
        "rules": [
          {
            "key": "hkxf3ydg",
            "action": "js",
            "options": {
              "func": "(async () => {\n  try {\n    const allData = this.getValues();\n    const newValue = arguments[0].value;\n    const pageStatus = this.getValue(\"page_status\");\n    const processRouteId = this.getValue(\"id\");\n\n    // Helper function to fetch and set BOM data\n    const fetchAndSetBomData = async (\n      materialCode,\n      isEdit = false,\n      existingBomVersion = null\n    ) => {\n      try {\n        const response = await db\n          .collection(\"bill_of_materials\")\n          .where({\n            parent_material_code: materialCode,\n          })\n          .get();\n\n        console.log(\"BOM response:\", response);\n\n        this.setOptionData(\"bom_version\", response.data);\n        this.disabled([\"bom_version\"], true);\n\n        // Check if response.data is empty\n        if (response.data.length > 0) {\n          this.disabled([\"bom_version\"], false);\n\n          // Filter response.data for parent_mat_is_default = 1\n          const filteredData = response.data.filter(\n            (item) => item.parent_mat_is_default === 1\n          );\n          console.log(\"Filtered BOM data:\", filteredData);\n\n          // Set BOM version based on context\n          if (isEdit && existingBomVersion) {\n            // For edit mode, use existing BOM version\n            this.setData({ bom_version: existingBomVersion });\n          } else if (filteredData.length > 0) {\n            // For new/changed material, use default BOM version\n            this.setData({ bom_version: filteredData[0].id });\n          }\n        }\n\n        const itemData = await db\n          .collection(\"Item\")\n          .where({ id: materialCode })\n          .get()\n          .then((res) => {\n            return res.data[0];\n          });\n\n        console.log(\"Item data:\", itemData);\n\n        if (itemData) {\n          this.setData({\n            material_name: itemData.material_name,\n            material_desc: itemData.material_desc,\n          });\n        }\n      } catch (error) {\n        console.error(\"Error fetching BOM data:\", error);\n        this.setOptionData(\"bom_version\", []);\n        this.disabled([\"bom_version\"], true);\n        throw error;\n      }\n    };\n\n    if (pageStatus === \"Edit\" || (pageStatus === \"View\" && processRouteId)) {\n      // Handle Edit/View mode\n      const response = await db\n        .collection(\"process_route\")\n        .where({ id: processRouteId })\n        .get();\n\n      const processRouteData = response.data?.[0];\n      if (!processRouteData) {\n        throw new Error(\"Process Route not found\");\n      }\n\n      this.disabled([\"bom_version\"], false);\n\n      const processRouteMaterialId = processRouteData.material_code;\n      const processRouteBomVersion = processRouteData.bom_version;\n\n      if (newValue && newValue !== processRouteMaterialId) {\n        // Material changed in edit mode - fetch new BOM data\n        await fetchAndSetBomData(newValue, false);\n      } else {\n        // Material unchanged in edit mode - fetch existing BOM data\n        await fetchAndSetBomData(\n          processRouteMaterialId,\n          true,\n          processRouteBomVersion\n        );\n      }\n    } else {\n      // Handle Add mode\n      this.setData({ bom_version: \"\" });\n\n      if (newValue) {\n        await fetchAndSetBomData(newValue, false);\n      } else {\n        // No material selected, clear BOM options\n        this.setOptionData(\"bom_version\", []);\n        this.disabled([\"bom_version\"], true);\n      }\n    }\n  } catch (error) {\n    console.error(\"Error in BOM version handling:\", error);\n\n    // Reset to safe state on error\n    this.setData({ bom_version: \"\" });\n    this.setOptionData(\"bom_version\", []);\n    this.disabled([\"bom_version\"], true);\n\n    // Optionally show user-friendly error message\n    if (this.$message) {\n      this.$message.error(\"Failed to load BOM versions. Please try again.\");\n    }\n  }\n})();\n"
            }
          }
        ]
      },
      {
        "key": "rhe9v0bb",
        "name": "onChange_Ismain",
        "func": "",
        "type": "rule",
        "rules": [
          {
            "key": "rntc8j08",
            "action": "js",
            "options": {
              "func": "const self = this;\nconst allData = this.getValues();\nconsole.log(\"allData\", allData);\nconst page_status = self.getValue('page_status');\nconst materialId = allData.material_code;\nconst isMain = allData.is_main_process_route;\nconsole.log(\"materialId\", materialId);\nself.setData({ \"default_dialog\": {} });\n\nif (isMain === 1) {\n    db.collection(\"process_route\")\n        .where({\n            material_code: materialId,\n            is_main_process_route: isMain\n        })\n        .get()\n        .then(function(processRouteResult) {\n            if (processRouteResult.data[0] && processRouteResult.data.length > 0 && allData.id !== processRouteResult.data[0].id) {\n                console.log(\"processRouteResult\", processRouteResult.data[0].process_route_no);\n                self.openDialog(\"default_dialog\");\n                self.setData({ \"default_dialog.main_process_route\": processRouteResult.data[0].process_route_no });\n                self.setData({ \"default_dialog.process_route_id\": processRouteResult.data[0].id });\n            } else {\n                console.log(\"No default Process Route found for this material\");\n            }\n        })\n        .catch(function(error) {\n            console.error(\"Error in material code generation:\", error);\n            throw error;\n        });\n}"
            }
          }
        ]
      },
      {
        "key": "4ya3bzxz",
        "name": "onChange_bom_version",
        "func": "",
        "type": "rule",
        "rules": [
          {
            "key": "lqk7uxwy",
            "action": "js",
            "options": {
              "func": "const allData = this.getValues();\nconst newValue = arguments[0].value;\nconst pageStatus = this.getValue('page_status');\nconst processRouteId = this.getValue('id');\n\n// Function to map material data to the desired format\nconst mapMaterialData = (items) => items.map(item => ({\n  bom_material_code: item.bom_material_code || item.sub_material_code || \"\",\n  bom_material_name: item.bom_material_name || item.sub_material_name || \"\",\n  bom_material_category: item.bom_material_category || item.sub_material_category || \"\",\n  bin_location: item.bin_location || \"\",\n  quantity: item.quantity || item.sub_material_qty || \"\",\n  wastage: item.wastage || item.sub_material_wastage || \"\",\n  base_uom: item.base_uom || item.sub_material_qty_uom || \"\"\n}));\n\n// Function to fetch and set BOM data\nconst fetchAndSetBomData = async (id) => {\n  try {\n    const re = await db.collection(\"bill_of_materials\").where({ id }).get();\n    console.log(\"re\", re);\n    const mappedData = mapMaterialData(re.data[0].subform_sub_material);\n    this.setData({ mat_consumption_table: mappedData });\n  } catch (error) {\n    console.error(\"Error fetching BOM data:\", error);\n  }\n};\n\nif ((pageStatus === 'Edit' || pageStatus === 'View') && processRouteId) {\n  const response = await db.collection(\"process_route\").where({ id: processRouteId }).get();\n  const processRouteData = response.data?.[0];\n  \n  if (!processRouteData) {\n    throw new Error(\"Production order not found\");\n  }\n\n  const processRoutBomVersion = processRouteData.bom_version;\n  const mappedData = mapMaterialData(processRouteData.mat_consumption_table);\n  this.setData({ mat_consumption_table: mappedData });\n\n  if (newValue && newValue !== processRoutBomVersion) {\n    this.setData({ mat_consumption_table: [] });\n    await fetchAndSetBomData(newValue);\n  }\n} else {\n  await fetchAndSetBomData(newValue);\n}"
            }
          }
        ]
      },
      {
        "key": "iq5ab2je",
        "name": "onChange_process",
        "func": "",
        "type": "rule",
        "rules": [
          {
            "key": "k9hitsw5",
            "action": "js",
            "options": {
              "func": "(async () => {\n  // Helper function to handle process table data\n  const handleProcessTableData = async (processTable) => {\n    try {\n      // Extract unique process IDs (remove duplicates)\n      const uniqueProcessIds = [\n        ...new Set(\n          processTable.map((item) => item.process_no).filter((id) => id)\n        ),\n      ];\n\n      if (uniqueProcessIds.length === 0) {\n        console.warn(\"No valid process IDs found in process table\");\n        return;\n      }\n\n      // Batch fetch all processes at once instead of individual queries\n      const processPromises = uniqueProcessIds.map(async (id) => {\n        try {\n          const result = await db.collection(\"process\").where({ id }).get();\n          return result.data?.[0] || null;\n        } catch (error) {\n          console.error(`Failed to fetch process ${id}:`, error);\n          return null;\n        }\n      });\n\n      // Wait for all processes to be fetched\n      const processResults = await Promise.all(processPromises);\n\n      // Filter out null results\n      const validProcessData = processResults.filter((data) => data !== null);\n\n      if (validProcessData.length > 0) {\n        console.log(\"validProcessData\", validProcessData);\n        await this.setOptionData(\n          [\"mat_consumption_table.item_process_id\"],\n          validProcessData\n        );\n        console.log(`Loaded ${validProcessData.length} process options`);\n      } else {\n        console.warn(\"No valid process data found for option setting\");\n      }\n    } catch (error) {\n      console.error(\"Error handling process table data:\", error);\n    }\n  };\n\n  // Helper function to handle current process data\n  const handleCurrentProcessData = async (processId, rowIndex) => {\n    try {\n      const result = await db\n        .collection(\"process\")\n        .where({ id: processId })\n        .get();\n\n      if (!result.data?.[0]) {\n        console.warn(`No process found with ID: ${processId}`);\n        return;\n      }\n\n      const processData = result.data[0];\n\n      // Validate required fields exist\n      if (!processData.process_name || !processData.process_category) {\n        console.warn(\"Process data missing required fields:\", processData);\n      }\n\n      // Update the form data\n      const updateData = {\n        [`process_table.${rowIndex}.process_name`]:\n          processData.process_name || \"\",\n        [`process_table.${rowIndex}.process_category`]:\n          processData.process_category || \"\",\n      };\n\n      await this.setData(updateData);\n      console.log(\"Process data updated successfully:\", updateData);\n    } catch (error) {\n      console.error(\"Error handling current process data:\", error);\n      throw error;\n    }\n  };\n\n  try {\n    // Extract and validate input data\n    const allData = this.getValues();\n    const lineItemData = arguments[0]?.row;\n    const rowIndex = arguments[0]?.rowIndex;\n\n    // Input validation\n    if (!lineItemData || rowIndex === undefined) {\n      console.error(\"Missing required arguments: row or rowIndex\");\n      return;\n    }\n\n    const processId = lineItemData.process_no;\n    const processTable = allData.process_table;\n\n    if (!processId) {\n      console.warn(\"No process_no found in line item data\");\n      return;\n    } else {\n      this.disabled([\"mat_consumption_table.item_process_id\"], false);\n    }\n\n    console.log(\"Processing:\", { lineItemData, rowIndex, processId });\n\n    // Handle process table data if available\n    if (processTable?.length > 0) {\n      await handleProcessTableData(processTable);\n    }\n\n    // Handle current process data\n    await handleCurrentProcessData(processId, rowIndex);\n  } catch (error) {\n    console.error(\"Error in process data handler:\", error);\n  }\n})();\n"
            }
          }
        ]
      },
      {
        "key": "d29rictd",
        "name": "onClick_save",
        "func": "",
        "type": "rule",
        "rules": [
          {
            "key": "ik3gtaw1",
            "action": "js",
            "options": {
              "func": "const allData = this.getValues();\nconst self = this;\nconst page_status = this.getValue('page_status');\n\nconst processId = allData.default_dialog?.process_route_id;\n\nconst { process_route_no, process_route_name, material_code, is_main_process_route,\n  bom_version, process_table, remark, mat_consumption_table\n} = allData\n\n\nconst closeDialog = () => {\n  if (self.parentGenerateForm) {\n    self.parentGenerateForm.$refs.SuPageDialogRef.hide();\n    self.parentGenerateForm.refresh();\n  }\n};\n\nconst addProcess = async () => {\n  if (processId) {\n    await db.collection(\"process_route\")\n      .where({ id: processId })\n      .update({ is_main_process_route: 0 })\n\n  }\n  let organizationId = this.getVarGlobal('deptParentId');\n  if (organizationId === '0') {\n    organizationId = this.getVarSystem('deptIds').split(',')[0];\n  }\n  await db.collection(\"process_route\")\n    .add({\n      process_route_no,\n      process_route_name,\n      material_code,\n      is_main_process_route,\n      bom_version,\n      process_table,\n      remark,\n      mat_consumption_table,\n      organization_id: organizationId,\n    })\n  closeDialog()\n}\n\nconst editProcess = async () => {\n  const existingProcessRouteId = this.getValue('id');\n  const allData = this.getValues();\n  const self = this;\n  const page_status = this.getValue('page_status');\n  \n  const processId = allData.default_dialog?.process_route_id;\n  await db.collection(\"process_route\")\n    .where({ id: existingProcessRouteId })\n    .update({\n      process_route_no: allData.process_route_no,\n      process_route_name: allData.process_route_name,\n      material_code: allData.material_code,\n      is_main_process_route: allData.is_main_process_route,\n      bom_version: allData.bom_version,\n      process_table: allData.process_table,\n      remark: allData.remark,\n      mat_consumption_table: allData.mat_consumption_table,\n    }).then(res => {\n      console.log(\"response:\",res)\n    })\n  closeDialog();\n\n}\n\nconst init = async()=>{\n  await this.getData()\n  if (page_status === 'Add') {\n    await addProcess()\n    return\n  }\n  if (page_status === 'Edit') {\n    await editProcess()\n    return\n  }\n}\n\ninit()"
            }
          }
        ]
      },
      {
        "key": "k4usje7f",
        "name": "onConfirm_confrim",
        "func": "",
        "type": "rule",
        "rules": [
          {
            "key": "yhjtxp7l",
            "action": "js",
            "options": {
              "func": "const allData = this.getValues();\nconst isMain = allData.is_main_process_route;\nthis.closeDialog(\"default_dialog\");"
            }
          }
        ]
      },
      {
        "key": "q0n9sg1r",
        "name": "onCancel_dialog",
        "func": "",
        "type": "rule",
        "rules": [
          {
            "key": "y7yk89eb",
            "action": "js",
            "options": {
              "func": "const allData = this.getValues();\nconst self = this;\nconst isMain = allData.is_main_process_route;\nself.setData({ \"default_dialog\": {} });\nself.setData({ \"is_main_process_route\": 0 });\nthis.closeDialog(\"default_dialog\");"
            }
          }
        ]
      }
    ],
    "uniqueGroup": [],
    "params": [
      {
        "key": "q1mutvmi",
        "name": "page_status",
        "title": "",
        "description": "",
        "bsonType": "string",
        "isExpand": false,
        "children": []
      },
      {
        "key": "5bzxzfuq",
        "name": "id",
        "title": "",
        "description": "",
        "bsonType": "string",
        "isExpand": false,
        "children": []
      }
    ],
    "deps": {},
    "paramsDeps": {},
    "styleSheets": ".padding{\n  padding:20px\n}\n\n.margin{\n  margin-left: 15px\n}\n\n.marginright{\n  margin-right: 20px;\n  margin-top : 3px;\n}\n\n.fixbutton{\n  position: fixed;\n  bottom: 0;\n  right: 0;\n}\n\n",
    "dataSource": [],
    "labelSuffix": true
  }
}
