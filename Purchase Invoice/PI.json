{
  "list": [
    {
      "name": "自动布局",
      "type": "flex",
      "el": "su-fm-flex",
      "mainIcon": "自动布局",
      "typeIcon": "自动布局",
      "icon": "icon-zhediemianban",
      "group": "Design",
      "groupSort": 6,
      "enableScopes": ["Component", "Table", "Page"],
      "options": {
        "title": "布局",
        "customClass": "",
        "hidden": false,
        "recursive": false,
        "recursiveStyleFx": "",
        "slotTarget": "",
        "defaultValue": "",
        "flexDirection": "row",
        "flexWrap": "nowrap",
        "alignItems": "",
        "justifyContent": "",
        "hGap": "",
        "vGap": "",
        "grid": {
          "row": {
            "value": "",
            "visible": true
          },
          "col": {
            "value": "",
            "visible": true
          },
          "use": false
        },
        "padding": ["", "", "", ""],
        "margin": ["", "", "", ""],
        "boxSizing": "border-box",
        "width": "",
        "height": "",
        "radius": ["", "", "", ""],
        "position": "",
        "positions": ["", "", "", ""],
        "zIndex": "",
        "flex": "",
        "flexGrow": "",
        "flexShrink": "",
        "fills": [],
        "borders": [],
        "effects": [],
        "states": [],
        "hoverClass": "",
        "overflow": "",
        "styleFx": "",
        "behave": "",
        "remoteFunc": "func_2oni7077",
        "remoteOption": "option_2oni7077",
        "tableColumn": false,
        "subform": false,
        "props": {},
        "datasource": {
          "source": null,
          "rules": {
            "collectionId": "",
            "list": [
              {
                "id": 1723795236686,
                "parentId": 1723795236685,
                "isTop": true,
                "prop": "",
                "operator": "",
                "valueType": "",
                "value": "",
                "type": "leaf",
                "level": 1
              }
            ]
          }
        },
        "remote": false,
        "remoteType": "datasource",
        "url_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        },
        "body_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        },
        "paging_enabled": 0,
        "paging_way": "Pagination",
        "page_size": 10,
        "more_fields": [],
        "request_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        }
      },
      "list": [
        {
          "name": "",
          "type": "utext",
          "el": "su-fm-text",
          "mainIcon": "文字",
          "typeIcon": "文字",
          "icon": "icon-wenzishezhi-",
          "group": "Design",
          "groupSort": 6,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "defaultValue": "Purchase Invoice",
            "customClass": "marginright",
            "hidden": false,
            "isRich": false,
            "padding": ["", "", "", ""],
            "margin": ["", "", "", ""],
            "boxSizing": "border-box",
            "width": "",
            "maxWidth": "",
            "lineHeight": "",
            "color": "#333333",
            "fontSize": "24px",
            "fontWeight": "700",
            "textAlign": "left",
            "fontStyle": "",
            "textOverflow": "",
            "whiteSpace": "",
            "lines": 0,
            "radius": ["", "", "", ""],
            "position": "",
            "positions": ["", "", "", ""],
            "zIndex": "",
            "flex": "",
            "flexGrow": "",
            "flexShrink": "",
            "fills": [],
            "borders": [],
            "effects": [],
            "states": [],
            "styleFx": "",
            "remoteFunc": "func_pvvwpshg",
            "remoteOption": "option_pvvwpshg",
            "tableColumn": false,
            "subform": false,
            "dynamicValueFx": "",
            "dynamicValueType": "fx",
            "isDynamicValue": false
          },
          "events": {
            "onClick": ""
          },
          "key": "pvvwpshg",
          "model": "purchase_invoice_tittle",
          "rules": []
        },
        {
          "name": "Draft Status",
          "type": "html",
          "icon": "icon-html",
          "mainIcon": "HTML",
          "typeIcon": "HTML",
          "group": "View",
          "groupSort": 1,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "defaultValue": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Draft Button</title>\n    <style>\n        body {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n            margin: 0;\n            background-color: #f4f4f9;\n        }\n\n        .draft-button {\n            padding: 0 20px;\n            border: 2px solid #8C95A4;\n            background-color: #D0D5DD;\n            color: #4D5A74;\n            font-size: 14px;\n            font-family: Arial, sans-serif;\n            border-radius: 20px;\n            cursor: default;\n            transition: background-color 0.3s;\n            width: max-content;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"draft-button\">Draft</div>\n</body>\n</html>",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": true,
            "dataBind": true,
            "required": false,
            "width": "",
            "tip": "",
            "remoteFunc": "func_f7qq9sjg",
            "remoteOption": "option_f7qq9sjg",
            "tableColumn": false,
            "subform": false,
            "customClass": "",
            "hideLabel": true
          },
          "events": {
            "onChange": ""
          },
          "key": "f7qq9sjg",
          "model": "draft_status",
          "rules": []
        },
        {
          "name": "Completed Status",
          "type": "html",
          "icon": "icon-html",
          "mainIcon": "HTML",
          "typeIcon": "HTML",
          "group": "View",
          "groupSort": 1,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "defaultValue": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Completed Button</title>\n    <style>\n        body {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n            margin: 0;\n            background-color: #f4f4f9;\n        }\n\n        .completed-button {\n            padding: 0 20px;\n            border: 2px solid #00AE00;\n            background-color: #C5F5C5;\n            color: #016701;\n            font-size: 14px;\n            font-family: Arial, sans-serif;\n            border-radius: 20px;\n            cursor: default;\n            transition: background-color 0.3s;\n            width: max-content;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"completed-button\">Completed</div>\n</body>\n</html>",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": true,
            "dataBind": true,
            "required": false,
            "width": "",
            "tip": "",
            "remoteFunc": "func_f7qq9sjg",
            "remoteOption": "option_f7qq9sjg",
            "tableColumn": false,
            "subform": false,
            "customClass": "",
            "hideLabel": true
          },
          "events": {
            "onChange": ""
          },
          "key": "ojgyg7qo",
          "model": "completed_status",
          "rules": []
        },
        {
          "name": "Fully Posted Status",
          "type": "html",
          "icon": "icon-html",
          "mainIcon": "HTML",
          "typeIcon": "HTML",
          "group": "View",
          "groupSort": 1,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "defaultValue": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Fully Posted Button</title>\n    <style>\n        body {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n            margin: 0;\n            background-color: #f4f4f9;\n        }\n\n        .fullyposted-button {\n            padding: 0 20px;\n            border: 2px solid #00AE00;\n            background-color: #C5F5C5;\n            color: #016701;\n            font-size: 14px;\n            font-family: Arial, sans-serif;\n            border-radius: 20px;\n            cursor: default;\n            transition: background-color 0.3s;\n            width: max-content;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"fullyposted-button\">Fully Posted</div>\n</body>\n</html>",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": true,
            "dataBind": true,
            "required": false,
            "width": "",
            "tip": "",
            "remoteFunc": "func_f7qq9sjg",
            "remoteOption": "option_f7qq9sjg",
            "tableColumn": false,
            "subform": false,
            "customClass": "",
            "hideLabel": true
          },
          "events": {
            "onChange": ""
          },
          "key": "13roh4rm",
          "model": "fullyposted_status",
          "rules": []
        }
      ],
      "events": {
        "onClick": ""
      },
      "key": "2oni7077",
      "model": "flex_2oni7077",
      "rules": []
    },
    {
      "name": "Page Status",
      "type": "input",
      "mainIcon": "单行文本",
      "typeIcon": "多行文本",
      "icon": "icon-input",
      "group": "Text",
      "groupSort": 1,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-input",
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "dataType": "",
        "dataTypeCheck": false,
        "dataTypeMessage": "",
        "pattern": "",
        "patternCheck": false,
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "disabled": false,
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "showPassword": false,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_5qq5jed9",
        "remoteOption": "option_5qq5jed9",
        "tableColumn": false,
        "subform": false
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "5qq5jed9",
      "model": "page_status",
      "rules": []
    },
    {
      "name": "PI Status",
      "type": "select",
      "mainIcon": "下拉单选",
      "typeIcon": "下拉单选",
      "icon": "icon-select",
      "group": "Select",
      "groupSort": 2,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-select",
      "options": {
        "defaultValue": "",
        "multiple": false,
        "disabled": false,
        "clearable": false,
        "placeholder": "",
        "required": false,
        "requiredMessage": "",
        "validatorCheck": false,
        "validator": "",
        "width": "",
        "options": [
          {
            "value": "Option 1",
            "label": "Option 1"
          },
          {
            "value": "Option 2",
            "label": "Option 2"
          },
          {
            "value": "Option 3",
            "label": "Option 3"
          }
        ],
        "remote": true,
        "remoteType": "innerdatasource",
        "remoteOption": "option_0zxc0s7t",
        "filterable": true,
        "pagingEnabled": true,
        "remoteOptions": [],
        "props": {
          "value": "dict_key",
          "label": "dict_key",
          "cascade": "",
          "children": "children",
          "image": "",
          "icon": ""
        },
        "remoteFunc": "func_0zxc0s7t",
        "customClass": "",
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "customProps": {},
        "tip": "",
        "tableColumn": false,
        "subform": false,
        "paging_enabled": 1,
        "paging_way": "Pagination",
        "page_size": 10,
        "more_fields": [],
        "datasource": {
          "source": "系统字典(勿删):Table:1897577528487428098",
          "rules": {
            "collectionId": "1897577528487428098",
            "list": [
              {
                "id": 1723795236686,
                "parentId": 1723795236685,
                "isTop": true,
                "prop": "parent_id",
                "operator": "numberEqual",
                "valueType": "value",
                "value": "1914242988707749889",
                "type": "leaf",
                "level": 1,
                "propLabel": "父主键",
                "valueLabel": "",
                "operatorLabel": "等于",
                "valueTypeLabel": "值"
              }
            ]
          }
        },
        "url_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        },
        "body_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        },
        "request_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        }
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "0zxc0s7t",
      "model": "pi_status",
      "rules": []
    },
    {
      "name": "栅格布局",
      "type": "grid",
      "mainIcon": "栅格布局",
      "typeIcon": "栅格布局",
      "icon": "icon-RectangleCopy",
      "group": "Layout",
      "groupSort": 0,
      "enableScopes": ["Component", "Table", "Page"],
      "columns": [
        {
          "type": "col",
          "options": {
            "span": 12,
            "offset": 0,
            "push": 0,
            "pull": 0,
            "xs": 24,
            "sm": 12,
            "md": 16,
            "lg": 12,
            "xl": 12,
            "customClass": ""
          },
          "list": [
            {
              "name": "PO Number",
              "el": "su-fm-table-select",
              "mainIcon": "数据源",
              "typeIcon": "数据源",
              "group": "Select",
              "groupSort": 4,
              "generate": "part",
              "enableScopes": ["Component", "Table", "Page"],
              "options": {
                "defaultValue": "",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "disabled": false,
                "dataBind": true,
                "required": true,
                "validator": "",
                "hideLabel": false,
                "pageSourceId": "1923296981386092545",
                "customProps": {},
                "pagingEnabled": true,
                "multiple": false,
                "placeholder": "",
                "lazyLoad": true,
                "props": {
                  "value": "id",
                  "label": "purchase_order_no",
                  "cascade": "",
                  "children": "",
                  "image": "",
                  "icon": ""
                },
                "datasource": {
                  "source": "Purchase Order:Table:1902776039445217282",
                  "rules": {
                    "collectionId": "1902776039445217282",
                    "list": [
                      {
                        "id": 1747201177713,
                        "parentId": 1747201177714,
                        "isTop": true,
                        "type": "branch",
                        "operator": "all",
                        "prop": "",
                        "valueType": "",
                        "value": "",
                        "level": 1,
                        "children": [
                          {
                            "id": 1747201177717,
                            "isTop": false,
                            "parentId": 1747201177713,
                            "type": "branch",
                            "operator": "any",
                            "level": 2,
                            "children": [
                              {
                                "id": 1747201221875,
                                "parentId": 1747201177717,
                                "isTop": false,
                                "prop": "pi_status",
                                "operator": "notEqual",
                                "valueType": "value",
                                "value": "Fully Invoiced",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "PI Status",
                                "valueLabel": "",
                                "operatorLabel": "不等于",
                                "valueTypeLabel": "值"
                              },
                              {
                                "id": 1747201177718,
                                "parentId": 1747201177717,
                                "isTop": false,
                                "prop": "pi_status",
                                "operator": "isNull",
                                "valueType": "value",
                                "value": null,
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "PI Status",
                                "valueLabel": "",
                                "operatorLabel": "没有值",
                                "valueTypeLabel": "值"
                              }
                            ]
                          },
                          {
                            "id": 1747201177719,
                            "isTop": false,
                            "parentId": 1747201177713,
                            "type": "branch",
                            "operator": "all",
                            "level": 2,
                            "children": [
                              {
                                "id": 1747201177715,
                                "parentId": 1747201177719,
                                "isTop": false,
                                "prop": "po_status",
                                "operator": "notEqual",
                                "valueType": "value",
                                "value": "Draft",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "PO Status",
                                "valueLabel": "",
                                "operatorLabel": "不等于",
                                "valueTypeLabel": "值"
                              },
                              {
                                "id": 1747201177720,
                                "parentId": 1747201177719,
                                "isTop": false,
                                "prop": "po_status",
                                "operator": "notEqual",
                                "valueType": "value",
                                "value": "Cancelled",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "PO Status",
                                "valueLabel": "",
                                "operatorLabel": "不等于",
                                "valueTypeLabel": "值"
                              }
                            ]
                          },
                          {
                            "id": 1747201177716,
                            "parentId": 1747201177713,
                            "isTop": false,
                            "prop": "po_plant",
                            "operator": "isNotNull",
                            "valueType": "value",
                            "value": null,
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "Plant",
                            "valueLabel": "",
                            "operatorLabel": "有值",
                            "valueTypeLabel": "值"
                          }
                        ]
                      }
                    ]
                  },
                  "paging_enabled": 0,
                  "paging_way": "Pagination",
                  "page_size": 10,
                  "more_fields": [],
                  "datasource": {
                    "source": null,
                    "rules": {
                      "collectionId": "",
                      "list": [
                        {
                          "id": 1723795236686,
                          "parentId": 1723795236685,
                          "isTop": true,
                          "prop": "",
                          "operator": "",
                          "valueType": "",
                          "value": "",
                          "type": "leaf",
                          "level": 1
                        }
                      ]
                    }
                  },
                  "url_params": {
                    "list": [
                      {
                        "prop": "",
                        "propLabel": "",
                        "operator": "",
                        "operatorLabel": "",
                        "valueType": "value",
                        "valueTypeLabel": "",
                        "value": null,
                        "valueLabel": ""
                      }
                    ]
                  },
                  "body_params": {
                    "list": [
                      {
                        "prop": "",
                        "propLabel": "",
                        "operator": "",
                        "operatorLabel": "",
                        "valueType": "value",
                        "valueTypeLabel": "",
                        "value": null,
                        "valueLabel": ""
                      }
                    ]
                  },
                  "request_params": {
                    "list": [
                      {
                        "prop": "",
                        "propLabel": "",
                        "operator": "",
                        "operatorLabel": "",
                        "valueType": "value",
                        "valueTypeLabel": "",
                        "value": null,
                        "valueLabel": ""
                      }
                    ]
                  }
                },
                "remoteFunc": "func_qfeti5xk",
                "remoteOption": "option_qfeti5xk",
                "tableColumn": false,
                "subform": false,
                "columns": [
                  {
                    "title": "PO Number",
                    "name": "purchase_order_no"
                  }
                ],
                "paging_enabled": 1,
                "paging_way": "Pagination",
                "page_size": 10,
                "more_fields": [],
                "url_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "body_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "request_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "remote": true,
                "remoteType": "innerdatasource",
                "pageId": "1923296981457395717"
              },
              "events": {
                "onChange": "qsv0pqph"
              },
              "type": "custom",
              "novalid": {},
              "key": "dtat42bi",
              "model": "fake_purchase_order_id",
              "rules": [
                {
                  "required": true,
                  "message": ""
                }
              ]
            },
            {
              "name": "PO Number",
              "el": "su-fm-table-select",
              "mainIcon": "数据源",
              "typeIcon": "数据源",
              "group": "Select",
              "groupSort": 4,
              "generate": "part",
              "enableScopes": ["Component", "Table", "Page"],
              "options": {
                "defaultValue": [],
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "disabled": false,
                "dataBind": true,
                "required": true,
                "validator": "",
                "hideLabel": false,
                "pageSourceId": "1922489088883499010",
                "customProps": {},
                "pagingEnabled": true,
                "multiple": true,
                "placeholder": "",
                "lazyLoad": true,
                "props": {
                  "value": "id",
                  "label": "purchase_order_no",
                  "cascade": "",
                  "children": "",
                  "image": "",
                  "icon": ""
                },
                "datasource": {
                  "source": "Purchase Order:Table:1902776039445217282",
                  "rules": {
                    "collectionId": "1902776039445217282",
                    "list": [
                      {
                        "id": 1747201177713,
                        "parentId": 1747201177714,
                        "isTop": true,
                        "type": "branch",
                        "operator": "all",
                        "prop": "",
                        "valueType": "",
                        "value": "",
                        "level": 1,
                        "children": [
                          {
                            "id": 1747201177717,
                            "isTop": false,
                            "parentId": 1747201177713,
                            "type": "branch",
                            "operator": "any",
                            "level": 2,
                            "children": [
                              {
                                "id": 1747201221875,
                                "parentId": 1747201177717,
                                "isTop": false,
                                "prop": "pi_status",
                                "operator": "notEqual",
                                "valueType": "value",
                                "value": "Fully Invoiced",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "PI Status",
                                "valueLabel": "",
                                "operatorLabel": "不等于",
                                "valueTypeLabel": "值"
                              },
                              {
                                "id": 1747201177718,
                                "parentId": 1747201177717,
                                "isTop": false,
                                "prop": "pi_status",
                                "operator": "isNull",
                                "valueType": "value",
                                "value": null,
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "PI Status",
                                "valueLabel": "",
                                "operatorLabel": "没有值",
                                "valueTypeLabel": "值"
                              }
                            ]
                          },
                          {
                            "id": 1747201177719,
                            "isTop": false,
                            "parentId": 1747201177713,
                            "type": "branch",
                            "operator": "all",
                            "level": 2,
                            "children": [
                              {
                                "id": 1747201177715,
                                "parentId": 1747201177719,
                                "isTop": false,
                                "prop": "po_status",
                                "operator": "notEqual",
                                "valueType": "value",
                                "value": "Draft",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "PO Status",
                                "valueLabel": "",
                                "operatorLabel": "不等于",
                                "valueTypeLabel": "值"
                              },
                              {
                                "id": 1747201177720,
                                "parentId": 1747201177719,
                                "isTop": false,
                                "prop": "po_status",
                                "operator": "notEqual",
                                "valueType": "value",
                                "value": "Cancelled",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "PO Status",
                                "valueLabel": "",
                                "operatorLabel": "不等于",
                                "valueTypeLabel": "值"
                              }
                            ]
                          },
                          {
                            "id": 1747201177716,
                            "parentId": 1747201177713,
                            "isTop": false,
                            "prop": "po_plant",
                            "operator": "isNotNull",
                            "valueType": "value",
                            "value": null,
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "Plant",
                            "valueLabel": "",
                            "operatorLabel": "有值",
                            "valueTypeLabel": "值"
                          },
                          {
                            "id": 1747384611907,
                            "parentId": 1747201177713,
                            "isTop": false,
                            "prop": "po_supplier_id",
                            "operator": "equal",
                            "valueType": "field",
                            "value": "{{value:supplier_name}}",
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "Supplier Name",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "字段"
                          }
                        ]
                      }
                    ]
                  },
                  "paging_enabled": 0,
                  "paging_way": "Pagination",
                  "page_size": 10,
                  "more_fields": [],
                  "datasource": {
                    "source": null,
                    "rules": {
                      "collectionId": "",
                      "list": [
                        {
                          "id": 1723795236686,
                          "parentId": 1723795236685,
                          "isTop": true,
                          "prop": "",
                          "operator": "",
                          "valueType": "",
                          "value": "",
                          "type": "leaf",
                          "level": 1
                        }
                      ]
                    }
                  },
                  "url_params": {
                    "list": [
                      {
                        "prop": "",
                        "propLabel": "",
                        "operator": "",
                        "operatorLabel": "",
                        "valueType": "value",
                        "valueTypeLabel": "",
                        "value": null,
                        "valueLabel": ""
                      }
                    ]
                  },
                  "body_params": {
                    "list": [
                      {
                        "prop": "",
                        "propLabel": "",
                        "operator": "",
                        "operatorLabel": "",
                        "valueType": "value",
                        "valueTypeLabel": "",
                        "value": null,
                        "valueLabel": ""
                      }
                    ]
                  },
                  "request_params": {
                    "list": [
                      {
                        "prop": "",
                        "propLabel": "",
                        "operator": "",
                        "operatorLabel": "",
                        "valueType": "value",
                        "valueTypeLabel": "",
                        "value": null,
                        "valueLabel": ""
                      }
                    ]
                  }
                },
                "remoteFunc": "func_qfeti5xk",
                "remoteOption": "option_qfeti5xk",
                "tableColumn": false,
                "subform": false,
                "columns": [
                  {
                    "title": "PO Number",
                    "name": "purchase_order_no"
                  }
                ],
                "paging_enabled": 1,
                "paging_way": "Pagination",
                "page_size": 10,
                "more_fields": [],
                "url_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "body_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "request_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "remote": true,
                "remoteType": "innerdatasource",
                "pageId": "1922489088938024961"
              },
              "events": {
                "onChange": "k46zchao"
              },
              "type": "custom",
              "novalid": {},
              "key": "qfeti5xk",
              "model": "purchase_order_id",
              "rules": [
                {
                  "required": true,
                  "message": ""
                }
              ]
            },
            {
              "name": "栅格布局",
              "type": "grid",
              "mainIcon": "栅格布局",
              "typeIcon": "栅格布局",
              "icon": "icon-RectangleCopy",
              "group": "Layout",
              "groupSort": 0,
              "enableScopes": ["Component", "Table", "Page"],
              "columns": [
                {
                  "type": "col",
                  "options": {
                    "span": 12,
                    "offset": 0,
                    "push": 0,
                    "pull": 0,
                    "xs": 24,
                    "sm": 12,
                    "md": 21,
                    "lg": 12,
                    "xl": 12,
                    "customClass": ""
                  },
                  "list": [
                    {
                      "name": "Supplier",
                      "el": "su-fm-table-select",
                      "mainIcon": "数据源",
                      "typeIcon": "数据源",
                      "group": "Select",
                      "groupSort": 4,
                      "generate": "part",
                      "enableScopes": ["Component", "Table", "Page"],
                      "options": {
                        "defaultValue": [],
                        "customClass": "",
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hidden": false,
                        "disabled": true,
                        "dataBind": true,
                        "required": true,
                        "validator": "",
                        "hideLabel": false,
                        "pageSourceId": "1919662972758073345",
                        "customProps": {},
                        "pagingEnabled": true,
                        "multiple": false,
                        "placeholder": "",
                        "lazyLoad": true,
                        "props": {
                          "value": "id",
                          "label": "supplier_com_name",
                          "cascade": "",
                          "children": "",
                          "image": "",
                          "icon": ""
                        },
                        "datasource": {
                          "source": "Supplier:Table:1901541078662762497",
                          "rules": {
                            "collectionId": "1901541078662762497",
                            "list": [
                              {
                                "id": 1747379858169,
                                "parentId": 1747379858170,
                                "isTop": true,
                                "type": "branch",
                                "operator": "all",
                                "prop": "",
                                "valueType": "",
                                "value": "",
                                "level": 1,
                                "children": [
                                  {
                                    "id": 1747368490364,
                                    "parentId": 1747379858169,
                                    "isTop": false,
                                    "prop": "supplier_status",
                                    "operator": "equal",
                                    "valueType": "value",
                                    "value": "Active",
                                    "type": "leaf",
                                    "level": 2,
                                    "propLabel": "Supplier Status",
                                    "valueLabel": "",
                                    "operatorLabel": "等于",
                                    "valueTypeLabel": "值"
                                  },
                                  {
                                    "id": 1747379858172,
                                    "isTop": false,
                                    "parentId": 1747379858169,
                                    "type": "branch",
                                    "operator": "any",
                                    "level": 2,
                                    "children": [
                                      {
                                        "id": 1747379858171,
                                        "parentId": 1747379858172,
                                        "isTop": false,
                                        "prop": "organization_id",
                                        "operator": "equal",
                                        "valueType": "field",
                                        "value": "{{system:deptIds}}",
                                        "type": "leaf",
                                        "level": 3,
                                        "propLabel": "Organization",
                                        "valueLabel": "",
                                        "operatorLabel": "等于",
                                        "valueTypeLabel": "值"
                                      },
                                      {
                                        "id": 1747379858173,
                                        "parentId": 1747379858172,
                                        "isTop": false,
                                        "prop": "organization_id",
                                        "operator": "equal",
                                        "valueType": "field",
                                        "value": "{{global:deptParentId}}",
                                        "type": "leaf",
                                        "level": 3,
                                        "propLabel": "Organization",
                                        "valueLabel": "",
                                        "operatorLabel": "等于",
                                        "valueTypeLabel": "值"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "remoteFunc": "func_loxc2vl6",
                        "remoteOption": "option_loxc2vl6",
                        "tableColumn": false,
                        "subform": false,
                        "paging_enabled": 1,
                        "paging_way": "Pagination",
                        "page_size": 10,
                        "more_fields": [],
                        "url_params": {
                          "list": [
                            {
                              "prop": "",
                              "propLabel": "",
                              "operator": "",
                              "operatorLabel": "",
                              "valueType": "value",
                              "valueTypeLabel": "",
                              "value": null,
                              "valueLabel": ""
                            }
                          ]
                        },
                        "body_params": {
                          "list": [
                            {
                              "prop": "",
                              "propLabel": "",
                              "operator": "",
                              "operatorLabel": "",
                              "valueType": "value",
                              "valueTypeLabel": "",
                              "value": null,
                              "valueLabel": ""
                            }
                          ]
                        },
                        "request_params": {
                          "list": [
                            {
                              "prop": "",
                              "propLabel": "",
                              "operator": "",
                              "operatorLabel": "",
                              "valueType": "value",
                              "valueTypeLabel": "",
                              "value": null,
                              "valueLabel": ""
                            }
                          ]
                        },
                        "columns": [
                          {
                            "title": "Supplier Name",
                            "name": "supplier_com_name",
                            "search_type": "SubstringMatch"
                          },
                          {
                            "title": "Supplier Code",
                            "name": "supplier_code",
                            "search_type": "SubstringMatch"
                          }
                        ],
                        "remote": true,
                        "remoteType": "innerdatasource",
                        "pageId": "1919662973257195521"
                      },
                      "events": {
                        "onChange": "7tqe8stt"
                      },
                      "type": "custom",
                      "novalid": {},
                      "key": "loxc2vl6",
                      "model": "supplier_name",
                      "rules": [
                        {
                          "required": true,
                          "message": ""
                        }
                      ]
                    }
                  ],
                  "key": "eowdd557",
                  "rules": []
                },
                {
                  "type": "col",
                  "options": {
                    "span": 12,
                    "offset": 0,
                    "push": 0,
                    "pull": 0,
                    "xs": 24,
                    "sm": 12,
                    "md": 3,
                    "lg": 12,
                    "xl": 12,
                    "customClass": ""
                  },
                  "list": [
                    {
                      "name": "Currency",
                      "type": "input",
                      "mainIcon": "单行文本",
                      "typeIcon": "多行文本",
                      "icon": "icon-input",
                      "group": "Text",
                      "groupSort": 1,
                      "enableScopes": ["Component", "Table", "Page"],
                      "el": "fm-input",
                      "options": {
                        "width": "",
                        "defaultValue": "",
                        "required": false,
                        "requiredMessage": "",
                        "dataType": "",
                        "dataTypeCheck": false,
                        "dataTypeMessage": "",
                        "pattern": "",
                        "patternCheck": false,
                        "patternMessage": "",
                        "validatorCheck": false,
                        "validator": "",
                        "placeholder": "",
                        "customClass": "",
                        "disabled": true,
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hidden": false,
                        "dataBind": true,
                        "showPassword": false,
                        "clearable": false,
                        "maxlength": "",
                        "showWordLimit": false,
                        "customProps": {},
                        "tip": "",
                        "remoteFunc": "func_m91kqifh",
                        "remoteOption": "option_m91kqifh",
                        "tableColumn": false,
                        "subform": false,
                        "hideLabel": true,
                        "dynamicValueType": "fx",
                        "isDynamicValue": false
                      },
                      "events": {
                        "onChange": "",
                        "onFocus": "",
                        "onBlur": ""
                      },
                      "novalid": {},
                      "key": "m91kqifh",
                      "model": "currency_code",
                      "rules": []
                    }
                  ],
                  "key": "zs7buj1l",
                  "rules": []
                }
              ],
              "options": {
                "gutter": 12,
                "justify": "start",
                "align": "top",
                "customClass": "",
                "hidden": false,
                "flex": true,
                "responsive": true,
                "remoteFunc": "func_03uhngqr",
                "remoteOption": "option_03uhngqr",
                "tableColumn": false,
                "subform": false
              },
              "novalid": {},
              "key": "03uhngqr",
              "model": "grid_03uhngqr",
              "rules": []
            },
            {
              "name": "Purchase Order Number",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_v2jhlkoa",
                "remoteOption": "option_v2jhlkoa",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "ihsndx6t",
              "model": "po_no_display",
              "rules": []
            },
            {
              "name": "栅格布局",
              "type": "grid",
              "mainIcon": "栅格布局",
              "typeIcon": "栅格布局",
              "icon": "icon-RectangleCopy",
              "group": "Layout",
              "groupSort": 0,
              "enableScopes": ["Component", "Table", "Page"],
              "columns": [
                {
                  "type": "col",
                  "options": {
                    "span": 12,
                    "offset": 0,
                    "push": 0,
                    "pull": 0,
                    "xs": 24,
                    "sm": 12,
                    "md": 12,
                    "lg": 12,
                    "xl": 12,
                    "customClass": ""
                  },
                  "list": [
                    {
                      "name": "Name",
                      "type": "input",
                      "mainIcon": "单行文本",
                      "typeIcon": "多行文本",
                      "icon": "icon-input",
                      "group": "Text",
                      "groupSort": 1,
                      "enableScopes": ["Component", "Table", "Page"],
                      "el": "fm-input",
                      "options": {
                        "width": "",
                        "defaultValue": "",
                        "required": false,
                        "requiredMessage": "",
                        "dataType": "",
                        "dataTypeCheck": false,
                        "dataTypeMessage": "",
                        "pattern": "",
                        "patternCheck": false,
                        "patternMessage": "",
                        "validatorCheck": false,
                        "validator": "",
                        "placeholder": "",
                        "customClass": "",
                        "disabled": false,
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hidden": false,
                        "dataBind": true,
                        "showPassword": false,
                        "clearable": false,
                        "maxlength": "",
                        "showWordLimit": false,
                        "customProps": {},
                        "tip": "",
                        "remoteFunc": "func_0j9frbo4",
                        "remoteOption": "option_0j9frbo4",
                        "tableColumn": false,
                        "subform": false,
                        "labelWrap": true
                      },
                      "events": {
                        "onChange": "",
                        "onFocus": "",
                        "onBlur": ""
                      },
                      "novalid": {},
                      "key": "0j9frbo4",
                      "model": "pi_billing_name",
                      "rules": []
                    },
                    {
                      "name": "Billing Address",
                      "type": "textarea",
                      "mainIcon": "多行文本",
                      "typeIcon": "多行文本(1)",
                      "icon": "icon-diy-com-textarea",
                      "group": "Text",
                      "groupSort": 2,
                      "enableScopes": ["Component", "Table", "Page"],
                      "options": {
                        "width": "",
                        "defaultValue": "",
                        "required": false,
                        "requiredMessage": "",
                        "disabled": true,
                        "pattern": "",
                        "patternMessage": "",
                        "validatorCheck": false,
                        "validator": "",
                        "placeholder": "",
                        "customClass": "",
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hidden": false,
                        "dataBind": true,
                        "clearable": false,
                        "maxlength": "",
                        "showWordLimit": false,
                        "rows": 0,
                        "autosize": true,
                        "customProps": {},
                        "tip": "",
                        "remoteFunc": "func_0sr0v35h",
                        "remoteOption": "option_0sr0v35h",
                        "tableColumn": false,
                        "subform": false,
                        "labelWrap": true,
                        "dynamicValueType": "fx",
                        "isDynamicValue": false
                      },
                      "events": {
                        "onChange": "",
                        "onFocus": "",
                        "onBlur": ""
                      },
                      "novalid": {},
                      "key": "0sr0v35h",
                      "model": "pi_billing_address",
                      "rules": []
                    },
                    {
                      "name": "Manage Address",
                      "type": "link",
                      "mainIcon": "链接",
                      "typeIcon": "链接",
                      "icon": "icon-lianjie",
                      "group": "Buttons",
                      "groupSort": 2,
                      "enableScopes": ["Component", "Table", "Page"],
                      "options": {
                        "customClass": "",
                        "disabled": false,
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hideLabel": true,
                        "hidden": false,
                        "linkType": "default",
                        "linkName": "Manage Address",
                        "underline": true,
                        "blank": true,
                        "href": "",
                        "customProps": {},
                        "tip": "",
                        "remoteFunc": "func_mkeyg62u",
                        "remoteOption": "option_mkeyg62u",
                        "tableColumn": false,
                        "subform": false
                      },
                      "events": {
                        "onClick": "lxry8ffw"
                      },
                      "novalid": {},
                      "key": "mkeyg62u",
                      "model": "link_billing_address",
                      "rules": []
                    }
                  ],
                  "key": "otnl18v3"
                },
                {
                  "type": "col",
                  "options": {
                    "span": 12,
                    "offset": 0,
                    "push": 0,
                    "pull": 0,
                    "xs": 24,
                    "sm": 12,
                    "md": 12,
                    "lg": 12,
                    "xl": 12,
                    "customClass": ""
                  },
                  "list": [
                    {
                      "name": "Contact Number",
                      "type": "input",
                      "mainIcon": "单行文本",
                      "typeIcon": "多行文本",
                      "icon": "icon-input",
                      "group": "Text",
                      "groupSort": 1,
                      "enableScopes": ["Component", "Table", "Page"],
                      "el": "fm-input",
                      "options": {
                        "width": "",
                        "defaultValue": "",
                        "required": false,
                        "requiredMessage": "",
                        "dataType": "",
                        "dataTypeCheck": false,
                        "dataTypeMessage": "",
                        "pattern": "",
                        "patternCheck": false,
                        "patternMessage": "",
                        "validatorCheck": false,
                        "validator": "",
                        "placeholder": "",
                        "customClass": "",
                        "disabled": false,
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hidden": false,
                        "dataBind": true,
                        "showPassword": false,
                        "clearable": false,
                        "maxlength": "",
                        "showWordLimit": false,
                        "customProps": {},
                        "tip": "",
                        "remoteFunc": "func_0j9frbo4",
                        "remoteOption": "option_0j9frbo4",
                        "tableColumn": false,
                        "subform": false,
                        "labelWrap": true,
                        "dynamicValueFx": "",
                        "dynamicValueType": "fx",
                        "isDynamicValue": false
                      },
                      "events": {
                        "onChange": "",
                        "onFocus": "",
                        "onBlur": ""
                      },
                      "novalid": {},
                      "key": "d7r80o5v",
                      "model": "pi_billing_cp",
                      "rules": []
                    },
                    {
                      "name": "Shipping Address",
                      "type": "textarea",
                      "mainIcon": "多行文本",
                      "typeIcon": "多行文本(1)",
                      "icon": "icon-diy-com-textarea",
                      "group": "Text",
                      "groupSort": 2,
                      "enableScopes": ["Component", "Table", "Page"],
                      "options": {
                        "width": "",
                        "defaultValue": "",
                        "required": false,
                        "requiredMessage": "",
                        "disabled": true,
                        "pattern": "",
                        "patternMessage": "",
                        "validatorCheck": false,
                        "validator": "",
                        "placeholder": "",
                        "customClass": "",
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hidden": false,
                        "dataBind": true,
                        "clearable": false,
                        "maxlength": "",
                        "showWordLimit": false,
                        "rows": 0,
                        "autosize": true,
                        "customProps": {},
                        "tip": "",
                        "remoteFunc": "func_kk4cge0o",
                        "remoteOption": "option_kk4cge0o",
                        "tableColumn": false,
                        "subform": false,
                        "labelWrap": true
                      },
                      "events": {
                        "onChange": "",
                        "onFocus": "",
                        "onBlur": ""
                      },
                      "novalid": {},
                      "key": "kk4cge0o",
                      "model": "pi_shipping_address",
                      "rules": []
                    },
                    {
                      "name": "Manage Address",
                      "type": "link",
                      "mainIcon": "链接",
                      "typeIcon": "链接",
                      "icon": "icon-lianjie",
                      "group": "Buttons",
                      "groupSort": 2,
                      "enableScopes": ["Component", "Table", "Page"],
                      "options": {
                        "customClass": "",
                        "disabled": false,
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hideLabel": true,
                        "hidden": false,
                        "linkType": "default",
                        "linkName": "Manage Address",
                        "underline": true,
                        "blank": true,
                        "href": "",
                        "customProps": {},
                        "tip": "",
                        "remoteFunc": "func_mkeyg62u",
                        "remoteOption": "option_mkeyg62u",
                        "tableColumn": false,
                        "subform": false
                      },
                      "events": {
                        "onClick": "8tun597m"
                      },
                      "novalid": {},
                      "key": "zcw2fxgo",
                      "model": "link_shipping_address",
                      "rules": []
                    }
                  ],
                  "key": "die7r0le"
                }
              ],
              "options": {
                "gutter": 32,
                "justify": "start",
                "align": "top",
                "customClass": "",
                "hidden": true,
                "flex": true,
                "responsive": true,
                "remoteFunc": "func_5dtjomqe",
                "remoteOption": "option_5dtjomqe",
                "tableColumn": false,
                "subform": false
              },
              "novalid": {},
              "key": "5dtjomqe",
              "model": "address_grid",
              "rules": []
            },
            {
              "name": "Goods Receiving Number",
              "type": "select",
              "mainIcon": "下拉单选",
              "typeIcon": "下拉单选",
              "icon": "icon-select",
              "group": "Select",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-select",
              "options": {
                "defaultValue": [],
                "multiple": true,
                "disabled": false,
                "clearable": true,
                "placeholder": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "width": "",
                "options": [
                  {
                    "value": "Option 1",
                    "label": "Option 1"
                  },
                  {
                    "value": "Option 2",
                    "label": "Option 2"
                  },
                  {
                    "value": "Option 3",
                    "label": "Option 3"
                  }
                ],
                "remote": true,
                "remoteType": "innerdatasource",
                "remoteOption": "option_zp1jon4j",
                "filterable": false,
                "pagingEnabled": true,
                "remoteOptions": [],
                "props": {
                  "value": "id",
                  "label": "gr_no",
                  "cascade": "",
                  "children": "",
                  "image": "",
                  "icon": ""
                },
                "remoteFunc": "func_zp1jon4j",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "customProps": {},
                "tip": "",
                "tableColumn": false,
                "subform": false,
                "paging_enabled": 1,
                "paging_way": "Pagination",
                "page_size": 10,
                "more_fields": [],
                "datasource": {
                  "source": "Goods Receiving:Table:1901845517592285186",
                  "rules": {
                    "collectionId": "1901845517592285186",
                    "list": [
                      {
                        "id": 1747389233086,
                        "parentId": 1747389233087,
                        "isTop": true,
                        "type": "branch",
                        "operator": "all",
                        "prop": "",
                        "valueType": "",
                        "value": "",
                        "level": 1,
                        "children": [
                          {
                            "id": 1723795236686,
                            "parentId": 1747389233086,
                            "isTop": false,
                            "prop": "purchase_order_number",
                            "operator": "equal",
                            "valueType": "field",
                            "value": "{{value:po_no_display}}",
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "Purchase Order Number",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "字段"
                          },
                          {
                            "id": 1747389233091,
                            "isTop": false,
                            "parentId": 1747389233086,
                            "type": "branch",
                            "operator": "all",
                            "level": 2,
                            "children": [
                              {
                                "id": 1747389233088,
                                "parentId": 1747389233091,
                                "isTop": false,
                                "prop": "pi_status",
                                "operator": "notEqual",
                                "valueType": "value",
                                "value": "Fully Invoiced",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "PI Status",
                                "valueLabel": "",
                                "operatorLabel": "不等于",
                                "valueTypeLabel": "值"
                              },
                              {
                                "id": 1747389233092,
                                "parentId": 1747389233091,
                                "isTop": false,
                                "prop": "pi_status",
                                "operator": "isNull",
                                "valueType": "value",
                                "value": null,
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "PI Status",
                                "valueLabel": "",
                                "operatorLabel": "没有值",
                                "valueTypeLabel": "值"
                              }
                            ]
                          },
                          {
                            "id": 1747389233089,
                            "parentId": 1747389233086,
                            "isTop": false,
                            "prop": "gr_status",
                            "operator": "equal",
                            "valueType": "value",
                            "value": "Completed",
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "GR Status",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "值"
                          },
                          {
                            "id": 1747389233093,
                            "isTop": false,
                            "parentId": 1747389233086,
                            "type": "branch",
                            "operator": "any",
                            "level": 2,
                            "children": [
                              {
                                "id": 1747389233098,
                                "isTop": false,
                                "parentId": 1747389233093,
                                "type": "branch",
                                "operator": "all",
                                "level": 3,
                                "children": [
                                  {
                                    "id": 1747389233090,
                                    "parentId": 1747389233098,
                                    "isTop": false,
                                    "prop": "plant_id",
                                    "operator": "numberEqual",
                                    "valueType": "field",
                                    "value": "{{global:deptParentId}}",
                                    "type": "leaf",
                                    "level": 4,
                                    "propLabel": "Plant",
                                    "valueLabel": "",
                                    "operatorLabel": "等于",
                                    "valueTypeLabel": "字段"
                                  },
                                  {
                                    "id": 1747389233099,
                                    "parentId": 1747389233098,
                                    "isTop": false,
                                    "prop": "plant_id",
                                    "operator": "numberEqualAny",
                                    "valueType": "formula",
                                    "value": "{{global:deptIdList}}.split(',')",
                                    "type": "leaf",
                                    "level": 4,
                                    "propLabel": "Plant",
                                    "valueLabel": "",
                                    "operatorLabel": "等于任一",
                                    "valueTypeLabel": "公式"
                                  }
                                ]
                              },
                              {
                                "id": 1747389233094,
                                "parentId": 1747389233093,
                                "isTop": false,
                                "prop": "plant_id",
                                "operator": "numberEqual",
                                "valueType": "field",
                                "value": "{{system:deptIds}}",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "Plant",
                                "valueLabel": "",
                                "operatorLabel": "等于",
                                "valueTypeLabel": "字段"
                              },
                              {
                                "id": 1747389233100,
                                "isTop": false,
                                "parentId": 1747389233093,
                                "type": "branch",
                                "operator": "all",
                                "level": 3,
                                "children": [
                                  {
                                    "id": 1747389233097,
                                    "parentId": 1747389233100,
                                    "isTop": false,
                                    "prop": "plant_id",
                                    "operator": "numberEqualAny",
                                    "valueType": "formula",
                                    "value": "{{global:deptIdList}}.split(',')",
                                    "type": "leaf",
                                    "level": 4,
                                    "propLabel": "Plant",
                                    "valueLabel": "",
                                    "operatorLabel": "等于任一",
                                    "valueTypeLabel": "值"
                                  },
                                  {
                                    "id": 1747389233101,
                                    "parentId": 1747389233100,
                                    "isTop": false,
                                    "prop": "organization_id",
                                    "operator": "equal",
                                    "valueType": "field",
                                    "value": "{{system:deptIds}}",
                                    "type": "leaf",
                                    "level": 4,
                                    "propLabel": "Organization",
                                    "valueLabel": "",
                                    "operatorLabel": "等于",
                                    "valueTypeLabel": "值"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                "url_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "body_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "request_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                }
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "zp1jon4j",
              "model": "goods_receiving_no",
              "rules": []
            },
            {
              "name": "Good Receiving Number",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_v2jhlkoa",
                "remoteOption": "option_v2jhlkoa",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "rc9uytui",
              "model": "gr_no_display",
              "rules": []
            },
            {
              "name": "Agent",
              "type": "select",
              "mainIcon": "下拉单选",
              "typeIcon": "下拉单选",
              "icon": "icon-select",
              "group": "Select",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-select",
              "options": {
                "defaultValue": "",
                "multiple": false,
                "disabled": false,
                "clearable": true,
                "placeholder": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "width": "",
                "options": [
                  {
                    "value": "Option 1",
                    "label": "Option 1"
                  },
                  {
                    "value": "Option 2",
                    "label": "Option 2"
                  },
                  {
                    "value": "Option 3",
                    "label": "Option 3"
                  }
                ],
                "remote": true,
                "remoteType": "innerdatasource",
                "remoteOption": "option_n3f7gka6",
                "filterable": true,
                "pagingEnabled": true,
                "remoteOptions": [],
                "props": {
                  "value": "id",
                  "label": "agent_name",
                  "cascade": "",
                  "children": "",
                  "image": "",
                  "icon": ""
                },
                "remoteFunc": "func_n3f7gka6",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "customProps": {},
                "tip": "",
                "tableColumn": false,
                "subform": false,
                "paging_enabled": 1,
                "paging_way": "Pagination",
                "page_size": 10,
                "more_fields": [],
                "datasource": {
                  "source": "Agent:Table:1901976872514867202",
                  "rules": {
                    "collectionId": "1901976872514867202",
                    "list": [
                      {
                        "id": 1746294947657,
                        "parentId": 1746294947658,
                        "isTop": true,
                        "type": "branch",
                        "operator": "any",
                        "prop": "",
                        "valueType": "",
                        "value": "",
                        "level": 1,
                        "children": [
                          {
                            "id": 1746294959853,
                            "parentId": 1746294947657,
                            "isTop": false,
                            "prop": "organization_id",
                            "operator": "equal",
                            "valueType": "field",
                            "value": "{{system:deptIds}}",
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "Organization",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "字段"
                          },
                          {
                            "id": 1746294947659,
                            "parentId": 1746294947657,
                            "isTop": false,
                            "prop": "organization_id",
                            "operator": "equal",
                            "valueType": "field",
                            "value": "{{global:deptParentId}}",
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "Organization",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "值"
                          }
                        ]
                      }
                    ]
                  }
                },
                "url_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "body_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "request_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "dynamicValueType": "fx",
                "isDynamicValue": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "i77k1wxt",
              "model": "agent_id",
              "rules": []
            },
            {
              "name": "Invoice Number",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": true,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": true,
                "validator": "const page_status = this.getParamsVariables('page_status');\n\nif (page_status === 'View' || !value) {\n    callback();\n    return;\n}\n\ndb.collection(\"purchase_invoice\")\n    .where({ purchase_invoice_no: value })\n    .get()\n    .then(response => {\n        const matchingPIno = response.data || [];\n\n        if (matchingPIno.length === 0) {\n            callback();\n            return;\n        }\n\n        if (page_status === 'Edit') {\n            const currentPIno = this.getParamsVariables('purchase_invoice_no');\n            const isSamePIno = matchingPIno.some(pi_no => pi_no.id === currentPIno);\n            callback(isSamePIno ? undefined : 'Purchase invoice number already exists.');\n        } else {\n            callback('Purchase invoice number already exists.');\n        }\n    })\n    .catch(error => {\n        console.error(\"Error checking purchase invoice number:\", error);\n        callback(\"Error validating purchase invoice number.\");\n    });",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_v2jhlkoa",
                "remoteOption": "option_v2jhlkoa",
                "tableColumn": false,
                "subform": false,
                "dynamicValueType": "fx",
                "isDynamicValue": false,
                "dynamicValueFx": ""
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "v2jhlkoa",
              "model": "purchase_invoice_no",
              "rules": [
                {
                  "required": true,
                  "message": ""
                },
                {
                  "func": "const page_status = this.getParamsVariables('page_status');\n\nif (page_status === 'View' || !value) {\n    callback();\n    return;\n}\n\ndb.collection(\"purchase_invoice\")\n    .where({ purchase_invoice_no: value })\n    .get()\n    .then(response => {\n        const matchingPIno = response.data || [];\n\n        if (matchingPIno.length === 0) {\n            callback();\n            return;\n        }\n\n        if (page_status === 'Edit') {\n            const currentPIno = this.getParamsVariables('purchase_invoice_no');\n            const isSamePIno = matchingPIno.some(pi_no => pi_no.id === currentPIno);\n            callback(isSamePIno ? undefined : 'Purchase invoice number already exists.');\n        } else {\n            callback('Purchase invoice number already exists.');\n        }\n    })\n    .catch(error => {\n        console.error(\"Error checking purchase invoice number:\", error);\n        callback(\"Error validating purchase invoice number.\");\n    });"
                }
              ]
            },
            {
              "name": "Invoice Date",
              "type": "date",
              "mainIcon": "日期",
              "typeIcon": "日期",
              "icon": "icon-date",
              "group": "DateTime",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "options": {
                "defaultValue": "",
                "readonly": false,
                "disabled": false,
                "editable": false,
                "clearable": true,
                "placeholder": "",
                "startPlaceholder": "",
                "endPlaceholder": "",
                "type": "timestamp",
                "timeStampType": "timestamp",
                "format": "YYYY-MM-DD",
                "timestamp": false,
                "required": true,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "width": "100%",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_s3evhrjb",
                "remoteOption": "option_s3evhrjb",
                "tableColumn": false,
                "subform": false,
                "dynamicValueFx": "new Date().toISOString().split('T')[0];",
                "dynamicValueType": "fx",
                "isDynamicValue": true
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "s3evhrjb",
              "model": "invoice_date",
              "rules": [
                {
                  "required": true,
                  "message": ""
                }
              ]
            },
            {
              "name": "栅格布局",
              "type": "grid",
              "mainIcon": "栅格布局",
              "typeIcon": "栅格布局",
              "icon": "icon-RectangleCopy",
              "group": "Layout",
              "groupSort": 0,
              "enableScopes": ["Component", "Table", "Page"],
              "columns": [
                {
                  "type": "col",
                  "options": {
                    "span": 12,
                    "offset": 0,
                    "push": 0,
                    "pull": 0,
                    "xs": 24,
                    "sm": 12,
                    "md": 12,
                    "lg": 12,
                    "xl": 12,
                    "customClass": ""
                  },
                  "list": [
                    {
                      "name": "Tax Rate",
                      "type": "select",
                      "mainIcon": "下拉单选",
                      "typeIcon": "下拉单选",
                      "icon": "icon-select",
                      "group": "Select",
                      "groupSort": 2,
                      "enableScopes": ["Component", "Table", "Page"],
                      "el": "fm-select",
                      "options": {
                        "defaultValue": "",
                        "multiple": false,
                        "disabled": false,
                        "clearable": true,
                        "placeholder": "",
                        "required": false,
                        "requiredMessage": "",
                        "validatorCheck": false,
                        "validator": "",
                        "width": "",
                        "options": [
                          {
                            "value": "Option 1",
                            "label": "Option 1"
                          },
                          {
                            "value": "Option 2",
                            "label": "Option 2"
                          },
                          {
                            "value": "Option 3",
                            "label": "Option 3"
                          }
                        ],
                        "remote": true,
                        "remoteType": "innerdatasource",
                        "remoteOption": "option_n3f7gka6",
                        "filterable": true,
                        "pagingEnabled": true,
                        "remoteOptions": [],
                        "props": {
                          "value": "id",
                          "label": "tax_code",
                          "cascade": "",
                          "children": "",
                          "image": "",
                          "icon": ""
                        },
                        "remoteFunc": "func_n3f7gka6",
                        "customClass": "",
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hidden": false,
                        "dataBind": true,
                        "customProps": {},
                        "tip": "",
                        "tableColumn": false,
                        "subform": false,
                        "paging_enabled": 1,
                        "paging_way": "Pagination",
                        "page_size": 10,
                        "more_fields": [],
                        "datasource": {
                          "source": "Tax Rate:Table:1901979496744079362",
                          "rules": {
                            "collectionId": "1901979496744079362",
                            "list": [
                              {
                                "id": 1746295036166,
                                "parentId": 1746295036165,
                                "isTop": true,
                                "prop": "",
                                "operator": "",
                                "valueType": "",
                                "value": "",
                                "type": "leaf",
                                "level": 1
                              }
                            ]
                          }
                        },
                        "url_params": {
                          "list": [
                            {
                              "prop": "",
                              "propLabel": "",
                              "operator": "",
                              "operatorLabel": "",
                              "valueType": "value",
                              "valueTypeLabel": "",
                              "value": null,
                              "valueLabel": ""
                            }
                          ]
                        },
                        "body_params": {
                          "list": [
                            {
                              "prop": "",
                              "propLabel": "",
                              "operator": "",
                              "operatorLabel": "",
                              "valueType": "value",
                              "valueTypeLabel": "",
                              "value": null,
                              "valueLabel": ""
                            }
                          ]
                        },
                        "request_params": {
                          "list": [
                            {
                              "prop": "",
                              "propLabel": "",
                              "operator": "",
                              "operatorLabel": "",
                              "valueType": "value",
                              "valueTypeLabel": "",
                              "value": null,
                              "valueLabel": ""
                            }
                          ]
                        },
                        "dynamicValueType": "fx",
                        "isDynamicValue": false
                      },
                      "events": {
                        "onChange": "dkihgawc",
                        "onFocus": "",
                        "onBlur": ""
                      },
                      "novalid": {},
                      "key": "r6ffweox",
                      "model": "inv_tax_rate_id",
                      "rules": []
                    }
                  ],
                  "key": "wl1peu1e"
                },
                {
                  "type": "col",
                  "options": {
                    "span": 12,
                    "offset": 0,
                    "push": 0,
                    "pull": 0,
                    "xs": 24,
                    "sm": 12,
                    "md": 12,
                    "lg": 12,
                    "xl": 12,
                    "customClass": ""
                  },
                  "list": [
                    {
                      "name": "Tax Rate Percentage",
                      "type": "select",
                      "mainIcon": "下拉单选",
                      "typeIcon": "下拉单选",
                      "icon": "icon-select",
                      "group": "Select",
                      "groupSort": 2,
                      "enableScopes": ["Component", "Table", "Page"],
                      "el": "fm-select",
                      "options": {
                        "defaultValue": "",
                        "multiple": false,
                        "disabled": false,
                        "clearable": true,
                        "placeholder": "",
                        "required": false,
                        "requiredMessage": "",
                        "validatorCheck": false,
                        "validator": "",
                        "width": "",
                        "options": [
                          {
                            "value": "Option 1",
                            "label": "Option 1"
                          },
                          {
                            "value": "Option 2",
                            "label": "Option 2"
                          },
                          {
                            "value": "Option 3",
                            "label": "Option 3"
                          }
                        ],
                        "remote": true,
                        "remoteType": "innerdatasource",
                        "remoteOption": "option_n3f7gka6",
                        "filterable": true,
                        "pagingEnabled": true,
                        "remoteOptions": [],
                        "props": {
                          "value": "tax_rate_percent",
                          "label": "tax_rate_percent",
                          "cascade": "",
                          "children": "",
                          "image": "",
                          "icon": ""
                        },
                        "remoteFunc": "func_n3f7gka6",
                        "customClass": "",
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hidden": false,
                        "dataBind": true,
                        "customProps": {},
                        "tip": "",
                        "tableColumn": false,
                        "subform": false,
                        "paging_enabled": 1,
                        "paging_way": "Pagination",
                        "page_size": 10,
                        "more_fields": [],
                        "datasource": {
                          "source": "Tax Rate Percent:Table:1902027195556155393",
                          "rules": {
                            "collectionId": "1902027195556155393",
                            "list": [
                              {
                                "id": 1746295114458,
                                "parentId": 1746295114457,
                                "isTop": true,
                                "prop": "tax_code",
                                "operator": "numberEqual",
                                "valueType": "field",
                                "value": "{{value:inv_tax_rate_id}}",
                                "type": "leaf",
                                "level": 1,
                                "propLabel": "Tax Code",
                                "valueLabel": "",
                                "operatorLabel": "等于",
                                "valueTypeLabel": "值"
                              }
                            ]
                          }
                        },
                        "url_params": {
                          "list": [
                            {
                              "prop": "",
                              "propLabel": "",
                              "operator": "",
                              "operatorLabel": "",
                              "valueType": "value",
                              "valueTypeLabel": "",
                              "value": null,
                              "valueLabel": ""
                            }
                          ]
                        },
                        "body_params": {
                          "list": [
                            {
                              "prop": "",
                              "propLabel": "",
                              "operator": "",
                              "operatorLabel": "",
                              "valueType": "value",
                              "valueTypeLabel": "",
                              "value": null,
                              "valueLabel": ""
                            }
                          ]
                        },
                        "request_params": {
                          "list": [
                            {
                              "prop": "",
                              "propLabel": "",
                              "operator": "",
                              "operatorLabel": "",
                              "valueType": "value",
                              "valueTypeLabel": "",
                              "value": null,
                              "valueLabel": ""
                            }
                          ]
                        },
                        "dynamicValueType": "fx",
                        "isDynamicValue": false,
                        "hideLabel": true
                      },
                      "events": {
                        "onChange": "",
                        "onFocus": "",
                        "onBlur": ""
                      },
                      "novalid": {},
                      "key": "fue9vbdd",
                      "model": "inv_taxes_rate_percent",
                      "rules": []
                    }
                  ],
                  "key": "opxko9mu",
                  "rules": []
                }
              ],
              "options": {
                "gutter": 12,
                "justify": "start",
                "align": "top",
                "customClass": "",
                "hidden": true,
                "flex": true,
                "responsive": true,
                "remoteFunc": "func_lqfn7mml",
                "remoteOption": "option_lqfn7mml",
                "tableColumn": false,
                "subform": false,
                "dynamicValueType": "fx",
                "isDynamicValue": false,
                "defaultValue": ""
              },
              "novalid": {},
              "key": "lqfn7mml",
              "model": "grid_lqfn7mml",
              "rules": []
            },
            {
              "name": "Payment Term",
              "type": "select",
              "mainIcon": "下拉单选",
              "typeIcon": "下拉单选",
              "icon": "icon-select",
              "group": "Select",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-select",
              "options": {
                "defaultValue": "",
                "multiple": false,
                "disabled": false,
                "clearable": true,
                "placeholder": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "width": "",
                "options": [
                  {
                    "value": "Option 1",
                    "label": "Option 1"
                  },
                  {
                    "value": "Option 2",
                    "label": "Option 2"
                  },
                  {
                    "value": "Option 3",
                    "label": "Option 3"
                  }
                ],
                "remote": true,
                "remoteType": "innerdatasource",
                "remoteOption": "option_n3f7gka6",
                "filterable": true,
                "pagingEnabled": true,
                "remoteOptions": [],
                "props": {
                  "value": "id",
                  "label": "term_name",
                  "cascade": "",
                  "children": "",
                  "image": "",
                  "icon": ""
                },
                "remoteFunc": "func_n3f7gka6",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "customProps": {},
                "tip": "",
                "tableColumn": false,
                "subform": false,
                "paging_enabled": 1,
                "paging_way": "Pagination",
                "page_size": 10,
                "more_fields": [],
                "datasource": {
                  "source": "Payment Terms:Table:1901977384932986882",
                  "rules": {
                    "collectionId": "1901977384932986882",
                    "list": [
                      {
                        "id": 1746295152532,
                        "parentId": 1746295152533,
                        "isTop": true,
                        "type": "branch",
                        "operator": "any",
                        "prop": "",
                        "valueType": "",
                        "value": "",
                        "level": 1,
                        "children": [
                          {
                            "id": 1746295155751,
                            "parentId": 1746295152532,
                            "isTop": false,
                            "prop": "organization_id",
                            "operator": "equal",
                            "valueType": "field",
                            "value": "{{system:deptIds}}",
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "Organization",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "字段"
                          },
                          {
                            "id": 1746295152534,
                            "parentId": 1746295152532,
                            "isTop": false,
                            "prop": "organization_id",
                            "operator": "equal",
                            "valueType": "field",
                            "value": "{{global:deptParentId}}",
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "Organization",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "值"
                          }
                        ]
                      }
                    ]
                  }
                },
                "url_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "body_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "request_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "dynamicValueType": "fx",
                "isDynamicValue": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "n2toz9ul",
              "model": "invoice_payment_term_id",
              "rules": []
            },
            {
              "name": "栅格布局",
              "type": "grid",
              "mainIcon": "栅格布局",
              "typeIcon": "栅格布局",
              "icon": "icon-RectangleCopy",
              "group": "Layout",
              "groupSort": 0,
              "enableScopes": ["Component", "Table", "Page"],
              "columns": [
                {
                  "type": "col",
                  "options": {
                    "span": 12,
                    "offset": 0,
                    "push": 0,
                    "pull": 0,
                    "xs": 24,
                    "sm": 12,
                    "md": 9,
                    "lg": 12,
                    "xl": 12,
                    "customClass": ""
                  },
                  "list": [
                    {
                      "name": "Exchange Rate",
                      "type": "input",
                      "mainIcon": "单行文本",
                      "typeIcon": "多行文本",
                      "icon": "icon-input",
                      "group": "Text",
                      "groupSort": 1,
                      "enableScopes": ["Component", "Table", "Page"],
                      "el": "fm-input",
                      "options": {
                        "width": "",
                        "defaultValue": "",
                        "required": false,
                        "requiredMessage": "",
                        "dataType": "",
                        "dataTypeCheck": false,
                        "dataTypeMessage": "",
                        "pattern": "",
                        "patternCheck": false,
                        "patternMessage": "",
                        "validatorCheck": false,
                        "validator": "",
                        "placeholder": "",
                        "customClass": "",
                        "disabled": true,
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hidden": false,
                        "dataBind": true,
                        "showPassword": false,
                        "clearable": false,
                        "maxlength": "",
                        "showWordLimit": false,
                        "customProps": {},
                        "tip": "",
                        "remoteFunc": "func_jcj5265h",
                        "remoteOption": "option_jcj5265h",
                        "tableColumn": false,
                        "subform": false
                      },
                      "events": {
                        "onChange": "",
                        "onFocus": "",
                        "onBlur": ""
                      },
                      "novalid": {},
                      "key": "jcj5265h",
                      "model": "exchange_rate_currency",
                      "rules": []
                    }
                  ],
                  "key": "fcv4rvgs",
                  "rules": []
                },
                {
                  "type": "col",
                  "options": {
                    "span": 12,
                    "offset": 0,
                    "push": 0,
                    "pull": 0,
                    "xs": 24,
                    "sm": 12,
                    "md": 13,
                    "lg": 12,
                    "xl": 12,
                    "customClass": ""
                  },
                  "list": [
                    {
                      "name": "Exchange Rate Value",
                      "type": "number",
                      "icon": "icon-number",
                      "mainIcon": "数字",
                      "typeIcon": "数字",
                      "group": "Number",
                      "groupSort": 2,
                      "enableScopes": ["Component", "Table", "Page"],
                      "el": "fm-number",
                      "options": {
                        "width": "",
                        "required": false,
                        "requiredMessage": "",
                        "validatorCheck": false,
                        "validator": "",
                        "defaultValue": 0,
                        "min": 0,
                        "step": 1,
                        "disabled": false,
                        "controls": false,
                        "controlsPosition": "",
                        "customClass": "",
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hidden": false,
                        "dataBind": true,
                        "precision": 4,
                        "customProps": {
                          "progressColor": "",
                          "dividingNumber": "",
                          "showNumber": "",
                          "viewMode": "",
                          "format": "rmb",
                          "cacheProp": true
                        },
                        "tip": "",
                        "remoteFunc": "func_cw0cm7nn",
                        "remoteOption": "option_cw0cm7nn",
                        "tableColumn": false,
                        "subform": false,
                        "hideLabel": true,
                        "dynamicValueType": "fx",
                        "isDynamicValue": false
                      },
                      "events": {
                        "onChange": "cw9g6d0g",
                        "onFocus": "",
                        "onBlur": ""
                      },
                      "novalid": {},
                      "key": "cw0cm7nn",
                      "model": "exchange_rate",
                      "rules": []
                    }
                  ],
                  "key": "jimctuwn",
                  "rules": []
                },
                {
                  "type": "col",
                  "options": {
                    "span": 12,
                    "offset": 0,
                    "push": 0,
                    "pull": 0,
                    "xs": 24,
                    "sm": 12,
                    "md": 2,
                    "lg": 12,
                    "xl": 12,
                    "customClass": ""
                  },
                  "list": [
                    {
                      "name": "MYR",
                      "type": "input",
                      "mainIcon": "单行文本",
                      "typeIcon": "多行文本",
                      "icon": "icon-input",
                      "group": "Text",
                      "groupSort": 1,
                      "enableScopes": ["Component", "Table", "Page"],
                      "el": "fm-input",
                      "options": {
                        "width": "",
                        "defaultValue": "MYR",
                        "required": false,
                        "requiredMessage": "",
                        "dataType": "",
                        "dataTypeCheck": false,
                        "dataTypeMessage": "",
                        "pattern": "",
                        "patternCheck": false,
                        "patternMessage": "",
                        "validatorCheck": false,
                        "validator": "",
                        "placeholder": "",
                        "customClass": "",
                        "disabled": true,
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hidden": false,
                        "dataBind": true,
                        "showPassword": false,
                        "clearable": false,
                        "maxlength": "",
                        "showWordLimit": false,
                        "customProps": {},
                        "tip": "",
                        "remoteFunc": "func_bctyh0zk",
                        "remoteOption": "option_bctyh0zk",
                        "tableColumn": false,
                        "subform": false,
                        "hideLabel": true,
                        "dynamicValueType": "fx",
                        "isDynamicValue": false
                      },
                      "events": {
                        "onChange": "",
                        "onFocus": "",
                        "onBlur": ""
                      },
                      "novalid": {},
                      "key": "bctyh0zk",
                      "model": "exchange_rate_myr",
                      "rules": []
                    }
                  ],
                  "key": "h1kvu9wg",
                  "rules": []
                }
              ],
              "options": {
                "gutter": 0,
                "justify": "start",
                "align": "top",
                "customClass": "",
                "hidden": false,
                "flex": true,
                "responsive": true,
                "remoteFunc": "func_3rh5qu0q",
                "remoteOption": "option_3rh5qu0q",
                "tableColumn": false,
                "subform": false
              },
              "novalid": {},
              "key": "3rh5qu0q",
              "model": "grid_3rh5qu0q",
              "rules": []
            },
            {
              "name": "Description",
              "type": "textarea",
              "mainIcon": "多行文本",
              "typeIcon": "多行文本(1)",
              "icon": "icon-diy-com-textarea",
              "group": "Text",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "options": {
                "width": "",
                "defaultValue": "",
                "required": true,
                "requiredMessage": "",
                "disabled": false,
                "pattern": "",
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "rows": 2,
                "autosize": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_msaqd5qk",
                "remoteOption": "option_msaqd5qk",
                "tableColumn": false,
                "subform": false,
                "dynamicValueType": "fx",
                "isDynamicValue": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "msaqd5qk",
              "model": "pi_description",
              "rules": [
                {
                  "required": true,
                  "message": ""
                }
              ]
            },
            {
              "name": "Posted Date",
              "type": "date",
              "mainIcon": "日期",
              "typeIcon": "日期",
              "icon": "icon-date",
              "group": "DateTime",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "options": {
                "defaultValue": "",
                "readonly": false,
                "disabled": false,
                "editable": false,
                "clearable": true,
                "placeholder": "",
                "startPlaceholder": "",
                "endPlaceholder": "",
                "type": "timestamp",
                "timeStampType": "timestamp",
                "format": "YYYY-MM-DD HH:mm:ss",
                "timestamp": false,
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "width": "",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_1u9qvjpr",
                "remoteOption": "option_1u9qvjpr",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "1u9qvjpr",
              "model": "posted_date",
              "rules": []
            },
            {
              "name": "Posted Status",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": true,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_eey86wuq",
                "remoteOption": "option_eey86wuq",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "eey86wuq",
              "model": "posted_status",
              "rules": []
            },
            {
              "name": "Plant",
              "type": "treeselect",
              "mainIcon": "下拉树状单选",
              "typeIcon": "下拉树状单选",
              "icon": "icon-shuxuanzeqi",
              "group": "Select",
              "groupSort": 4,
              "enableScopes": ["Component", "Table", "Page"],
              "options": {
                "defaultValue": "",
                "width": "",
                "placeholder": "",
                "disabled": false,
                "clearable": false,
                "options": [
                  {
                    "value": "Option 1",
                    "label": "Option 1",
                    "children": [
                      {
                        "value": "Option 1 - children",
                        "label": "Option 1 - children"
                      }
                    ]
                  },
                  {
                    "value": "Option 2",
                    "label": "Option 2",
                    "children": [
                      {
                        "value": "Option 2 - children",
                        "label": "Option 2 - children"
                      }
                    ]
                  },
                  {
                    "value": "Option 3",
                    "label": "Option 3"
                  }
                ],
                "remote": true,
                "remoteType": "innerdatasource",
                "remoteOption": "option_iuq91t47",
                "remoteOptions": [],
                "props": {
                  "value": "id",
                  "label": "dept_name",
                  "children": "children",
                  "cascade": "",
                  "image": "",
                  "icon": ""
                },
                "remoteFunc": "func_iuq91t47",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "required": false,
                "validatorCheck": false,
                "validator": "",
                "multiple": false,
                "filterable": true,
                "checkStrictly": true,
                "customProps": {},
                "tip": "",
                "tableColumn": false,
                "subform": false,
                "paging_enabled": 0,
                "paging_way": "Pagination",
                "page_size": 10,
                "more_fields": [],
                "datasource": {
                  "source": "组织机构(勿删勿改):Table:1789995126399348747",
                  "rules": {
                    "collectionId": "1789995126399348747",
                    "list": [
                      {
                        "id": 1747102908614,
                        "parentId": 1747102908615,
                        "isTop": true,
                        "type": "branch",
                        "operator": "any",
                        "prop": "",
                        "valueType": "",
                        "value": "",
                        "level": 1,
                        "children": [
                          {
                            "id": 1723795236686,
                            "parentId": 1747102908614,
                            "isTop": false,
                            "prop": "parent_id",
                            "operator": "numberEqualAny",
                            "valueType": "formula",
                            "value": "{{system:deptIds}}.split(',')",
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "父主键",
                            "valueLabel": "",
                            "operatorLabel": "等于任一",
                            "valueTypeLabel": "公式"
                          },
                          {
                            "id": 1747102908616,
                            "parentId": 1747102908614,
                            "isTop": false,
                            "prop": "id",
                            "operator": "in",
                            "valueType": "formula",
                            "value": "{{system:deptIds}}.split(',')",
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "主键ID",
                            "valueLabel": "",
                            "operatorLabel": "等于任意一个",
                            "valueTypeLabel": "值"
                          }
                        ]
                      }
                    ]
                  }
                },
                "url_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "body_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "request_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                }
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "iuq91t47",
              "model": "plant_id",
              "rules": []
            },
            {
              "name": "Organization",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_lowbzy9k",
                "remoteOption": "option_lowbzy9k",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "8bpnlk0n",
              "model": "organization_id",
              "rules": []
            }
          ],
          "key": "tiiv8h1s",
          "rules": []
        },
        {
          "type": "col",
          "options": {
            "span": 12,
            "offset": 0,
            "push": 0,
            "pull": 0,
            "xs": 24,
            "sm": 12,
            "md": 8,
            "lg": 12,
            "xl": 12,
            "customClass": ""
          },
          "list": [
            {
              "name": "File Upload",
              "type": "fileupload",
              "mainIcon": "文件上传",
              "typeIcon": "文件上传",
              "icon": "icon-wenjianshangchuan",
              "group": "Special",
              "groupSort": 0,
              "enableScopes": ["Component", "Table", "Page"],
              "options": {
                "defaultValue": [],
                "width": "",
                "tokenFunc": "funcGetToken",
                "token": "",
                "tokenType": "datasource",
                "disabled": false,
                "tip": "",
                "action": "/api/blade-resource/oss/endpoint/put-file",
                "customClass": "",
                "limit": 9,
                "multiple": false,
                "isQiniu": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "headers": [],
                "required": false,
                "validatorCheck": false,
                "validator": "",
                "withCredentials": false,
                "remoteFunc": "func_rkk7dyyr",
                "remoteOption": "option_rkk7dyyr",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onSelect": "",
                "onUploadSuccess": "",
                "onUploadError": "",
                "onRemove": ""
              },
              "novalid": {},
              "key": "rkk7dyyr",
              "model": "fileupload_rkk7dyyr",
              "rules": []
            }
          ],
          "key": "3u79iyh1",
          "rules": []
        }
      ],
      "options": {
        "gutter": 32,
        "justify": "start",
        "align": "top",
        "customClass": "",
        "hidden": false,
        "flex": true,
        "responsive": true,
        "remoteFunc": "func_drnapwbg",
        "remoteOption": "option_drnapwbg",
        "tableColumn": false,
        "subform": false
      },
      "key": "drnapwbg",
      "model": "grid_drnapwbg",
      "rules": []
    },
    {
      "name": "Table PI",
      "type": "table",
      "mainIcon": "子表单",
      "typeIcon": "子表单",
      "icon": "icon-table",
      "group": "Container",
      "groupSort": 0,
      "enableScopes": ["Component", "Table", "Page"],
      "options": {
        "defaultValue": [],
        "customClass": "",
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": false,
        "dataBind": true,
        "disabled": false,
        "required": false,
        "validatorCheck": false,
        "validator": "",
        "paging": false,
        "pageSize": 5,
        "isAdd": false,
        "isDelete": true,
        "showControl": true,
        "virtualTable": true,
        "sortable": true,
        "tip": "",
        "remoteFunc": "func_xpuy7o4q",
        "remoteOption": "option_xpuy7o4q",
        "tableColumn": false,
        "subform": false,
        "hideLabel": true
      },
      "events": {
        "onChange": "",
        "onRowAdd": "",
        "onRowRemove": "",
        "onPageChange": ""
      },
      "tableColumns": [
        {
          "name": "Item Name",
          "type": "select",
          "mainIcon": "下拉单选",
          "typeIcon": "下拉单选",
          "icon": "icon-select",
          "group": "Select",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-select",
          "options": {
            "defaultValue": "",
            "multiple": false,
            "disabled": true,
            "clearable": false,
            "placeholder": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "width": "",
            "options": [
              {
                "value": "Option 1",
                "label": "Option 1"
              },
              {
                "value": "Option 2",
                "label": "Option 2"
              },
              {
                "value": "Option 3",
                "label": "Option 3"
              }
            ],
            "remote": true,
            "remoteType": "innerdatasource",
            "remoteOption": "option_n3f7gka6",
            "filterable": true,
            "pagingEnabled": true,
            "remoteOptions": [],
            "props": {
              "value": "id",
              "label": "material_name",
              "cascade": "",
              "children": "",
              "image": "",
              "icon": ""
            },
            "remoteFunc": "func_n3f7gka6",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "customProps": {},
            "tip": "",
            "tableColumn": true,
            "subform": false,
            "paging_enabled": 1,
            "paging_way": "Pagination",
            "page_size": 10,
            "more_fields": [],
            "datasource": {
              "source": "Item:Table:1901546842240438273",
              "rules": {
                "collectionId": "1901546842240438273",
                "list": [
                  {
                    "id": 1746295273321,
                    "parentId": 1746295273320,
                    "isTop": true,
                    "prop": "",
                    "operator": "",
                    "valueType": "",
                    "value": "",
                    "type": "leaf",
                    "level": 1
                  }
                ]
              }
            },
            "url_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "body_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "request_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            }
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "jnmnlcdf",
          "model": "material_id",
          "rules": []
        },
        {
          "name": "Item Description",
          "type": "textarea",
          "mainIcon": "多行文本",
          "typeIcon": "多行文本(1)",
          "icon": "icon-diy-com-textarea",
          "group": "Text",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "width": "",
            "defaultValue": "",
            "required": false,
            "requiredMessage": "",
            "disabled": true,
            "pattern": "",
            "patternMessage": "",
            "validatorCheck": false,
            "validator": "",
            "placeholder": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "clearable": false,
            "maxlength": "",
            "showWordLimit": false,
            "rows": 1,
            "autosize": true,
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_20liurp4",
            "remoteOption": "option_20liurp4",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "20liurp4",
          "model": "item_desc",
          "rules": []
        },
        {
          "name": "Input",
          "type": "input",
          "mainIcon": "单行文本",
          "typeIcon": "多行文本",
          "icon": "icon-input",
          "group": "Text",
          "groupSort": 1,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-input",
          "options": {
            "width": "",
            "defaultValue": "",
            "required": false,
            "requiredMessage": "",
            "dataType": "",
            "dataTypeCheck": false,
            "dataTypeMessage": "",
            "pattern": "",
            "patternCheck": false,
            "patternMessage": "",
            "validatorCheck": false,
            "validator": "",
            "placeholder": "",
            "customClass": "",
            "disabled": false,
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "showPassword": false,
            "clearable": false,
            "maxlength": "",
            "showWordLimit": false,
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_s0t9i6qh",
            "remoteOption": "option_s0t9i6qh",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "s0t9i6qh",
          "model": "input_s0t9i6qh",
          "rules": []
        },
        {
          "name": "Order Qty",
          "type": "number",
          "icon": "icon-number",
          "mainIcon": "数字",
          "typeIcon": "数字",
          "group": "Number",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-number",
          "options": {
            "width": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "defaultValue": 0,
            "min": 0,
            "step": 1,
            "disabled": true,
            "controls": false,
            "controlsPosition": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "precision": 3,
            "customProps": {
              "progressColor": "",
              "dividingNumber": "",
              "showNumber": "",
              "viewMode": "",
              "format": "rmb",
              "cacheProp": true
            },
            "tip": "",
            "remoteFunc": "func_a08z6q5p",
            "remoteOption": "option_a08z6q5p",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "a08z6q5p",
          "model": "order_qty",
          "rules": []
        },
        {
          "name": "Received Qty",
          "type": "number",
          "icon": "icon-number",
          "mainIcon": "数字",
          "typeIcon": "数字",
          "group": "Number",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-number",
          "options": {
            "width": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "defaultValue": 0,
            "min": 0,
            "step": 1,
            "disabled": true,
            "controls": false,
            "controlsPosition": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "precision": 3,
            "customProps": {
              "progressColor": "",
              "dividingNumber": "",
              "showNumber": "",
              "viewMode": "",
              "format": "rmb",
              "cacheProp": true
            },
            "tip": "",
            "remoteFunc": "func_a08z6q5p",
            "remoteOption": "option_a08z6q5p",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "ooep7038",
          "model": "received_qty",
          "rules": []
        },
        {
          "name": "Invoice Qty",
          "type": "number",
          "icon": "icon-number",
          "mainIcon": "数字",
          "typeIcon": "数字",
          "group": "Number",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-number",
          "options": {
            "width": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "defaultValue": 0,
            "min": 0,
            "step": 1,
            "disabled": true,
            "controls": false,
            "controlsPosition": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "precision": 3,
            "customProps": {
              "progressColor": "",
              "dividingNumber": "",
              "showNumber": "",
              "viewMode": "",
              "format": "rmb",
              "cacheProp": true
            },
            "tip": "",
            "remoteFunc": "func_a08z6q5p",
            "remoteOption": "option_a08z6q5p",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "h9m7p7dr",
          "model": "invoice_qty",
          "rules": []
        },
        {
          "name": "Quantity UOM",
          "type": "select",
          "mainIcon": "下拉单选",
          "typeIcon": "下拉单选",
          "icon": "icon-select",
          "group": "Select",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-select",
          "options": {
            "defaultValue": "",
            "multiple": false,
            "disabled": true,
            "clearable": false,
            "placeholder": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "width": "",
            "options": [
              {
                "value": "Option 1",
                "label": "Option 1"
              },
              {
                "value": "Option 2",
                "label": "Option 2"
              },
              {
                "value": "Option 3",
                "label": "Option 3"
              }
            ],
            "remote": true,
            "remoteType": "innerdatasource",
            "remoteOption": "option_n3f7gka6",
            "filterable": true,
            "pagingEnabled": true,
            "remoteOptions": [],
            "props": {
              "value": "id",
              "label": "uom_name",
              "cascade": "",
              "children": "",
              "image": "",
              "icon": ""
            },
            "remoteFunc": "func_n3f7gka6",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "customProps": {},
            "tip": "",
            "tableColumn": true,
            "subform": false,
            "paging_enabled": 1,
            "paging_way": "Pagination",
            "page_size": 10,
            "more_fields": [],
            "datasource": {
              "source": "UOM:Table:1901805375573839874",
              "rules": {
                "collectionId": "1901805375573839874",
                "list": [
                  {
                    "id": 1746295340990,
                    "parentId": 1746295340989,
                    "isTop": true,
                    "prop": "",
                    "operator": "",
                    "valueType": "",
                    "value": "",
                    "type": "leaf",
                    "level": 1
                  }
                ]
              }
            },
            "url_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "body_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "request_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            }
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "unv8xq2f",
          "model": "quantity_uom",
          "rules": []
        },
        {
          "name": "Unit Price",
          "type": "number",
          "icon": "icon-number",
          "mainIcon": "数字",
          "typeIcon": "数字",
          "group": "Number",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-number",
          "options": {
            "width": "",
            "required": true,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "defaultValue": 0,
            "min": 0,
            "step": 1,
            "disabled": false,
            "controls": false,
            "controlsPosition": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "precision": 4,
            "customProps": {
              "progressColor": "",
              "dividingNumber": "",
              "showNumber": "",
              "viewMode": "",
              "format": "rmb",
              "cacheProp": true
            },
            "tip": "",
            "remoteFunc": "func_a08z6q5p",
            "remoteOption": "option_a08z6q5p",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "uq6mkq3j",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "hhntnhfx",
          "model": "order_unit_price",
          "rules": [
            {
              "required": true,
              "message": ""
            }
          ]
        },
        {
          "name": "Gross",
          "type": "number",
          "icon": "icon-number",
          "mainIcon": "数字",
          "typeIcon": "数字",
          "group": "Number",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-number",
          "options": {
            "width": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "defaultValue": 0,
            "min": 0,
            "step": 1,
            "disabled": true,
            "controls": false,
            "controlsPosition": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "precision": 2,
            "customProps": {
              "progressColor": "",
              "dividingNumber": "",
              "showNumber": "",
              "viewMode": "",
              "format": "rmb",
              "cacheProp": true
            },
            "tip": "",
            "remoteFunc": "func_a08z6q5p",
            "remoteOption": "option_a08z6q5p",
            "tableColumn": true,
            "subform": false,
            "hideLabel": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "hi2db4iu",
          "model": "order_gross",
          "rules": []
        },
        {
          "name": "Discount",
          "type": "number",
          "icon": "icon-number",
          "mainIcon": "数字",
          "typeIcon": "数字",
          "group": "Number",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-number",
          "options": {
            "width": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "defaultValue": 0,
            "min": 0,
            "step": 1,
            "disabled": false,
            "controls": false,
            "controlsPosition": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "precision": 2,
            "customProps": {
              "progressColor": "",
              "dividingNumber": "",
              "showNumber": "",
              "viewMode": "",
              "format": "rmb",
              "cacheProp": true
            },
            "tip": "",
            "remoteFunc": "func_a08z6q5p",
            "remoteOption": "option_a08z6q5p",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "uq6mkq3j",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "0ozeawek",
          "model": "order_discount",
          "rules": []
        },
        {
          "name": "Discount (Type)",
          "type": "select",
          "mainIcon": "下拉单选",
          "typeIcon": "下拉单选",
          "icon": "icon-select",
          "group": "Select",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-select",
          "options": {
            "defaultValue": "",
            "multiple": false,
            "disabled": false,
            "clearable": true,
            "placeholder": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "width": "",
            "options": [
              {
                "value": "%",
                "label": "%",
                "image": [],
                "icon": ""
              },
              {
                "value": "Amount",
                "label": "Amount",
                "image": [],
                "icon": ""
              }
            ],
            "remote": false,
            "remoteType": "datasource",
            "remoteOption": "option_b3cmiwz2",
            "filterable": true,
            "pagingEnabled": true,
            "remoteOptions": [],
            "props": {
              "value": "value",
              "label": "label"
            },
            "remoteFunc": "func_b3cmiwz2",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "customProps": {},
            "tip": "",
            "tableColumn": true,
            "subform": false,
            "paging_enabled": 0,
            "paging_way": "Pagination",
            "page_size": 10,
            "more_fields": [],
            "datasource": {
              "source": "static",
              "rules": {
                "collectionId": "",
                "list": [
                  {
                    "id": 1723795236686,
                    "parentId": 1723795236685,
                    "isTop": true,
                    "prop": "",
                    "operator": "",
                    "valueType": "",
                    "value": "",
                    "type": "leaf",
                    "level": 1
                  }
                ]
              }
            },
            "url_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "body_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "request_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            }
          },
          "events": {
            "onChange": "uq6mkq3j",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "b3cmiwz2",
          "model": "discount_uom",
          "rules": []
        },
        {
          "name": "Discount Amount",
          "type": "number",
          "icon": "icon-number",
          "mainIcon": "数字",
          "typeIcon": "数字",
          "group": "Number",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-number",
          "options": {
            "width": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "defaultValue": 0,
            "min": 0,
            "step": 1,
            "disabled": true,
            "controls": false,
            "controlsPosition": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "precision": 2,
            "customProps": {
              "progressColor": "",
              "dividingNumber": "",
              "showNumber": "",
              "viewMode": "",
              "format": "rmb",
              "cacheProp": true
            },
            "tip": "",
            "remoteFunc": "func_a08z6q5p",
            "remoteOption": "option_a08z6q5p",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "tfthssx9",
          "model": "discount_amount",
          "rules": []
        },
        {
          "name": "Tax Rate",
          "type": "select",
          "mainIcon": "下拉单选",
          "typeIcon": "下拉单选",
          "icon": "icon-select",
          "group": "Select",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-select",
          "options": {
            "defaultValue": "",
            "multiple": false,
            "disabled": false,
            "clearable": true,
            "placeholder": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "width": "",
            "options": [
              {
                "value": "Option 1",
                "label": "Option 1"
              },
              {
                "value": "Option 2",
                "label": "Option 2"
              },
              {
                "value": "Option 3",
                "label": "Option 3"
              }
            ],
            "remote": true,
            "remoteType": "innerdatasource",
            "remoteOption": "option_miqv3msp",
            "filterable": true,
            "pagingEnabled": true,
            "remoteOptions": [],
            "props": {
              "value": "id",
              "label": "tax_code",
              "cascade": "",
              "children": "",
              "image": "",
              "icon": ""
            },
            "remoteFunc": "func_miqv3msp",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "customProps": {},
            "tip": "",
            "tableColumn": true,
            "subform": false,
            "paging_enabled": 1,
            "paging_way": "Pagination",
            "page_size": 10,
            "more_fields": [],
            "datasource": {
              "source": "Tax Rate:Table:1901979496744079362",
              "rules": {
                "collectionId": "1901979496744079362",
                "list": [
                  {
                    "id": 1747210130770,
                    "parentId": 1747210130771,
                    "isTop": true,
                    "type": "branch",
                    "operator": "all",
                    "prop": "",
                    "valueType": "",
                    "value": "",
                    "level": 1,
                    "children": [
                      {
                        "id": 1747210130773,
                        "isTop": false,
                        "parentId": 1747210130770,
                        "type": "branch",
                        "operator": "any",
                        "level": 2,
                        "children": [
                          {
                            "id": 1723795236686,
                            "parentId": 1747210130773,
                            "isTop": false,
                            "prop": "tax_type",
                            "operator": "equal",
                            "valueType": "value",
                            "value": "Purchase",
                            "type": "leaf",
                            "level": 3,
                            "propLabel": "Tax Type",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "值"
                          },
                          {
                            "id": 1747210130774,
                            "parentId": 1747210130773,
                            "isTop": false,
                            "prop": "tax_type",
                            "operator": "equal",
                            "valueType": "value",
                            "value": "Purchase & Sales",
                            "type": "leaf",
                            "level": 3,
                            "propLabel": "Tax Type",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "值"
                          }
                        ]
                      },
                      {
                        "id": 1747210130775,
                        "isTop": false,
                        "parentId": 1747210130770,
                        "type": "branch",
                        "operator": "any",
                        "level": 2,
                        "children": [
                          {
                            "id": 1747210130772,
                            "parentId": 1747210130775,
                            "isTop": false,
                            "prop": "organization_id",
                            "operator": "equal",
                            "valueType": "field",
                            "value": "{{system:deptIds}}",
                            "type": "leaf",
                            "level": 3,
                            "propLabel": "Organization",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "值"
                          },
                          {
                            "id": 1747210130776,
                            "parentId": 1747210130775,
                            "isTop": false,
                            "prop": "organization_id",
                            "operator": "equal",
                            "valueType": "field",
                            "value": "{{global:deptParentId}}",
                            "type": "leaf",
                            "level": 3,
                            "propLabel": "Organization",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "值"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "url_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "body_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "request_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            }
          },
          "events": {
            "onChange": "nfqegxpb",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "miqv3msp",
          "model": "tax_preference",
          "rules": []
        },
        {
          "name": "Tax Rate Percent",
          "type": "select",
          "mainIcon": "下拉单选",
          "typeIcon": "下拉单选",
          "icon": "icon-select",
          "group": "Select",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-select",
          "options": {
            "defaultValue": "",
            "multiple": false,
            "disabled": true,
            "clearable": true,
            "placeholder": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "width": "",
            "options": [
              {
                "value": "Option 1",
                "label": "Option 1"
              },
              {
                "value": "Option 2",
                "label": "Option 2"
              },
              {
                "value": "Option 3",
                "label": "Option 3"
              }
            ],
            "remote": true,
            "remoteType": "innerdatasource",
            "remoteOption": "option_miqv3msp",
            "filterable": true,
            "pagingEnabled": true,
            "remoteOptions": [],
            "props": {
              "value": "tax_rate_percent",
              "label": "tax_rate_percent",
              "cascade": "",
              "children": "",
              "image": "",
              "icon": ""
            },
            "remoteFunc": "func_miqv3msp",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "customProps": {},
            "tip": "",
            "tableColumn": true,
            "subform": false,
            "paging_enabled": 1,
            "paging_way": "Pagination",
            "page_size": 10,
            "more_fields": [],
            "datasource": {
              "source": "Tax Rate Percent:Table:1902027195556155393",
              "rules": {
                "collectionId": "1902027195556155393",
                "list": [
                  {
                    "id": 1747210244256,
                    "parentId": 1747210244255,
                    "isTop": true,
                    "prop": "",
                    "operator": "",
                    "valueType": "",
                    "value": "",
                    "type": "leaf",
                    "level": 1
                  }
                ]
              }
            },
            "url_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "body_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "request_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            }
          },
          "events": {
            "onChange": "uq6mkq3j",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "cxwz1996",
          "model": "tax_rate_percent",
          "rules": []
        },
        {
          "name": "Tax Fee Amount",
          "type": "number",
          "icon": "icon-number",
          "mainIcon": "数字",
          "typeIcon": "数字",
          "group": "Number",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-number",
          "options": {
            "width": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "defaultValue": 0,
            "min": 0,
            "step": 1,
            "disabled": true,
            "controls": false,
            "controlsPosition": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": true,
            "dataBind": true,
            "precision": 2,
            "customProps": {
              "progressColor": "",
              "dividingNumber": "",
              "showNumber": "",
              "viewMode": "",
              "format": "rmb",
              "cacheProp": true
            },
            "tip": "",
            "remoteFunc": "func_a08z6q5p",
            "remoteOption": "option_a08z6q5p",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "kj5sre7y",
          "model": "tax_amount",
          "rules": []
        },
        {
          "name": "Tax Inclusive",
          "type": "switch",
          "mainIcon": "开关",
          "typeIcon": "开关",
          "icon": "icon-switch",
          "group": "Select",
          "groupSort": 8,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "defaultValue": 0,
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "disabled": false,
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "width": "",
            "customProps": {},
            "tip": "",
            "booleanValueMode": false,
            "alignright": false,
            "checkboxMode": true,
            "remoteFunc": "func_b7sgmxcx",
            "remoteOption": "option_b7sgmxcx",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "uq6mkq3j"
          },
          "novalid": {},
          "key": "b7sgmxcx",
          "model": "tax_inclusive",
          "rules": []
        },
        {
          "name": "Amount (To Pay)",
          "type": "number",
          "icon": "icon-number",
          "mainIcon": "数字",
          "typeIcon": "数字",
          "group": "Number",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-number",
          "options": {
            "width": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "defaultValue": 0,
            "min": 0,
            "step": 1,
            "disabled": true,
            "controls": false,
            "controlsPosition": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "precision": 2,
            "customProps": {
              "progressColor": "",
              "dividingNumber": "",
              "showNumber": "",
              "viewMode": "",
              "format": "rmb",
              "cacheProp": true
            },
            "tip": "",
            "remoteFunc": "func_a08z6q5p",
            "remoteOption": "option_a08z6q5p",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "6d6midfb",
          "model": "invoice_amount",
          "rules": []
        }
      ],
      "key": "xpuy7o4q",
      "model": "table_pi",
      "rules": []
    },
    {
      "name": "自动布局",
      "type": "flex",
      "el": "su-fm-flex",
      "mainIcon": "自动布局",
      "typeIcon": "自动布局",
      "icon": "icon-zhediemianban",
      "group": "Design",
      "groupSort": 6,
      "enableScopes": ["Component", "Table", "Page"],
      "options": {
        "title": "布局",
        "customClass": "",
        "hidden": false,
        "recursive": false,
        "recursiveStyleFx": "",
        "slotTarget": "",
        "defaultValue": "",
        "flexDirection": "row",
        "flexWrap": "nowrap",
        "alignItems": "center",
        "justifyContent": "flex-end",
        "hGap": "",
        "vGap": "",
        "grid": {
          "row": {
            "value": "",
            "visible": true
          },
          "col": {
            "value": "",
            "visible": true
          },
          "use": false
        },
        "padding": ["", "", "", ""],
        "margin": ["", "", "", ""],
        "boxSizing": "border-box",
        "width": "",
        "height": "",
        "radius": ["", "", "", ""],
        "position": "",
        "positions": ["", "", "", ""],
        "zIndex": "",
        "flex": "",
        "flexGrow": "",
        "flexShrink": "",
        "fills": [],
        "borders": [],
        "effects": [],
        "states": [],
        "hoverClass": "",
        "overflow": "",
        "styleFx": "",
        "behave": "",
        "remoteFunc": "func_gtkou3ei",
        "remoteOption": "option_gtkou3ei",
        "tableColumn": false,
        "subform": false,
        "props": {},
        "datasource": {
          "source": null,
          "rules": {
            "collectionId": "",
            "list": [
              {
                "id": 1723795236686,
                "parentId": 1723795236685,
                "isTop": true,
                "prop": "",
                "operator": "",
                "valueType": "",
                "value": "",
                "type": "leaf",
                "level": 1
              }
            ]
          }
        },
        "remote": false,
        "remoteType": "datasource",
        "url_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        },
        "body_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        },
        "request_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        },
        "paging_enabled": 0,
        "paging_way": "Pagination",
        "page_size": 10,
        "more_fields": []
      },
      "list": [
        {
          "name": "自动布局",
          "type": "flex",
          "el": "su-fm-flex",
          "mainIcon": "自动布局",
          "typeIcon": "自动布局",
          "icon": "icon-zhediemianban",
          "group": "Design",
          "groupSort": 6,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "title": "布局",
            "customClass": "",
            "hidden": false,
            "recursive": false,
            "recursiveStyleFx": "",
            "slotTarget": "",
            "defaultValue": "",
            "flexDirection": "column",
            "flexWrap": "",
            "alignItems": "",
            "justifyContent": "",
            "hGap": "",
            "vGap": "",
            "grid": {
              "row": {
                "value": "",
                "visible": true
              },
              "col": {
                "value": "",
                "visible": true
              },
              "use": false
            },
            "padding": ["", "", "", ""],
            "margin": ["", "", "", ""],
            "boxSizing": "border-box",
            "width": "220px",
            "height": "",
            "radius": ["", "", "", ""],
            "position": "",
            "positions": ["", "", "", ""],
            "zIndex": "",
            "flex": "",
            "flexGrow": "",
            "flexShrink": "",
            "fills": [],
            "borders": [],
            "effects": [],
            "states": [],
            "hoverClass": "",
            "overflow": "",
            "styleFx": "",
            "behave": "",
            "remoteFunc": "func_a8b3r55e",
            "remoteOption": "option_a8b3r55e",
            "tableColumn": false,
            "subform": false,
            "props": {},
            "datasource": {
              "source": null,
              "rules": {
                "collectionId": "",
                "list": [
                  {
                    "id": 1723795236686,
                    "parentId": 1723795236685,
                    "isTop": true,
                    "prop": "",
                    "operator": "",
                    "valueType": "",
                    "value": "",
                    "type": "leaf",
                    "level": 1
                  }
                ]
              }
            },
            "remote": false,
            "remoteType": "datasource",
            "url_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "paging_enabled": 0,
            "paging_way": "Pagination",
            "page_size": 10,
            "more_fields": [],
            "body_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "request_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            }
          },
          "list": [
            {
              "name": "Total Gross",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": true,
                "labelWidth": 160,
                "isLabelWidth": true,
                "hidden": false,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_p9sm055a",
                "remoteOption": "option_p9sm055a",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "key": "p9sm055a",
              "model": "total_gross_currency",
              "rules": []
            },
            {
              "name": "Total Discount",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": true,
                "labelWidth": 160,
                "isLabelWidth": true,
                "hidden": false,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_p9sm055a",
                "remoteOption": "option_p9sm055a",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "key": "xaklkg5h",
              "model": "total_discount_currency",
              "rules": []
            },
            {
              "name": "Total Tax Fee",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": true,
                "labelWidth": 160,
                "isLabelWidth": true,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_p9sm055a",
                "remoteOption": "option_p9sm055a",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "key": "1cdw8aor",
              "model": "total_tax_currency",
              "rules": []
            },
            {
              "name": "",
              "type": "divider",
              "mainIcon": "分割线",
              "typeIcon": "分割线",
              "icon": "icon-fengexian",
              "group": "Layout",
              "groupSort": 7,
              "enableScopes": ["Component", "Table", "Page"],
              "options": {
                "hidden": false,
                "contentPosition": "left",
                "customProps": {},
                "remoteFunc": "func_c3x7kj3g",
                "remoteOption": "option_c3x7kj3g",
                "tableColumn": false,
                "subform": false,
                "customClass": ""
              },
              "novalid": {},
              "key": "g407w3dm",
              "model": "divider_g407w3dm",
              "rules": []
            },
            {
              "name": "Total Amount",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": true,
                "labelWidth": 160,
                "isLabelWidth": true,
                "hidden": false,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_p9sm055a",
                "remoteOption": "option_p9sm055a",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "key": "ikvvdzn9",
              "model": "total_amount_currency",
              "rules": []
            },
            {
              "name": "Total Amount (MYR)",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "MYR",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": true,
                "labelWidth": 160,
                "isLabelWidth": true,
                "hidden": false,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_p9sm055a",
                "remoteOption": "option_p9sm055a",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "key": "e0l4s3ds",
              "model": "total_amount_myr",
              "rules": []
            }
          ],
          "events": {
            "onClick": ""
          },
          "key": "a8b3r55e",
          "model": "flex_a8b3r55e",
          "rules": []
        },
        {
          "name": "自动布局",
          "type": "flex",
          "el": "su-fm-flex",
          "mainIcon": "自动布局",
          "typeIcon": "自动布局",
          "icon": "icon-zhediemianban",
          "group": "Design",
          "groupSort": 6,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "title": "布局",
            "customClass": "",
            "hidden": false,
            "recursive": false,
            "recursiveStyleFx": "",
            "slotTarget": "",
            "defaultValue": "",
            "flexDirection": "column",
            "flexWrap": "",
            "alignItems": "",
            "justifyContent": "",
            "hGap": "",
            "vGap": "",
            "grid": {
              "row": {
                "value": "",
                "visible": true
              },
              "col": {
                "value": "",
                "visible": true
              },
              "use": false
            },
            "padding": ["", "", "", ""],
            "margin": ["", "", "", ""],
            "boxSizing": "border-box",
            "width": "180px",
            "height": "",
            "radius": ["", "", "", ""],
            "position": "",
            "positions": ["", "", "", ""],
            "zIndex": "",
            "flex": "",
            "flexGrow": "",
            "flexShrink": "",
            "fills": [],
            "borders": [],
            "effects": [],
            "states": [],
            "hoverClass": "",
            "overflow": "",
            "styleFx": "",
            "behave": "",
            "remoteFunc": "func_31q65gbb",
            "remoteOption": "option_31q65gbb",
            "tableColumn": false,
            "subform": false,
            "props": {},
            "datasource": {
              "source": null,
              "rules": {
                "collectionId": "",
                "list": [
                  {
                    "id": 1723795236686,
                    "parentId": 1723795236685,
                    "isTop": true,
                    "prop": "",
                    "operator": "",
                    "valueType": "",
                    "value": "",
                    "type": "leaf",
                    "level": 1
                  }
                ]
              }
            },
            "remote": false,
            "remoteType": "datasource",
            "url_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            }
          },
          "list": [
            {
              "name": "Sub Total",
              "type": "number",
              "icon": "icon-number",
              "mainIcon": "数字",
              "typeIcon": "数字",
              "group": "Number",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-number",
              "options": {
                "width": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "defaultValue": 0,
                "min": 0,
                "step": 1,
                "disabled": true,
                "controls": false,
                "controlsPosition": "",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "precision": 2,
                "customProps": {
                  "progressColor": "",
                  "dividingNumber": "",
                  "showNumber": "",
                  "viewMode": "",
                  "format": "rmb",
                  "cacheProp": true
                },
                "tip": "",
                "remoteFunc": "func_8zttt0vv",
                "remoteOption": "option_8zttt0vv",
                "tableColumn": false,
                "subform": false,
                "hideLabel": true
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "8zttt0vv",
              "model": "invoice_subtotal",
              "rules": []
            },
            {
              "name": "Total Discount",
              "type": "number",
              "icon": "icon-number",
              "mainIcon": "数字",
              "typeIcon": "数字",
              "group": "Number",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-number",
              "options": {
                "width": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "defaultValue": 0,
                "min": 0,
                "step": 1,
                "disabled": true,
                "controls": false,
                "controlsPosition": "",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "precision": 2,
                "customProps": {
                  "progressColor": "",
                  "dividingNumber": "",
                  "showNumber": "",
                  "viewMode": "",
                  "format": "rmb",
                  "cacheProp": true
                },
                "tip": "",
                "remoteFunc": "func_8zttt0vv",
                "remoteOption": "option_8zttt0vv",
                "tableColumn": false,
                "subform": false,
                "hideLabel": true
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "yri4vxfg",
              "model": "invoice_total_discount",
              "rules": []
            },
            {
              "name": "Total Tax Amount",
              "type": "number",
              "icon": "icon-number",
              "mainIcon": "数字",
              "typeIcon": "数字",
              "group": "Number",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-number",
              "options": {
                "width": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "defaultValue": 0,
                "min": 0,
                "step": 1,
                "disabled": true,
                "controls": false,
                "controlsPosition": "",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "precision": 2,
                "customProps": {
                  "progressColor": "",
                  "dividingNumber": "",
                  "showNumber": "",
                  "viewMode": "",
                  "format": "rmb",
                  "cacheProp": true
                },
                "tip": "",
                "remoteFunc": "func_8zttt0vv",
                "remoteOption": "option_8zttt0vv",
                "tableColumn": false,
                "subform": false,
                "hideLabel": true
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "tb6dn67e",
              "model": "invoice_taxes_amount",
              "rules": []
            },
            {
              "name": "",
              "type": "divider",
              "mainIcon": "分割线",
              "typeIcon": "分割线",
              "icon": "icon-fengexian",
              "group": "Layout",
              "groupSort": 7,
              "enableScopes": ["Component", "Table", "Page"],
              "options": {
                "hidden": false,
                "contentPosition": "left",
                "customProps": {},
                "remoteFunc": "func_c3x7kj3g",
                "remoteOption": "option_c3x7kj3g",
                "tableColumn": false,
                "subform": false,
                "customClass": ""
              },
              "novalid": {},
              "key": "c3x7kj3g",
              "model": "divider_c3x7kj3g",
              "rules": []
            },
            {
              "name": "Total",
              "type": "number",
              "icon": "icon-number",
              "mainIcon": "数字",
              "typeIcon": "数字",
              "group": "Number",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-number",
              "options": {
                "width": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "defaultValue": 0,
                "min": 0,
                "step": 1,
                "disabled": true,
                "controls": false,
                "controlsPosition": "",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "precision": 2,
                "customProps": {
                  "progressColor": "",
                  "dividingNumber": "",
                  "showNumber": "",
                  "viewMode": "",
                  "format": "rmb",
                  "cacheProp": true
                },
                "tip": "",
                "remoteFunc": "func_8zttt0vv",
                "remoteOption": "option_8zttt0vv",
                "tableColumn": false,
                "subform": false,
                "hideLabel": true
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "1raq951y",
              "model": "invoice_total",
              "rules": []
            },
            {
              "name": "Total Amount ",
              "type": "number",
              "icon": "icon-number",
              "mainIcon": "数字",
              "typeIcon": "数字",
              "group": "Number",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-number",
              "options": {
                "width": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "defaultValue": 0,
                "min": 0,
                "step": 1,
                "disabled": true,
                "controls": false,
                "controlsPosition": "",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "precision": 2,
                "customProps": {
                  "progressColor": "",
                  "dividingNumber": "",
                  "showNumber": "",
                  "viewMode": "",
                  "format": "rmb",
                  "cacheProp": true
                },
                "tip": "",
                "remoteFunc": "func_8zttt0vv",
                "remoteOption": "option_8zttt0vv",
                "tableColumn": false,
                "subform": false,
                "hideLabel": true
              },
              "events": {
                "onChange": "cw9g6d0g",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "aqrg7glk",
              "model": "myr_total_amount",
              "rules": []
            }
          ],
          "events": {
            "onClick": ""
          },
          "key": "31q65gbb",
          "model": "flex_31q65gbb",
          "rules": []
        }
      ],
      "events": {
        "onClick": ""
      },
      "key": "gtkou3ei",
      "model": "flex_gtkou3ei",
      "rules": []
    },
    {
      "name": "Remark Note",
      "type": "textarea",
      "mainIcon": "多行文本",
      "typeIcon": "多行文本(1)",
      "icon": "icon-diy-com-textarea",
      "group": "Text",
      "groupSort": 2,
      "enableScopes": ["Component", "Table", "Page"],
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "disabled": false,
        "pattern": "",
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": false,
        "dataBind": true,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "rows": 2,
        "autosize": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_l79gp92m",
        "remoteOption": "option_l79gp92m",
        "tableColumn": false,
        "subform": false
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "l79gp92m",
      "model": "remarks",
      "rules": []
    },
    {
      "name": "自动布局",
      "type": "flex",
      "el": "su-fm-flex",
      "mainIcon": "自动布局",
      "typeIcon": "自动布局",
      "icon": "icon-zhediemianban",
      "group": "Design",
      "groupSort": 6,
      "enableScopes": ["Component", "Table", "Page"],
      "options": {
        "title": "布局",
        "customClass": "",
        "hidden": false,
        "recursive": false,
        "recursiveStyleFx": "",
        "slotTarget": "",
        "defaultValue": "",
        "flexDirection": "column",
        "flexWrap": "",
        "alignItems": "",
        "justifyContent": "",
        "hGap": "",
        "vGap": "",
        "grid": {
          "row": {
            "value": "",
            "visible": true
          },
          "col": {
            "value": "",
            "visible": true
          },
          "use": false
        },
        "padding": ["", "", "", ""],
        "margin": ["", "", "", ""],
        "boxSizing": "border-box",
        "width": "",
        "height": "70px",
        "radius": ["", "", "", ""],
        "position": "",
        "positions": ["", "", "", ""],
        "zIndex": "",
        "flex": "",
        "flexGrow": "",
        "flexShrink": "",
        "fills": [
          {
            "type": "color",
            "value": "#ffffffff",
            "mode": "aspectFill",
            "rotate": "",
            "visible": true
          }
        ],
        "borders": [],
        "effects": [],
        "states": [],
        "hoverClass": "",
        "overflow": "",
        "styleFx": "",
        "behave": "",
        "remoteFunc": "func_0nj0adfr",
        "remoteOption": "option_0nj0adfr",
        "tableColumn": false,
        "subform": false,
        "props": {},
        "datasource": {
          "source": null,
          "rules": {
            "collectionId": "",
            "list": [
              {
                "id": 1723795236686,
                "parentId": 1723795236685,
                "isTop": true,
                "prop": "",
                "operator": "",
                "valueType": "",
                "value": "",
                "type": "leaf",
                "level": 1
              }
            ]
          }
        },
        "remote": false,
        "remoteType": "datasource",
        "url_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        },
        "body_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        },
        "request_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        }
      },
      "list": [],
      "events": {
        "onClick": ""
      },
      "key": "0nj0adfr",
      "model": "flex_0nj0adfr",
      "rules": []
    },
    {
      "name": "自动布局",
      "type": "flex",
      "el": "su-fm-flex",
      "mainIcon": "自动布局",
      "typeIcon": "自动布局",
      "icon": "icon-zhediemianban",
      "group": "Design",
      "groupSort": 6,
      "enableScopes": ["Component", "Table", "Page"],
      "options": {
        "title": "布局",
        "customClass": "fixbutton",
        "hidden": false,
        "recursive": false,
        "recursiveStyleFx": "",
        "slotTarget": "",
        "defaultValue": "",
        "flexDirection": "row",
        "flexWrap": "nowrap",
        "alignItems": "flex-end",
        "justifyContent": "flex-end",
        "hGap": "",
        "vGap": "",
        "grid": {
          "row": {
            "value": "auto  ",
            "visible": true
          },
          "col": {
            "value": "",
            "visible": true
          },
          "use": false
        },
        "padding": ["10px", "", "10px", ""],
        "margin": ["", "", "", ""],
        "boxSizing": "border-box",
        "width": "60%",
        "height": "",
        "radius": ["", "", "", ""],
        "position": "",
        "positions": ["", "", "", ""],
        "zIndex": "",
        "flex": "",
        "flexGrow": "",
        "flexShrink": "",
        "fills": [
          {
            "type": "color",
            "value": "#ffffffff",
            "mode": "aspectFill",
            "rotate": "",
            "visible": true
          }
        ],
        "borders": [],
        "effects": [],
        "states": [],
        "hoverClass": "",
        "overflow": "",
        "styleFx": "",
        "behave": "",
        "remoteFunc": "func_811s2ngi",
        "remoteOption": "option_811s2ngi",
        "tableColumn": false,
        "subform": false,
        "props": {},
        "datasource": {
          "source": null,
          "rules": {
            "collectionId": "",
            "list": [
              {
                "id": 1723795236686,
                "parentId": 1723795236685,
                "isTop": true,
                "prop": "",
                "operator": "",
                "valueType": "",
                "value": "",
                "type": "leaf",
                "level": 1
              }
            ]
          }
        },
        "remote": false,
        "remoteType": "datasource",
        "url_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        },
        "body_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        },
        "request_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        }
      },
      "list": [
        {
          "name": "Draft",
          "type": "button",
          "mainIcon": "按钮",
          "typeIcon": "按钮",
          "icon": "icon-button",
          "group": "Buttons",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "customClass": "",
            "disabled": false,
            "labelWidth": 100,
            "isLabelWidth": false,
            "hideLabel": true,
            "hidden": false,
            "buttonSize": "default",
            "buttonType": "info",
            "buttonPlain": true,
            "buttonRound": true,
            "buttonCircle": false,
            "buttonName": "Save as Draft",
            "width": "",
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_7ixw4yc5",
            "remoteOption": "option_7ixw4yc5",
            "tableColumn": false,
            "subform": false
          },
          "events": {
            "onClick": "i14f47bk"
          },
          "key": "7ixw4yc5",
          "model": "button_save_as_draft",
          "rules": []
        },
        {
          "name": "Completed",
          "type": "button",
          "mainIcon": "按钮",
          "typeIcon": "按钮",
          "icon": "icon-button",
          "group": "Buttons",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "customClass": "margin",
            "disabled": false,
            "labelWidth": 100,
            "isLabelWidth": false,
            "hideLabel": true,
            "hidden": false,
            "buttonSize": "default",
            "buttonType": "success",
            "buttonPlain": true,
            "buttonRound": true,
            "buttonCircle": false,
            "buttonName": "Completed",
            "width": "",
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_7ixw4yc5",
            "remoteOption": "option_7ixw4yc5",
            "tableColumn": false,
            "subform": false,
            "shadow": "default"
          },
          "events": {
            "onClick": "raufkkqk"
          },
          "key": "sk91jwsi",
          "model": "button_completed",
          "rules": []
        },
        {
          "name": "Completed & Post",
          "type": "button",
          "mainIcon": "按钮",
          "typeIcon": "按钮",
          "icon": "icon-button",
          "group": "Buttons",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "customClass": "margin marginright",
            "disabled": false,
            "labelWidth": 100,
            "isLabelWidth": false,
            "hideLabel": true,
            "hidden": false,
            "buttonSize": "default",
            "buttonType": "success",
            "buttonPlain": false,
            "buttonRound": true,
            "buttonCircle": false,
            "buttonName": "Completed & Post",
            "width": "",
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_7ixw4yc5",
            "remoteOption": "option_7ixw4yc5",
            "tableColumn": false,
            "subform": false
          },
          "events": {
            "onClick": "mun79lbo"
          },
          "key": "a9je3gmv",
          "model": "button_completed_posted",
          "rules": []
        },
        {
          "name": "Post",
          "type": "button",
          "mainIcon": "按钮",
          "typeIcon": "按钮",
          "icon": "icon-button",
          "group": "Buttons",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "customClass": "margin marginright",
            "disabled": false,
            "labelWidth": 100,
            "isLabelWidth": false,
            "hideLabel": true,
            "hidden": false,
            "buttonSize": "default",
            "buttonType": "success",
            "buttonPlain": false,
            "buttonRound": true,
            "buttonCircle": false,
            "buttonName": "Post",
            "width": "",
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_7ixw4yc5",
            "remoteOption": "option_7ixw4yc5",
            "tableColumn": false,
            "subform": false,
            "defaultValue": ""
          },
          "events": {
            "onClick": "jtqa395j"
          },
          "key": "28lieb4f",
          "model": "button_posted",
          "rules": []
        }
      ],
      "events": {
        "onClick": ""
      },
      "key": "811s2ngi",
      "model": "flex_button",
      "rules": []
    },
    {
      "name": "Address",
      "type": "input",
      "mainIcon": "单行文本",
      "typeIcon": "多行文本",
      "icon": "icon-input",
      "group": "Text",
      "groupSort": 1,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-input",
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "dataType": "",
        "dataTypeCheck": false,
        "dataTypeMessage": "",
        "pattern": "",
        "patternCheck": false,
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "disabled": false,
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "showPassword": false,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_xcp40x0c",
        "remoteOption": "option_xcp40x0c",
        "tableColumn": false,
        "subform": false,
        "labelWrap": true
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "5t6i6guq",
      "model": "billing_address_line_1",
      "rules": []
    },
    {
      "name": "Address Line 2",
      "type": "input",
      "mainIcon": "单行文本",
      "typeIcon": "多行文本",
      "icon": "icon-input",
      "group": "Text",
      "groupSort": 1,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-input",
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "dataType": "",
        "dataTypeCheck": false,
        "dataTypeMessage": "",
        "pattern": "",
        "patternCheck": false,
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "disabled": false,
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "showPassword": false,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_xcp40x0c",
        "remoteOption": "option_xcp40x0c",
        "tableColumn": false,
        "subform": false,
        "hideLabel": true
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "g4fwensq",
      "model": "billing_address_line_2",
      "rules": []
    },
    {
      "name": "Address Line 3",
      "type": "input",
      "mainIcon": "单行文本",
      "typeIcon": "多行文本",
      "icon": "icon-input",
      "group": "Text",
      "groupSort": 1,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-input",
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "dataType": "",
        "dataTypeCheck": false,
        "dataTypeMessage": "",
        "pattern": "",
        "patternCheck": false,
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "disabled": false,
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "showPassword": false,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_xcp40x0c",
        "remoteOption": "option_xcp40x0c",
        "tableColumn": false,
        "subform": false,
        "hideLabel": true
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "qg52vt0f",
      "model": "billing_address_line_3",
      "rules": []
    },
    {
      "name": "Address Line 4",
      "type": "input",
      "mainIcon": "单行文本",
      "typeIcon": "多行文本",
      "icon": "icon-input",
      "group": "Text",
      "groupSort": 1,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-input",
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "dataType": "",
        "dataTypeCheck": false,
        "dataTypeMessage": "",
        "pattern": "",
        "patternCheck": false,
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "disabled": false,
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "showPassword": false,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_xcp40x0c",
        "remoteOption": "option_xcp40x0c",
        "tableColumn": false,
        "subform": false,
        "hideLabel": true
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "bjn50e2p",
      "model": "billing_address_line_4",
      "rules": []
    },
    {
      "name": "栅格布局",
      "type": "grid",
      "mainIcon": "栅格布局",
      "typeIcon": "栅格布局",
      "icon": "icon-RectangleCopy",
      "group": "Layout",
      "groupSort": 0,
      "enableScopes": ["Component", "Table", "Page"],
      "columns": [
        {
          "type": "col",
          "options": {
            "span": 12,
            "offset": 0,
            "push": 0,
            "pull": 0,
            "xs": 24,
            "sm": 12,
            "md": 12,
            "lg": 12,
            "xl": 12,
            "customClass": ""
          },
          "list": [
            {
              "name": "City",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_hevilz3i",
                "remoteOption": "option_hevilz3i",
                "tableColumn": false,
                "subform": false,
                "labelWrap": true
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "1lfos87p",
              "model": "billing_address_city",
              "rules": []
            },
            {
              "name": "Postal Code",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_hevilz3i",
                "remoteOption": "option_hevilz3i",
                "tableColumn": false,
                "subform": false,
                "labelWrap": true
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "4csn2v39",
              "model": "billing_postal_code",
              "rules": []
            }
          ],
          "key": "j2b6oque"
        },
        {
          "type": "col",
          "options": {
            "span": 12,
            "offset": 0,
            "push": 0,
            "pull": 0,
            "xs": 24,
            "sm": 12,
            "md": 12,
            "lg": 12,
            "xl": 12,
            "customClass": ""
          },
          "list": [
            {
              "name": "State",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_f7jc7jef",
                "remoteOption": "option_f7jc7jef",
                "tableColumn": false,
                "subform": false,
                "labelWrap": true
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "f7jc7jef",
              "model": "billing_address_state",
              "rules": []
            },
            {
              "name": "Country / Region",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_f7jc7jef",
                "remoteOption": "option_f7jc7jef",
                "tableColumn": false,
                "subform": false,
                "labelWrap": true
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "vhr390al",
              "model": "billing_address_country",
              "rules": []
            }
          ],
          "key": "5dgfi31t"
        }
      ],
      "options": {
        "gutter": 0,
        "justify": "start",
        "align": "top",
        "customClass": "",
        "hidden": false,
        "flex": true,
        "responsive": true,
        "remoteFunc": "func_u6w43q57",
        "remoteOption": "option_u6w43q57",
        "tableColumn": false,
        "subform": false
      },
      "key": "indbh9fc",
      "model": "grid_indbh9fc",
      "rules": []
    },
    {
      "name": "Address",
      "type": "input",
      "mainIcon": "单行文本",
      "typeIcon": "多行文本",
      "icon": "icon-input",
      "group": "Text",
      "groupSort": 1,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-input",
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "dataType": "",
        "dataTypeCheck": false,
        "dataTypeMessage": "",
        "pattern": "",
        "patternCheck": false,
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "disabled": false,
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "showPassword": false,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_xcp40x0c",
        "remoteOption": "option_xcp40x0c",
        "tableColumn": false,
        "subform": false,
        "labelWrap": true
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "0ndb1u3e",
      "model": "shipping_address_line_1",
      "rules": []
    },
    {
      "name": "Address Line 2",
      "type": "input",
      "mainIcon": "单行文本",
      "typeIcon": "多行文本",
      "icon": "icon-input",
      "group": "Text",
      "groupSort": 1,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-input",
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "dataType": "",
        "dataTypeCheck": false,
        "dataTypeMessage": "",
        "pattern": "",
        "patternCheck": false,
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "disabled": false,
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "showPassword": false,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_xcp40x0c",
        "remoteOption": "option_xcp40x0c",
        "tableColumn": false,
        "subform": false,
        "hideLabel": true
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "bllave5i",
      "model": "shipping_address_line_2",
      "rules": []
    },
    {
      "name": "Address Line 3",
      "type": "input",
      "mainIcon": "单行文本",
      "typeIcon": "多行文本",
      "icon": "icon-input",
      "group": "Text",
      "groupSort": 1,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-input",
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "dataType": "",
        "dataTypeCheck": false,
        "dataTypeMessage": "",
        "pattern": "",
        "patternCheck": false,
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "disabled": false,
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "showPassword": false,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_xcp40x0c",
        "remoteOption": "option_xcp40x0c",
        "tableColumn": false,
        "subform": false,
        "hideLabel": true
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "wc1ka1kv",
      "model": "shipping_address_line_3",
      "rules": []
    },
    {
      "name": "Address Line 4",
      "type": "input",
      "mainIcon": "单行文本",
      "typeIcon": "多行文本",
      "icon": "icon-input",
      "group": "Text",
      "groupSort": 1,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-input",
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "dataType": "",
        "dataTypeCheck": false,
        "dataTypeMessage": "",
        "pattern": "",
        "patternCheck": false,
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "disabled": false,
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "showPassword": false,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_xcp40x0c",
        "remoteOption": "option_xcp40x0c",
        "tableColumn": false,
        "subform": false,
        "hideLabel": true
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "54rd5e6q",
      "model": "shipping_address_line_4",
      "rules": []
    },
    {
      "name": "栅格布局",
      "type": "grid",
      "mainIcon": "栅格布局",
      "typeIcon": "栅格布局",
      "icon": "icon-RectangleCopy",
      "group": "Layout",
      "groupSort": 0,
      "enableScopes": ["Component", "Table", "Page"],
      "columns": [
        {
          "type": "col",
          "options": {
            "span": 12,
            "offset": 0,
            "push": 0,
            "pull": 0,
            "xs": 24,
            "sm": 12,
            "md": 12,
            "lg": 12,
            "xl": 12,
            "customClass": ""
          },
          "list": [
            {
              "name": "City",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_hevilz3i",
                "remoteOption": "option_hevilz3i",
                "tableColumn": false,
                "subform": false,
                "labelWrap": true
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "6zkxrjea",
              "model": "shipping_address_city",
              "rules": []
            },
            {
              "name": "Postal Code",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_hevilz3i",
                "remoteOption": "option_hevilz3i",
                "tableColumn": false,
                "subform": false,
                "labelWrap": true
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "nu1cs49r",
              "model": "shipping_postal_code",
              "rules": []
            }
          ],
          "key": "x6v4iz2n"
        },
        {
          "type": "col",
          "options": {
            "span": 12,
            "offset": 0,
            "push": 0,
            "pull": 0,
            "xs": 24,
            "sm": 12,
            "md": 12,
            "lg": 12,
            "xl": 12,
            "customClass": ""
          },
          "list": [
            {
              "name": "State",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_f7jc7jef",
                "remoteOption": "option_f7jc7jef",
                "tableColumn": false,
                "subform": false,
                "labelWrap": true
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "92x9vysn",
              "model": "shipping_address_state",
              "rules": []
            },
            {
              "name": "Country / Region",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_f7jc7jef",
                "remoteOption": "option_f7jc7jef",
                "tableColumn": false,
                "subform": false,
                "labelWrap": true
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "kdawdw4o",
              "model": "shipping_address_country",
              "rules": []
            }
          ],
          "key": "zgie2o86"
        }
      ],
      "options": {
        "gutter": 0,
        "justify": "start",
        "align": "top",
        "customClass": "",
        "hidden": false,
        "flex": true,
        "responsive": true,
        "remoteFunc": "func_u6w43q57",
        "remoteOption": "option_u6w43q57",
        "tableColumn": false,
        "subform": false
      },
      "key": "3gj2qelk",
      "model": "grid_3gj2qelk",
      "rules": []
    }
  ],
  "config": {
    "labelWidth": 180,
    "labelPosition": "left",
    "size": "default",
    "customClass": "padding",
    "ui": "element",
    "layout": "horizontal",
    "width": "100%",
    "hideLabel": false,
    "hideErrorMessage": false,
    "eventScript": [
      {
        "key": "onFormChange",
        "name": "onFormChange",
        "type": "rule"
      },
      {
        "key": "mounted",
        "name": "mounted",
        "func": "const showStatusHTML = async (status) => {\n    switch (status) {\n        case 'Draft':\n            this.display([\n                'draft_status'\n            ])\n            break;\n        case 'Completed':\n            this.display([\n                'completed_status'\n            ])\n            break;\n        case 'Fully Posted':\n            this.display([\n                'fullyposted_status'\n            ])\n            break;\n    }\n}\n\nconst isViewMode = async (status) => {\n    this.display(['po_no_display', 'gr_no_display'])\n    this.hide(['purchase_order_id', 'goods_receiving_no'])\n\n    if(status === 'Completed'){\n        this.hide([\n            'link_billing_address', \n            'link_shipping_address',\n            'button_save_as_draft',\n            'button_completed',\n            'button_completed_posted'\n        ])\n    } else {\n        this.hide([\n            'link_billing_address', \n            'link_shipping_address',\n            'button_save_as_draft',\n            'button_completed',\n            'button_posted',\n            'button_completed_posted'\n        ]);\n    }\n}\n\nconst displayCurrency = async () => {\n    const currencyCode = this.getValue('currency_code');\n\n    if (currencyCode !== \"----\" && currencyCode !== \"MYR\") {\n        this.display(['exchange_rate', 'exchange_rate_myr', 'exchange_rate_currency', 'myr_total_amount', 'total_amount_myr'])\n    }\n\n    this.setData({\n        \"total_gross_currency\": currencyCode,\n        \"total_discount_currency\": currencyCode,\n        \"total_tax_currency\": currencyCode,\n        \"total_amount_currency\": currencyCode,\n        \"exchange_rate_currency\": currencyCode\n    })\n}\n\nconst displayAddress = async () => {\n    const purchaseOrderId = this.getValue('purchase_order_id');\n\n    if(purchaseOrderId){\n        this.display('address_grid');\n    }\n}\n\n(async () => {\n    try{\n        const status = await this.getValue('pi_status');\n\n        const pageStatus = this.isAdd ? 'Add' :\n        this.isEdit ? 'Edit' :\n        this.isView ? 'View' :\n        this.isCopy ? 'Clone' :\n        (() => { this.$message.error('Invalid page status') })();\n\n        let organizationId = this.getVarGlobal('deptParentId');\n        if(organizationId === '0'){\n            organizationId = this.getVarSystem('deptIds').split(',')[0];\n        }\n\n        this.setData({'organization_id': organizationId, 'page_status': pageStatus});\n        this.hide(['exchange_rate','exchange_rate_myr','exchange_rate_currency','myr_total_amount','total_amount_myr']);\n    \n        switch(pageStatus){\n            case 'Add':\n                this.display(['draft_status']);\n                this.hide('button_posted');\n                break;\n            \n            case 'Edit':\n                if(status === 'Draft'){\n                    this.hide('button_posted')\n                }\n\n                await showStatusHTML(status);\n                await displayCurrency();\n                await displayAddress();\n                break;\n\n            case 'View':\n                this.hide([\n                    'link_billing_address',\n                    'link_shipping_address',\n                    'button_save_as_draft',\n                    'button_save_as_issue'\n                ]);\n                await showStatusHTML(status);\n                await isViewMode(status);\n                await displayCurrency();\n                await displayAddress();\n\n                break;\n        }\n    } catch (error) {\n        this.$message.error(error)\n    }\n})();",
        "type": "js"
      },
      {
        "key": "refresh",
        "name": "refresh",
        "func": ""
      },
      {
        "key": "onBeforeAdd",
        "name": "onBeforeAdd",
        "func": ""
      },
      {
        "key": "onAfterAdd",
        "name": "onAfterAdd",
        "func": ""
      },
      {
        "key": "onBeforeUpdate",
        "name": "onBeforeUpdate",
        "func": ""
      },
      {
        "key": "onAfterUpdate",
        "name": "onAfterUpdate",
        "func": ""
      },
      {
        "key": "k46zchao",
        "name": "OnChange_po",
        "func": "console.log(\"PO data\",arguments[0]?.fieldModel?.item)",
        "type": "rule",
        "rules": [
          {
            "key": "mbl9ywpn",
            "action": "refreshFieldOptionData",
            "options": {
              "condition": "",
              "isCondition": false,
              "field": "goods_receiving_no",
              "valueTypes": {},
              "dataSource": {
                "args": {}
              }
            }
          },
          {
            "key": "73rl2nwf",
            "action": "js",
            "options": {
              "func": "const data = this.getValues();\nconsole.log('arguments[0]', arguments[0])\nconst currencyCode = arguments[0].fieldModel.item.po_currency;\nconst exchangeRate = arguments[0].fieldModel.item.exchange_rate;\nthis.setData({\n    'currency_code' : currencyCode,\n    'supplier_name': arguments[0].fieldModel.item.po_supplier_id,\n    'plant_id': arguments[0].fieldModel.item.po_plant,\n    'organization_id': arguments[0].fieldModel.item.organization_id,\n    'invoice_payment_term_id': arguments[0].fieldModel.item.po_payment_terms,\n    'po_no_display': arguments[0].fieldModel.item.purchase_order_no,\n    'goods_receiving_no': [],\n    'table_pi':[]\n})\n\n// Check if purchase_order_id has a value\nconst purchaseOrderId = data.purchase_order_id;\nif (!purchaseOrderId) {\n    return;\n}\n\n// Address \nif(purchaseOrderId) {\n    this.display('address_grid')\n    const resetFormFields = () => {\n        this.setData({\n            'pi_billing_name': '',\n            'pi_billing_cp': '',\n            'pi_shipping_address': '',\n            'pi_billing_address': '',\n            'billing_address_line_1': '',\n            'billing_address_line_1': '',\n            'billing_address_line_2': '',\n            'billing_address_line_3': '',\n            'billing_address_line_4': '',\n            'billing_address_city': '',\n            'billing_address_state': '',\n            'billing_postal_code': '',\n            'billing_address_country': '',\n            'shipping_address_line_1': '',\n            'shipping_address_line_2': '',\n            'shipping_address_line_3': '',\n            'shipping_address_line_4': '',\n            'shipping_address_city': '',\n            'shipping_address_state': '',\n            'shipping_postal_code': '',\n            'shipping_address_country': '',\n        });\n    };\n\n    const setAddressFields = (addressType, address) => {\n        this.setData({\n          [`${addressType}_address_line_1`]: address.address_line_1,\n          [`${addressType}_address_line_2`]: address.address_line_2,\n          [`${addressType}_address_line_3`]: address.address_line_3,\n          [`${addressType}_address_line_4`]: address.address_line_4,\n          [`${addressType}_address_city`]: address.address_city,\n          [`${addressType}_address_state`]: address.adddress_state,\n          [`${addressType}_postal_code`]: address.address_postal_code,\n          [`${addressType}_address_country`]: address.address_country_id,\n        });\n      };\n\n    resetFormFields();\n\n    const supplierIdFromPO = arguments[0]?.fieldModel?.item?.po_supplier_id;\n\n    if(supplierIdFromPO){\n        Promise.all([\n            db.collection('address_purpose').where({ purpose_name: 'Shipping' }).get(),\n            db.collection('supplier_head').where({ id: supplierIdFromPO }).get(),\n        ]).then(([resShipping, resSupplier]) => {\n            \n            if (resSupplier.data.length === 0 || resShipping.data.length === 0) return;\n            \n            const supplierData = resSupplier.data[0];\n            const shippingAddrId = resShipping.data[0].id;\n    \n            const addresses = supplierData.address_list.filter(address => \n                address.switch_save_as_default\n            );\n    \n            this.setData({\n                'supplier_name': supplierData.id,\n                'agent_id': supplierData.supplier_agent_id\n            });\n    \n            addresses.forEach((address) => {\n                Promise.all([\n                    db.collection('country').where({ id: address.address_country_id }).get(),\n                    db.collection('state').where({ id: address.adddress_state }).get(),\n                ]).then(([resCountry, resState]) => {\n                    if (resCountry.data.length === 0 || resState.data.length === 0) return;\n            \n                    const countryName = resCountry.data[0].country_name;\n                    const stateName = resState.data[0].state_name;\n            \n                    const addressComponents = [\n                    address.address_line_1,\n                    address.address_line_2,\n                    address.address_line_3,\n                    address.address_line_4,\n                    address.address_city,\n                    address.address_postal_code,\n                    stateName,\n                    countryName,\n                    ]; \n            \n                    const formattedAddress = addressComponents.filter(Boolean).join(',\\n').replace(/([^,])\\n/g, '$1,\\n');\n            \n                    const isShipping = address.address_purpose_id === shippingAddrId;\n                    const addressType = isShipping ? 'shipping' : 'billing';\n            \n                    setAddressFields(\n                    addressType,\n                    address,\n                    resState.data[0].id,\n                    resCountry.data[0].id\n                    );\n            \n                    if(addressType === 'shipping') {\n                    this.setData({ 'pi_shipping_address': formattedAddress });\n                    } else {\n                    this.setData({ \n                        'pi_billing_address': formattedAddress, \n                        'pi_billing_name': address.address_name,\n                        'pi_billing_cp': address.address_phone, });\n                    }\n                });\n            })\n        })\n    }\n}\n\nif(!currencyCode){\n    this.hide(['exchange_rate', 'exchange_rate_myr', 'exchange_rate_currency', 'myr_total_amount', 'total_amount_myr'])\n    return\n} else {\n    this.setData({\"total_gross_currency\":currencyCode,\n        \"total_discount_currency\":currencyCode,\n        \"total_tax_currency\":currencyCode,\n        \"total_amount_currency\":currencyCode,\n        \"exchange_rate_currency\":currencyCode})\n\n    if(currencyCode !== \"----\" && currencyCode !== \"MYR\"){\n        \n        this.setData({exchange_rate: exchangeRate})\n        this.display(['exchange_rate', 'exchange_rate_myr', 'exchange_rate_currency', 'myr_total_amount', 'total_amount_myr']);\n\n    }else{\n        this.setData({exchange_rate:1,})\n        this.hide(['exchange_rate', 'exchange_rate_myr', 'exchange_rate_currency', 'myr_total_amount', 'total_amount_myr'])\n    }\n} "
            }
          }
        ]
      },
      {
        "key": "hgqlyp0e",
        "name": "PIFetchData",
        "func": "const data = this.getValues();\nconst purchaseOrderId = data.purchase_order_id;\nconsole.log(\"Purchase Order ID:\", purchaseOrderId);\n\n// Get GR numbers from arguments\nconst grNumbers = arguments[0].value;\nconsole.log(\"GR Numbers:\", grNumbers);\n\n// Fetch GR Number\nPromise.all(\n  grNumbers.map(grId => \n    db.collection('goods_receiving')\n      .doc(grId)  // Direct document reference\n      .get()\n      .then(doc => doc ? doc.data[0].gr_no : null)\n  )\n)\n.then(results => {\n  const displayText = results.filter(Boolean).join(', ');\n   console.log('gr', results);\n  this.setData({'gr_no_display': displayText});\n});\n\n// Check if grNumbers is empty or invalid before proceeding\nif (!grNumbers || (Array.isArray(grNumbers) && grNumbers.length === 0)) {\n  this.setData({'table_pi': []})\n  console.log(\"GR numbers is empty, skipping processing\");\n  return; // Exit early if grNumbers is empty\n}\n\ndb.collection(\"purchase_order\")\n  .where({\n    id: purchaseOrderId,\n  })\n  .get()\n  .then(result => {\n    console.log(\"Raw PO result:\", result);\n    \n    // Handle different possible result formats\n    let POData = null;\n    \n    if (Array.isArray(result) && result.length > 0) {\n      POData = result[0];\n    } else if (typeof result === 'object' && result !== null) {\n      if (result.data) {\n        POData = Array.isArray(result.data) && result.data.length > 0 ? result.data[0] : result.data;\n      } else if (result.docs && Array.isArray(result.docs) && result.docs.length > 0) {\n        POData = result.docs[0].data ? result.docs[0].data() : result.docs[0];\n      } else {\n        POData = result;\n      }\n    }\n    \n    console.log(\"Extracted PO data:\", POData);\n    \n    // Additional validation check here to make sure grNumbers is an array\n    if (!Array.isArray(grNumbers)) {\n      console.error(\"GR numbers is not an array:\", grNumbers);\n      return;\n    }\n    \n    let allGRData = [];\n    \n    const promises = grNumbers.map(grNumber => {\n      return db.collection(\"goods_receiving\")\n        .where({\n          id: grNumber,\n        })\n        .get()\n        .then(result => {\n          console.log(`Raw GR result for ${grNumber}:`, result);\n          \n          // Handle GR result with the same logic as PO result\n          let grData = null;\n          \n          if (Array.isArray(result) && result.length > 0) {\n            grData = result[0];\n          } else if (typeof result === 'object' && result !== null) {\n            if (result.data) {\n              grData = Array.isArray(result.data) && result.data.length > 0 ? result.data[0] : result.data;\n            } else if (result.docs && Array.isArray(result.docs) && result.docs.length > 0) {\n              grData = result.docs[0].data ? result.docs[0].data() : result.docs[0];\n            } else {\n              grData = result;\n            }\n          }\n          \n          console.log(`Extracted GR data for ${grNumber}:`, grData);\n          \n          if (grData) {\n            allGRData.push(grData);\n          }\n          return grData;\n        })\n        .catch(error => {\n          console.error(`Error retrieving data for GR ${grNumber}:`, error);\n          return null;\n        });\n    });\n    \n    Promise.all(promises)\n      .then(async () => {\n        console.log(\"All GR data:\", allGRData);\n        \n        // Additional check to ensure we have GR data to process\n        if (allGRData.length === 0) {\n          console.log(\"No valid GR data found, skipping further processing\");\n          return;\n        }\n        \n        const itemMap = {};\n        \n        // Process PO data first\n        if (POData) {\n          console.log(\"Processing PO data, table_pi:\", POData.table_po);\n          \n          // Try different properties that might contain the items\n          const poItems = POData.table_po || POData.items || [];\n          \n          if (Array.isArray(poItems)) {\n            poItems.forEach((poItem, lineItemIndex) => {\n              console.log(\"Processing PO item:\", poItem);\n              const itemId = poItem.item_id + \" \" + lineItemIndex;\n              if (itemId) {\n                itemMap[itemId] = {\n                  item_id: poItem.item_id ,\n                  item_desc: poItem.item_desc || \"\",\n                  item_uom: poItem.quantity_uom,\n                  ordered_qty: poItem.quantity,\n                  unit_price: poItem.unit_price,\n                  amount: poItem.po_amount,\n                  // Add additional fields from PO\n                  discount: poItem.discount,\n                  discount_uom: poItem.discount_uom,\n                  tax_rate_percent: poItem.tax_rate_percent,\n                  tax_preference: poItem.tax_preference,\n                  tax_inclusive: poItem.tax_inclusive,\n                  received_qty: 0\n                };\n                \n                console.log(`Added PO item ${itemId} to map:`, itemMap[itemId]);\n              }\n            });\n          }\n        }\n        \n        // Then process GR data to update received quantities\n        allGRData.forEach(grRecord => {\n          console.log(\"Processing GR record, table_gr:\", grRecord.table_gr);\n          \n          if (grRecord && Array.isArray(grRecord.table_gr)) {\n            grRecord.table_gr.forEach((item, lineItemIndex) => {\n              console.log(\"Processing GR item:\", item);\n              const itemId = item.item_id + \" \" + lineItemIndex;\n              \n              if (!itemId) {\n                return;\n              }\n              \n              if (!itemMap[itemId]) {\n                itemMap[itemId] = {\n                  item_id: item.item_id,\n                  item_desc: item.item_desc,\n                  item_uom: item.item_uom,\n                  ordered_qty: item.ordered_qty,\n                  received_qty: 0\n                };\n                console.log(`Created new item ${itemId} from GR data:`, itemMap[itemId]);\n              }\n              \n              const receivedQty = parseFloat(item.received_qty || 0);\n              itemMap[itemId].received_qty += receivedQty;\n              console.log('item id', item.item_id)\n              console.log(`Updated received qty for ${itemId} to ${itemMap[itemId].received_qty}`);\n            });\n          }\n        });\n        \n        const consolidatedItems = Object.values(itemMap);\n        console.log(\"Consolidated items:\", consolidatedItems);\n        \n        const newTablePi = consolidatedItems.map(item => ({\n          material_id: item.item_id,\n          quantity_uom: item.item_uom,\n          order_qty: item.ordered_qty,\n          received_qty: item.received_qty,\n          invoice_qty: item.received_qty,\n          order_unit_price: item.unit_price,\n          item_desc: item.item_desc,\n          order_discount: item.discount,\n          discount_uom: item.discount_uom,\n          tax_rate_percent: item.tax_rate_percent,\n          tax_preference: item.tax_preference,\n          tax_inclusive: item.tax_inclusive\n        }));\n\n        console.log(\"Final table_pi data:\", newTablePi);\n        await this.setData({\n          'table_pi': newTablePi\n        });\n\n        setTimeout(() => {\n          newTablePi.forEach((item, lineItemIndex) => {\n            if(item.tax_rate_percent && item.tax_rate_percent >= 0){\n              this.disabled([`table_pi.${lineItemIndex}.tax_rate_percent`], false)\n            }\n          })\n        }, 1000);\n\n        \n\n         this.triggerEvent('PIcalculation', { PIlineItem: newTablePi })\n      })\n      .catch(error => {\n        console.error(\"Error processing GR numbers:\", error);\n      });\n  })\n  .catch(error => {\n    console.error(\"Error retrieving PO data:\", error);\n  });\n",
        "type": "js",
        "rules": []
      },
      {
        "key": "uq6mkq3j",
        "name": "PIcalculation",
        "func": "const data = this.getValues();\nlet items = [];\n\nif(data.table_pi.length > 0){\n  items = data.table_pi\n} else {\n  const { PIlineItem } = arguments[0];\n  items = PIlineItem\n}\nconst exchangeRate = data.exchange_rate;\nlet totalGross = 0;\nlet totalDiscount = 0;\nlet totalTax = 0;\nlet totalAmount = 0;\n\nif (Array.isArray(items)) {\n    items.forEach((item, index) => {\n        const quantity = Number(item.invoice_qty) || 0;\n        const unitPrice = parseFloat(item.order_unit_price) || 0;\n        const grossValue = quantity * unitPrice;\n\n        totalGross += grossValue;\n\n        this.setData({\n            [`table_pi.${index}.order_gross`]: grossValue,\n            [`table_pi.${index}.invoice_amount`]: grossValue,\n            'invoice_subtotal': totalGross\n        });\n\n        let discount = parseFloat(item.order_discount) || 0;\n        const discountUOM = item.discount_uom;\n        let discountAmount = 0.00;\n        const taxRate = Number(item.tax_rate_percent) || 0;\n        const taxInclusive = item.tax_inclusive;\n\n\n        if(discountUOM){\n            if (discount !== 0) {\n                if (discountUOM === 'Amount') {\n                    discountAmount = discount;\n                } else if (discountUOM === '%') {\n                    discountAmount = (grossValue * discount) / 100;\n                }\n\n                if (discountAmount > grossValue) {\n                    \n                    discount = 0;\n                    discountAmount = 0;\n\n                    this.setData({\n                        [`table_pi.${index}.order_discount`]: 0,\n                        [`table_pi.${index}.discount_amount`]: 0\n                    });\n                } else {\n                    this.setData({\n                        [`table_pi.${index}.discount_amount`]: parseFloat(discountAmount.toFixed(2))\n                    });\n                }\n            }\n        }\n\n        else {\n            this.setData({\n                [`table_pi.${index}.discount_amount`]: 0\n            });\n        }\n\n        const amountAfterDiscount = grossValue - discountAmount;\n\n        let taxAmount = 0;\n        let finalAmount = amountAfterDiscount;\n\n        if (taxRate) {\n            const taxRateDecimal = taxRate / 100;\n\n            if (taxInclusive === 1) {\n                taxAmount = amountAfterDiscount - (amountAfterDiscount / (1 + taxRateDecimal));\n                finalAmount = amountAfterDiscount;\n            } else {\n                taxAmount = amountAfterDiscount * taxRateDecimal;\n                finalAmount = amountAfterDiscount + taxAmount;\n            }\n\n            this.setData({\n                [`table_pi.${index}.tax_amount`]: parseFloat(taxAmount.toFixed(2))\n            });\n        } else {\n            this.setData({\n                [`table_pi.${index}.tax_amount`]: 0\n            });\n        }\n\n        // Set final amount\n        this.setData({\n            [`table_pi.${index}.invoice_amount`]: parseFloat(finalAmount.toFixed(2))\n        });\n\n        // Subtract previous values before adding new ones\n        totalDiscount += discountAmount;\n        totalTax += taxAmount;\n        totalAmount += finalAmount;\n\n        if(totalTax > 0) {\n            this.display(['invoice_taxes_amount','total_tax_currency']);\n        }\n\n        this.setData({\n            'invoice_total_discount': parseFloat(totalDiscount.toFixed(2)),\n            'invoice_taxes_amount': parseFloat(totalTax.toFixed(2)),\n            'invoice_total': parseFloat(totalAmount.toFixed(2))\n        });\n\n        if(!exchangeRate){\n            return\n        } else {\n            const myrTotalAmount = exchangeRate * totalAmount\n      this.setData({'myr_total_amount': parseFloat(myrTotalAmount.toFixed(2))})\n        }\n    });\n} else {\n    console.log(\"Not an array:\", items);\n}",
        "type": "js"
      },
      {
        "key": "nfqegxpb",
        "name": "onChange_line_item_tax_rate",
        "func": "",
        "type": "rule",
        "rules": [
          {
            "key": "wxzsop0d",
            "action": "js",
            "options": {
              "func": "db.collection(\"tax_rate_percent\").where({\"tax_code\":arguments[0].value}).get().then((re) => {    \n  if(re.data.length > 0){\n    this.setOptionData(\"table_pi.\" +arguments[0].rowIndex+\".tax_rate_percent\",re.data);     \n    this.disabled(['table_pi.'+arguments[0].rowIndex+'.tax_rate_percent'], false);\n    this.setData({[`table_pi.${arguments[0].rowIndex}.tax_rate_percent`]: undefined})\n\n  }\n});"
            }
          }
        ]
      },
      {
        "key": "7tqe8stt",
        "name": "onChange_supplier",
        "func": "const data = this.getValues();\nconst supplierId = data.supplier_name;\nconsole.log('supplier id', supplierId)\nif (!supplierId) {\n    return;\n}\n\n// Address \nif (supplierId.length > 0) {\n    this.disabled('purchase_order_id', false);\n    this.display('address_grid')\n    const resetFormFields = () => {\n        this.setData({\n            'pi_billing_name': '',\n            'pi_billing_cp': '',\n            'billing_address_line_1': '',\n            'billing_address_line_1': '',\n            'billing_address_line_2': '',\n            'billing_address_line_3': '',\n            'billing_address_line_4': '',\n            'billing_address_city': '',\n            'billing_address_state': '',\n            'billing_postal_code': '',\n            'billing_address_country': '',\n            'shipping_address_line_1': '',\n            'shipping_address_line_2': '',\n            'shipping_address_line_3': '',\n            'shipping_address_line_4': '',\n            'shipping_address_city': '',\n            'shipping_address_state': '',\n            'shipping_postal_code': '',\n            'shipping_address_country': '',\n        });\n    };\n\n    const formatAddress = (address,state,country)=>{\n        const addressComponents = [\n            address.address_line_1,\n            address.address_line_2,\n            address.address_line_3,\n            address.address_line_4,\n            address.address_city,\n            address.address_postal_code,\n            state.state_name,\n            country.country_name,\n            ].filter(component => component); \n    \n            return addressComponents.join(',\\n');\n      }\n    \n      const setAddressFields = (addressType, address, country, state) => {\n        this.setData({\n          [`${addressType}_address_line_1`]: address.address_line_1,\n          [`${addressType}_address_line_2`]: address.address_line_2,\n          [`${addressType}_address_line_3`]: address.address_line_3,\n          [`${addressType}_address_line_4`]: address.address_line_4,\n          [`${addressType}_address_city`]: address.address_city,\n          [`${addressType}_address_state`]: state.id,\n          [`${addressType}_postal_code`]: address.address_postal_code,\n          [`${addressType}_address_country`]: country.id,\n          [`pi_${addressType}_address`]: formatAddress(address,state,country)\n        });\n      };\n\n    resetFormFields();\n\n    Promise.all([\n        db.collection('address_purpose').where({ purpose_name: 'Shipping' }).get(),\n        db.collection('supplier_head').where({ id: supplierId }).get(),\n    ]).then(async ([resShipping, resSupplier]) => {\n\n        if (resSupplier.data.length === 0 || resShipping.data.length === 0) return;\n\n        const supplierData = resSupplier.data[0];\n        const shippingAddrId = resShipping.data[0].id;\n\n        const addresses = supplierData.address_list.filter(address =>\n            address.switch_save_as_default\n        );\n\n        this.setData({\n            'supplier_name': supplierData.id,\n        });\n\n        addresses.forEach((address) => {\n            Promise.all([\n                db.collection('country').where({ id: address.address_country_id }).get(),\n                db.collection('state').where({ id: address.adddress_state }).get(),\n            ]).then(([resCountry, resState]) => {\n                const isShipping = address.address_purpose_id === shippingAddrId;\n                const addressType = isShipping ? 'shipping' : 'billing';\n\n                setAddressFields(\n                    addressType,\n                    address,\n                    resCountry.data[0],\n                    resState.data[0]\n                );\n\n                if (addressType === 'billing') {\n                    this.setData({\n                        'pi_billing_name': address.address_name,\n                        'pi_billing_cp': address.address_phone,\n                    });\n                }\n            })\n        })\n    })\n}",
        "type": "js"
      },
      {
        "key": "i14f47bk",
        "name": "onClick_save_as_draft",
        "func": "const closeDialog = () => {\n    if (this.parentGenerateForm) {\n        this.parentGenerateForm.$refs.SuPageDialogRef.hide();\n        this.parentGenerateForm.refresh();\n        this.hideLoading();\n    }\n};\n\nconst validateForm = (data, requiredFields) => {\n    const missingFields = requiredFields.filter(field => {\n        const value = data[field.name];\n        if (Array.isArray(value)) return value.length === 0;\n        if (typeof value === 'string') return value.trim() === '';\n        return !value;\n    });\n    return missingFields;\n};\n\n(async () => {\n    try {\n        this.showLoading();\n        const data = this.getValues();\n        const requiredFields = [\n            { name: 'purchase_order_id', label: 'Purchase Order Number' },\n        ];\n        const missingFields = await validateForm(data, requiredFields);\n        if(missingFields.length === 0) {\n\n            const page_status = data.page_status;\n            const purchaseInvoiceId = this.getValue('id');\n\n            let organizationId = this.getVarGlobal('deptParentId');\n            if(organizationId === '0'){\n                organizationId = this.getVarSystem('deptIds').split(',')[0];\n            }\n            console.log('define data', page_status);\n            const {\n                purchase_order_id, currency_code, organization_id, plant_id, supplier_name, pi_billing_name, pi_billing_cp, pi_billing_address, pi_shipping_address, pi_description,\n                goods_receiving_no, agent_id, po_no_display, gr_no_display, purchase_invoice_no, invoice_date, inv_tax_rate_id, inv_taxes_rate_percent,\n                invoice_payment_term_id, exchange_rate_currency, exchange_rate, table_pi, invoice_subtotal, invoice_total_discount, invoice_taxes_amount, invoice_total,\n                remarks, fileupload_rkk7dyyr, billing_address_line_1, billing_address_line_2, billing_address_line_3, billing_address_line_4,\n                billing_address_city, billing_address_state, billing_address_country, billing_postal_code,\n                shipping_address_line_1, shipping_address_line_2, shipping_address_line_3, shipping_address_line_4,\n                shipping_address_city, shipping_address_state, shipping_address_country, shipping_postal_code,myr_total_amount\n            } = data;\n            \n            const entry = {\n                pi_status: 'Draft', posted_status: 'Unposted', purchase_order_id, organization_id, plant_id, currency_code, supplier_name, pi_billing_name, pi_billing_cp, pi_billing_address, pi_shipping_address,\n                goods_receiving_no, agent_id, po_no_display, gr_no_display, purchase_invoice_no, invoice_date, inv_tax_rate_id, inv_taxes_rate_percent,\n                invoice_payment_term_id, exchange_rate_currency, exchange_rate, table_pi, invoice_subtotal, invoice_total_discount, invoice_taxes_amount, invoice_total, pi_description,\n                remarks, fileupload_rkk7dyyr, billing_address_line_1, billing_address_line_2, billing_address_line_3, billing_address_line_4,\n                billing_address_city, billing_address_state, billing_address_country, billing_postal_code,\n                shipping_address_line_1, shipping_address_line_2, shipping_address_line_3, shipping_address_line_4,\n                shipping_address_city, shipping_address_state, shipping_address_country, shipping_postal_code,myr_total_amount\n            }\n\n            if (page_status === \"Add\") {\n                await db.collection(\"purchase_invoice\").add(entry)\n                this.$message.success('Add successfully')\n                closeDialog();\n            \n            } else if(page_status === 'Edit'){\n                await db.collection(\"purchase_invoice\").doc(purchaseInvoiceId).update(entry)\n                this.$message.success('Update successfully')\n                closeDialog();\n            }\n        } else {\n            this.hideLoading();\n            const missingFieldNames = missingFields.map(f => f.label).join(', ');\n            this.$message.error (`Missing required fields: ${missingFieldNames}`);\n        }\n\n    } catch (error) {\n        this.hideLoading();\n        this.$message.error(error);\n    }\n})();",
        "type": "js"
      },
      {
        "key": "raufkkqk",
        "name": "onClick_save_as_completed",
        "func": "const closeDialog = () => {\n  if (this.parentGenerateForm) {\n    this.parentGenerateForm.$refs.SuPageDialogRef.hide();\n    this.parentGenerateForm.refresh();\n    this.hideLoading();\n  }\n};\n\nconst updatePurchaseOrderStatus = (purchaseOrderId, goodsReceivingNo) => {\n\n  const completedQuery = db.collection('purchase_invoice')\n  .where({pi_status: 'Completed', purchase_order_id: purchaseOrderId});\n\n  const fullyPostedQuery = db.collection('purchase_invoice')\n  .where({pi_status: 'Fully Posted', purchase_order_id: purchaseOrderId});\n\n  Promise.all([\n      completedQuery.get(),\n      fullyPostedQuery.get(),\n      db.collection('purchase_order').where({ id: purchaseOrderId }).get()\n  ])\n  .then(([resComp, resPost, resPO]) => {\n      const allPIs = [...resComp.data, ...resPost.data] || [];\n      const poData = resPO.data[0];\n      if (!poData) return;\n      \n      const poItems = poData.table_po || [];\n      \n      // Create a map to sum received quantities for each item\n      const invoicedQtyMap = {};\n      \n      // Initialize with zeros\n      poItems.forEach(item => {\n          invoicedQtyMap[item.item_id] = 0;\n      });\n      \n      // Sum received quantities from all PIs\n      allPIs.forEach(pi => {\n          (pi.table_pi || []).forEach(piItem => {\n          if (invoicedQtyMap.hasOwnProperty(piItem.material_id)) {\n              invoicedQtyMap[piItem.material_id] += piItem.invoice_qty || 0;\n          }\n          });\n      });\n      \n      // Check if all items are fully received\n      let allItemsComplete = false;\n      let anyItemProcessing = false;\n      \n      poItems.forEach(item => {\n          const orderedQty = item.quantity || 0;\n          const invoicedQty = invoicedQtyMap[item.item_id] || 0;\n          \n          if (invoicedQty < orderedQty) {\n              anyItemProcessing = true;\n          } else {\n              allItemsComplete = true;\n          }\n      });\n      \n      // Determine new status\n      let newPIStatus = poData.pi_status;\n      \n      if (allItemsComplete) {\n          newPIStatus = 'Fully Invoiced'\n  \n      } else if (anyItemProcessing) {\n          newPIStatus = 'Partially Invoiced'\n      }\n      \n      // Update PO status if changed\n      if (newPIStatus !== poData.pi_status) {\n          db.collection('purchase_order')\n          .doc(poData.id)\n          .update({ \n              pi_status: newPIStatus });\n      }\n\n      goodsReceivingNo.forEach(gr => {\n          db.collection('goods_receiving')\n          .doc(gr)\n          .update({\n              pi_status: 'Fully Invoiced'\n          })\n      })\n  })\n};\n\nconst validateForm = (data, requiredFields) => {\n  const missingFields = [];\n\n  requiredFields.forEach(field => {\n      const value = data[field.name];\n\n      // Handle non-array fields (unchanged)\n      if (!field.isArray) {\n          if (validateField(value, field)) {\n              missingFields.push(field.label);\n          }\n          return;\n      }\n\n      // Handle array fields\n      if (!Array.isArray(value)) {\n          missingFields.push(`${field.label}`);\n          return;\n      }\n\n      if (value.length === 0) {\n          missingFields.push(`${field.label}`);\n          return;\n      }\n\n      // Check each item in the array\n      if (field.arrayType === 'object' && field.arrayFields) {\n          value.forEach((item, index) => {\n              field.arrayFields.forEach(subField => {\n                  const subValue = item[subField.name];\n                  if (validateField(subValue, subField)) {\n                      missingFields.push(\n                          `${subField.label} (in ${field.label} #${index + 1})`\n                      );\n                  }\n              });\n          });\n      }\n  });\n\n  return missingFields;\n};\n\nconst validateField = (value, field) => {\n  if (value === undefined || value === null) return true;\n  if (typeof value === 'string') return value.trim() === '';\n  if (Array.isArray(value)) return value.length === 0;\n  if (typeof value === 'object') return Object.keys(value).length === 0;\n  return !value;\n};\n\n\n(async () => {\n  try{\n    const data = this.getValues();\n    this.showLoading();\n\n    const requiredFields = [\n      { name: 'purchase_order_id', label: 'Purchase Order Number' },\n      { name: 'goods_receiving_no', label: 'Good Receiving Number' },\n      { name: 'purchase_invoice_no', label: 'Invoice Number' },\n      { name: 'invoice_date', label: 'Invoice Date' },\n      { name: 'pi_description', label: 'Description' },\n      { \n        name: 'table_pi', \n        label: 'PI Items',\n        isArray: true,\n        arrayType: 'object',\n        arrayFields: [\n            { name: 'order_unit_price', label: 'Unit Price' },\n        ]\n      }\n    ];\n    const missingFields = await validateForm(data, requiredFields);\n    if(missingFields.length === 0){\n      const page_status = this.getValue(\"page_status\");\n\n      let organizationId = this.getVarGlobal('deptParentId');\n      if(organizationId === '0'){\n          organizationId = this.getVarSystem('deptIds').split(',')[0];\n      }\n      const {\n          purchase_order_id, currency_code, organization_id, plant_id, supplier_name, pi_billing_name, pi_billing_cp, pi_billing_address, pi_shipping_address, pi_description,\n          goods_receiving_no, agent_id, po_no_display, gr_no_display, purchase_invoice_no, invoice_date, inv_tax_rate_id, inv_taxes_rate_percent,\n          invoice_payment_term_id, exchange_rate_currency, exchange_rate, table_pi, invoice_subtotal, invoice_total_discount, invoice_taxes_amount, invoice_total,\n          remarks, fileupload_rkk7dyyr, billing_address_line_1, billing_address_line_2, billing_address_line_3, billing_address_line_4,\n          billing_address_city, billing_address_state, billing_address_country, billing_postal_code,\n          shipping_address_line_1, shipping_address_line_2, shipping_address_line_3, shipping_address_line_4,\n          shipping_address_city, shipping_address_state, shipping_address_country, shipping_postal_code,myr_total_amount\n      } = data;\n      const entry = {\n          pi_status: 'Completed', posted_status: 'Unposted', purchase_order_id, organization_id, plant_id, currency_code, supplier_name, pi_billing_name, pi_billing_cp, pi_billing_address, pi_shipping_address,\n          goods_receiving_no, agent_id, po_no_display, gr_no_display, purchase_invoice_no, invoice_date, inv_tax_rate_id, inv_taxes_rate_percent,\n          invoice_payment_term_id, exchange_rate_currency, exchange_rate, table_pi, invoice_subtotal, invoice_total_discount, invoice_taxes_amount, invoice_total, pi_description,\n          remarks, fileupload_rkk7dyyr, billing_address_line_1, billing_address_line_2, billing_address_line_3, billing_address_line_4,\n          billing_address_city, billing_address_state, billing_address_country, billing_postal_code,\n          shipping_address_line_1, shipping_address_line_2, shipping_address_line_3, shipping_address_line_4,\n          shipping_address_city, shipping_address_state, shipping_address_country, shipping_postal_code,myr_total_amount\n      }\n\n      if (page_status === 'Add') {\n        await db.collection(\"purchase_invoice\").add(entry)\n        .then(() => {\n          this.runWorkflow(\n            '1917415847756115969',\n            { purchase_invoice_no: entry.purchase_invoice_no },\n            async (res) => {\n                console.log(\"成功结果：\", res);\n        \n            },\n            (err) => {\n                alert()\n                console.error(\"失败结果：\", err);\n                \n        \n            }\n          )\n        })\n        \n        await updatePurchaseOrderStatus(entry.purchase_order_id, entry.goods_receiving_no);\n        this.$message.success('Add successfully')\n        closeDialog();\n      } else if (page_status === 'Edit') {\n        const purchaseInvoiceId = this.getValue('id');\n        await db.collection(\"purchase_invoice\").doc(purchaseInvoiceId).update(entry)\n        .then(() => {\n          this.runWorkflow(\n            '1917415847756115969',\n            { purchase_invoice_no: entry.purchase_invoice_no },\n            async (res) => {\n                console.log(\"成功结果：\", res);\n        \n            },\n            (err) => {\n                alert()\n                console.error(\"失败结果：\", err);\n                \n        \n            }\n          )\n        })\n        ;\n        await updatePurchaseOrderStatus(entry.purchase_order_id, entry.goods_receiving_no);\n        this.$message.success('Update successfully')\n        closeDialog();\n      }\n\n    } else {\n      this.hideLoading();\n      this.$message.error(`Missing fields: ${missingFields.join(', ')}`);\n    }\n  } catch (error) {\n    this.hideLoading();\n    this.$message.error(error);\n  }\n})();",
        "type": "js"
      },
      {
        "key": "mun79lbo",
        "name": "onClick_save_as_completed_and_posted",
        "func": "const closeDialog = () => {\n  if (this.parentGenerateForm) {\n    this.parentGenerateForm.$refs.SuPageDialogRef.hide();\n    this.parentGenerateForm.refresh();\n    this.hideLoading();\n  }\n};\n\nconst updatePurchaseOrderStatus = async (purchaseInvoiceId) => {\n\n  const currenctPIQuery = await db.collection('purchase_invoice').where({id: purchaseInvoiceId}).get();\n\n  const currentPI = currenctPIQuery.data[0];\n\n  const completedQuery = db.collection('purchase_invoice')\n  .where({pi_status: 'Completed', purchase_order_id: currentPI.purchase_order_id});\n\n  const fullyPostedQuery = db.collection('purchase_invoice')\n  .where({pi_status: 'Fully Posted', purchase_order_id: currentPI.purchase_order_id});\n\n  Promise.all([\n      completedQuery.get(),\n      fullyPostedQuery.get(),\n      db.collection('purchase_order').where({ id: currentPI.purchase_order_id }).get()\n  ])\n  .then(([resComp, resPost, resPO]) => {\n      const allPIs = [...resComp.data, ...resPost.data] || [];\n      const postPIs = resPost.data || [];\n      const poData = resPO.data[0];\n      \n      if (!poData) return;\n      \n      const poItems = poData.table_po || [];\n      \n      // Create a map to sum received quantities for each item\n      const invoicedQtyMap = {};\n      const postedQtyMap = {};\n      \n      // Initialize with zeros\n      poItems.forEach(item => {\n          invoicedQtyMap[item.item_id] = 0;\n          postedQtyMap[item.item_id] = 0;\n      });\n      \n      // Sum received quantities from all PIs\n      allPIs.forEach(pi => {\n          (pi.table_pi || []).forEach(piItem => {\n          if (invoicedQtyMap.hasOwnProperty(piItem.material_id)) {\n              invoicedQtyMap[piItem.material_id] += piItem.invoice_qty || 0;\n          }\n          });\n      });\n\n      postPIs.forEach(pi => {\n          (pi.table_pi || []).forEach(piItem => {\n          if (postedQtyMap.hasOwnProperty(piItem.material_id)) {\n              postedQtyMap[piItem.material_id] += piItem.invoice_qty || 0;\n          }\n          });\n      });\n      \n      let allItemsComplete = true;\n      let allItemsPosted = true;\n      let anyItemProcessing = false;\n      let anyItemPartiallyPosted = false;\n      \n      poItems.forEach(item => {\n          const orderedQty = item.quantity || 0;\n          const invoicedQty = invoicedQtyMap[item.item_id] || 0;\n          const postedQty = postedQtyMap[item.item_id] || 0;\n          if (invoicedQty < orderedQty) {\n              allItemsComplete = false;\n              if (invoicedQty > 0) {\n                  anyItemProcessing = true;\n              }\n          }\n      \n          if (postedQty < orderedQty) {\n              allItemsPosted = false;\n              if (postedQty > 0) {\n                  anyItemPartiallyPosted = true;\n              }\n          }\n      });\n      \n      const newPIStatus = allItemsComplete ? 'Fully Invoiced' : \n                          anyItemProcessing ? 'Partially Invoiced' : \n                          poData.pi_status;\n\n      const newPIPostedStatus = allItemsPosted ? 'Fully Posted' :\n                                  anyItemPartiallyPosted ? 'Partially Posted' :\n                                  poData.pi_posted_status;\n      \n      // Prepare updates\n      const updates = [];\n\n      updates.push(\n          db.collection('purchase_invoice')\n          .doc(purchaseInvoiceId)\n          .update({\n              pi_status: 'Fully Posted',\n              posted_status: 'Posted'\n          })\n      )\n      \n      if (newPIStatus !== poData.pi_status) {\n          updates.push(\n              db.collection('purchase_order')\n                  .doc(currentPI.purchase_order_id)\n                  .update({ pi_status: newPIStatus })\n          );\n      }\n\n      if (newPIPostedStatus !== poData.pi_posted_status) {\n          updates.push(\n              db.collection('purchase_order')\n                  .doc(currentPI.purchase_order_id)\n                  .update({ pi_posted_status: newPIPostedStatus })\n          );\n      }\n\n      // Update GRs\n      currentPI.goods_receiving_no.forEach(gr => {\n          updates.push(\n              db.collection('goods_receiving')\n                  .doc(gr)\n                  .update({ pi_status: 'Fully Invoiced' })\n          );\n      });\n\n      return Promise.all(updates)\n  })\n};\n\nconst addEntry = async (entry) => {\n  try{\n      db.collection(\"purchase_invoice\").add(entry)\n      .then(() => {\n        this.runWorkflow(\n          '1917415847756115969',\n          { purchase_invoice_no: entry.purchase_invoice_no },\n          async (res) => {\n              console.log(\"成功结果：\", res);\n      \n          },\n          (err) => {\n              alert()\n              console.error(\"失败结果：\", err);\n              \n      \n          }\n        )\n      })\n      .then(() => {\n        this.runWorkflow(\n          '1902567744272973826',\n          {key: 'value'},\n          (res) => {\n              console.log(\"成功结果：\", res);\n              const piList = res.data.results;\n              piList.forEach(async (item) => {\n                  if(item.status === 'SUCCESS') {\n                      await updatePurchaseOrderStatus(item.id);\n                  }\n              });\n              this.$message.success('Add successfully')\n              closeDialog();\n          },\n          (err) => {\n              this.$message.error(\"失败结果：\", err);\n          }\n          )\n      });      \n  } catch (error) {\n    this.$message.error(error);\n  }\n}\n\nconst updateEntry = async (entry, purchaseInvoiceId) => {\n  try {\n      db.collection(\"purchase_invoice\").doc(purchaseInvoiceId).update(entry)\n      .then(() => {\n        this.runWorkflow(\n          '1917415847756115969',\n          { purchase_invoice_no: entry.purchase_invoice_no },\n          async (res) => {\n              console.log(\"成功结果：\", res);\n      \n          },\n          (err) => {\n              alert()\n              console.error(\"失败结果：\", err);\n              \n      \n          }\n        )\n      })\n      .then(() => {\n        this.runWorkflow(\n          '1902567744272973826',\n          {key: 'value'},\n          (res) => {\n              console.log(\"成功结果：\", res);\n              const piList = res.data.results;\n              piList.forEach(async (item) => {\n                  if(item.status === 'SUCCESS') {\n                      await updatePurchaseOrderStatus(item.id);\n                  }\n              });\n\n              this.$message.success('Update successfully')\n              closeDialog();\n          },\n          (err) => {\n              this.$message.error(\"失败结果：\", err);\n          }\n        )\n      });\n  } catch (error) {\n      this.$message.error(error);\n  }\n}\n\nconst validateForm = (data, requiredFields) => {\n  const missingFields = [];\n\n  requiredFields.forEach(field => {\n      const value = data[field.name];\n\n      // Handle non-array fields (unchanged)\n      if (!field.isArray) {\n          if (validateField(value, field)) {\n              missingFields.push(field.label);\n          }\n          return;\n      }\n\n      // Handle array fields\n      if (!Array.isArray(value)) {\n          missingFields.push(`${field.label}`);\n          return;\n      }\n\n      if (value.length === 0) {\n          missingFields.push(`${field.label}`);\n          return;\n      }\n\n      // Check each item in the array\n      if (field.arrayType === 'object' && field.arrayFields) {\n          value.forEach((item, index) => {\n              field.arrayFields.forEach(subField => {\n                  const subValue = item[subField.name];\n                  if (validateField(subValue, subField)) {\n                      missingFields.push(\n                          `${subField.label} (in ${field.label} #${index + 1})`\n                      );\n                  }\n              });\n          });\n      }\n  });\n\n  return missingFields;\n};\n\nconst validateField = (value, field) => {\n  if (value === undefined || value === null) return true;\n  if (typeof value === 'string') return value.trim() === '';\n  if (Array.isArray(value)) return value.length === 0;\n  if (typeof value === 'object') return Object.keys(value).length === 0;\n  return !value;\n};\n\n(async () => {\n  try{\n    const data = this.getValues();\n    this.showLoading();\n\n    const requiredFields = [\n      { name: 'purchase_order_id', label: 'Purchase Order Number' },\n      { name: 'goods_receiving_no', label: 'Good Receiving Number' },\n      { name: 'purchase_invoice_no', label: 'Invoice Number' },\n      { name: 'invoice_date', label: 'Invoice Date' },\n      { name: 'pi_description', label: 'Description' },\n      { \n        name: 'table_pi', \n        label: 'PI Items',\n        isArray: true,\n        arrayType: 'object',\n        arrayFields: [\n            { name: 'order_unit_price', label: 'Unit Price' },\n        ]\n      }\n    ];\n\n    const missingFields = await validateForm(data, requiredFields);\n\n    if(missingFields.length === 0){\n      const page_status = this.getValue(\"page_status\");\n\n      let organizationId = this.getVarGlobal('deptParentId');\n      if(organizationId === '0'){\n          organizationId = this.getVarSystem('deptIds').split(',')[0];\n      }\n\n      const {\n          purchase_order_id, currency_code, organization_id, plant_id, supplier_name, pi_billing_name, pi_billing_cp, pi_billing_address, pi_shipping_address, pi_description,\n          goods_receiving_no, agent_id, po_no_display, gr_no_display, purchase_invoice_no, invoice_date, inv_tax_rate_id, inv_taxes_rate_percent,\n          invoice_payment_term_id, exchange_rate_currency, exchange_rate, table_pi, invoice_subtotal, invoice_total_discount, invoice_taxes_amount, invoice_total,\n          remarks, fileupload_rkk7dyyr, billing_address_line_1, billing_address_line_2, billing_address_line_3, billing_address_line_4,\n          billing_address_city, billing_address_state, billing_address_country, billing_postal_code,\n          shipping_address_line_1, shipping_address_line_2, shipping_address_line_3, shipping_address_line_4,\n          shipping_address_city, shipping_address_state, shipping_address_country, shipping_postal_code,myr_total_amount\n      } = data;\n  \n      const entry = {\n          pi_status: 'Completed', posted_status: 'Pending Post', purchase_order_id, organization_id, plant_id, currency_code, supplier_name, pi_billing_name, pi_billing_cp, pi_billing_address, pi_shipping_address,\n          goods_receiving_no, agent_id, po_no_display, gr_no_display, purchase_invoice_no, invoice_date, inv_tax_rate_id, inv_taxes_rate_percent,\n          invoice_payment_term_id, exchange_rate_currency, exchange_rate, table_pi, invoice_subtotal, invoice_total_discount, invoice_taxes_amount, invoice_total, pi_description,\n          remarks, fileupload_rkk7dyyr, billing_address_line_1, billing_address_line_2, billing_address_line_3, billing_address_line_4,\n          billing_address_city, billing_address_state, billing_address_country, billing_postal_code,\n          shipping_address_line_1, shipping_address_line_2, shipping_address_line_3, shipping_address_line_4,\n          shipping_address_city, shipping_address_state, shipping_address_country, shipping_postal_code,myr_total_amount\n      }\n\n      if (page_status === 'Add') {\n        await addEntry(entry);\n      } else if (page_status === 'Edit') {\n        const purchaseInvoiceId = this.getValue('id');\n        await updateEntry(entry, purchaseInvoiceId)\n      }\n\n    } else {\n      this.hideLoading();\n      this.$message.error(`Missing fields: ${missingFields.join(', ')}`);\n    }\n  } catch (error) {\n    this.hideLoading();\n    this.$message.error(error);\n  }\n})();",
        "type": "js"
      },
      {
        "key": "2qt32efg",
        "name": "onChange_address",
        "func": "const data = this.getValues();\n\n// Reusable function to format address (now properly returning a Promise)\nconst formatAddress = (addressData, countryId, stateId) => {\n    return Promise.all([  // Added return here\n      db.collection('country').where({ id: countryId }).get(),\n      db.collection('state').where({ id: stateId }).get(),\n    ])\n    .then(([resCountry, resState]) => {\n        const countryName = resCountry?.data[0]?.country_name || '';\n        const stateName = resState?.data[0]?.state_name || '';\n    \n        const addressComponents = [\n          addressData.line1,\n          addressData.line2,\n          addressData.line3,\n          addressData.line4,\n          addressData.city,\n          addressData.postalCode,\n          stateName,\n          countryName,\n        ].filter(component => component && component.trim() !== '');\n    \n        return addressComponents.join(',\\n');\n    });\n};\n\n// Process both addresses in parallel\nPromise.all([\n  formatAddress(\n    {\n      line1: data.shipping_address_line_1,\n      line2: data.shipping_address_line_2,\n      line3: data.shipping_address_line_3,\n      line4: data.shipping_address_line_4,\n      city: data.shipping_address_city,\n      postalCode: data.shipping_postal_code,\n    },\n    data.shipping_address_country,\n    data.shipping_address_state\n  ),\n  formatAddress(\n    {\n      line1: data.billing_address_line_1,\n      line2: data.billing_address_line_2,\n      line3: data.billing_address_line_3,\n      line4: data.billing_address_line_4,\n      city: data.billing_address_city,\n      postalCode: data.billing_postal_code,\n    },\n    data.billing_address_country,\n    data.billing_address_state\n  ),\n])\n.then(([shippingAddress, billingAddress]) => {\n  // Set both addresses at once\n  this.setData({\n    'pi_shipping_address': shippingAddress,\n    'pi_billing_address': billingAddress\n  });\n})\n.catch(err => {\n  console.error('Error processing addresses:', err);\n});",
        "type": "js"
      },
      {
        "key": "dkihgawc",
        "name": "onChange_tax",
        "func": "",
        "type": "rule",
        "rules": [
          {
            "key": "kvq75iio",
            "action": "refreshFieldOptionData",
            "options": {
              "condition": "",
              "isCondition": false,
              "field": "inv_taxes_rate_percent",
              "valueTypes": {},
              "dataSource": {
                "args": {}
              }
            }
          }
        ]
      },
      {
        "key": "jtqa395j",
        "name": "onClick_posted",
        "func": "const closeDialog = () => {\n    if (this.parentGenerateForm) {\n      this.parentGenerateForm.$refs.SuPageDialogRef.hide();\n      this.parentGenerateForm.refresh();\n      this.hideLoading();\n    }\n};\n\nconst updatePurchaseOrderStatus = async (purchaseInvoiceId) => {\n\n    const currentPIQuery = await db.collection('purchase_invoice').where({ id: purchaseInvoiceId }).get();\n    const currentPI = currentPIQuery.data[0];\n  \n    const fullyPostedQuery = db.collection('purchase_invoice')\n    .where({pi_status: 'Fully Posted', purchase_order_id: currentPI.purchase_order_id});\n  \n    Promise.all([\n        fullyPostedQuery.get(),\n        db.collection('purchase_order').where({ id: currentPI.purchase_order_id }).get()\n    ])\n    .then(([resPost, resPO]) => {\n        const allPIs = resPost.data || [];\n        const poData = resPO.data[0];\n        if (!poData) return;\n        \n        const poItems = poData.table_po || [];\n        \n        // Create a map to sum received quantities for each item\n        const invoicedQtyMap = {};\n        \n        // Initialize with zeros\n        poItems.forEach(item => {\n            invoicedQtyMap[item.item_id] = 0;\n        });\n        \n        // Sum received quantities from all PIs\n        allPIs.forEach(pi => {\n            (pi.table_pi || []).forEach(piItem => {\n            if (invoicedQtyMap.hasOwnProperty(piItem.material_id)) {\n                invoicedQtyMap[piItem.material_id] += piItem.invoice_qty || 0;\n            }\n            });\n        });\n        \n        // Check if all items are fully received\n        let allItemsComplete = true;\n        let anyItemProcessing = false;\n        \n        poItems.forEach(item => {\n            const orderedQty = item.quantity || 0;\n            const invoicedQty = invoicedQtyMap[item.item_id] || 0;\n            \n            if (invoicedQty < orderedQty) {\n                allItemsComplete = false;\n                if (invoicedQty > 0) {\n                    anyItemProcessing = true;\n                }\n            }\n        });\n        \n        // Determine new status\n        const newPIStatus = allItemsComplete ? 'Fully Posted' :\n                            anyItemProcessing ? 'Partially Posted' :\n                            poData.pi_posted_status;\n    \n        \n        // Update PO status if changed\n        if (newPIStatus !== poData.pi_posted_status) {\n            db.collection('purchase_order')\n            .doc(currentPI.purchase_order_id)\n            .update({ \n                pi_posted_status: newPIStatus });\n        }\n    })\n  };\n\n(async () => {\n    try{\n        this.showLoading();\n  \n        const purchaseInvoiceId = this.getValue('id');\n\n        await db.collection(\"purchase_invoice\").doc(purchaseInvoiceId).update({posted_status: \"Pending Post\"})\n        await this.runWorkflow(\n            '1902567744272973826',\n            {key: 'value'},\n            (res) => {\n                console.log(\"成功结果：\", res);\n                const piList = res.data.results;\n                piList.forEach(async (item) => {\n                    if(item.status === 'SUCCESS') {\n                        await updatePurchaseOrderStatus(item.id);\n                    }\n                });\n\n                this.$message.success('Update successfully')\n                closeDialog();\n            },\n            (err) => {\n                this.$message.error(\"失败结果：\", err);\n            }\n          )\n    } catch (error) {\n      this.hideLoading();\n      this.$message.error(error);\n    }\n  })();",
        "type": "js"
      },
      {
        "key": "wlit327c",
        "name": "onChangeCurrency",
        "func": "const currencyCode = this.getValue('currency_code')\nif(!currencyCode){\n  this.hide(['exchange_rate','exchange_rate_myr','exchange_rate_currency','myr_total_amount','total_amount_myr'])\n  return\n}\nthis.setData({\"total_gross_currency\":currencyCode,\n             \"total_discount_currency\":currencyCode,\n             \"total_tax_currency\":currencyCode,\n             \"total_amount_currency\":currencyCode,\n             \"exchange_rate_currency\":currencyCode})\n\nif(currencyCode != \"----\" && currencyCode != \"MYR\"){\n  db.collection(\"currency\")\n            .where({ currency_code: currencyCode })\n            .get()\n.then(res=>{\n  const currencyEntry = res.data[0]\n\n   this.setData({\n        exchange_rate: this.getValue('exchange_rate') == undefined? currencyEntry.currency_buying_rate:  this.getValue('exchange_rate') != currencyEntry.currency_buying_rate ? \n        this.getValue('exchange_rate'): currencyEntry.currency_buying_rate ,\n        myr_total_amount: currencyEntry.currency_buying_rate * this.getValue('invoice_total')\n      })\n  \n  this.display(['exchange_rate','exchange_rate_myr','exchange_rate_currency','myr_total_amount','total_amount_myr'])\n})\n}else{\n  this.setData({\n    exchange_rate:1,\n    myr_total_amount: 1 * this.getValue('invoice_total')\n               })\n  this.hide(['exchange_rate','exchange_rate_myr','exchange_rate_currency','myr_total_amount','total_amount_myr'])\n}\n\n\n",
        "type": "js"
      },
      {
        "key": "cw9g6d0g",
        "name": "onChangeTotal",
        "func": "const exchangeRate = this.getValue('exchange_rate')\nconst piTotal = this.getValue('invoice_total')\n\nif(!exchangeRate){\n    return\n}\n\nif(piTotal === undefined || piTotal === 0){\n  this.setData({'myr_total_amount': 0.00})\n} else {\n  const myrTotalAmount = exchangeRate * piTotal\n      this.setData({'myr_total_amount': parseFloat(myrTotalAmount.toFixed(2))})\n}\n  \n",
        "type": "js"
      },
      {
        "key": "lxry8ffw",
        "name": "managePiBillingAddress",
        "func": "const data = this.getValues();\n\nthis.routeLocation(\n    {\n    routeMode: \"dialog\",\n        routeInfo: {\n            source_id: \"1905102178127777793\",\n            name:\"Address\",\t\n        },\n    },\n    {   'address_purpose': 'Billing',\n        'address_line1': data.billing_address_line_1,\n        'address_line2': data.billing_address_line_2,\n        'address_line3': data.billing_address_line_3,\n        'address_line4': data.billing_address_line_4,\n        'city': data.billing_address_city,\n        'postal_code': data.billing_postal_code,\n        'state': data.billing_address_state,\n        'country': data.billing_address_country,\n        'moduleName': 'pi'\n    }\n);",
        "type": "js"
      },
      {
        "key": "8tun597m",
        "name": "managePiShippingAddress",
        "func": "const data = this.getValues();\n\nthis.routeLocation(\n    {\n    routeMode: \"dialog\",\n        routeInfo: {\n            source_id: \"1905102178127777793\",\n            name:\"Address\",\t\n        },\n    },\n    {   'address_purpose': 'Shipping',\n        'address_line1': data.shipping_address_line_1,\n        'address_line2': data.shipping_address_line_2,\n        'address_line3': data.shipping_address_line_3,\n        'address_line4': data.shipping_address_line_4,\n        'city': data.shipping_address_city,\n        'postal_code': data.shipping_postal_code,\n        'state': data.shipping_address_state,\n        'country': data.shipping_address_country,\n        'moduleName': 'pi'\n    }\n);",
        "type": "js"
      },
      {
        "key": "qsv0pqph",
        "name": "onChange_fake_po",
        "func": "const data = this.getValues();\nconst currencyCode = arguments[0].fieldModel.item.po_currency;\nconst exchangeRate = arguments[0].fieldModel.item.exchange_rate;\nthis.setData({\n    'currency_code' : currencyCode,\n    'supplier_name': arguments[0].fieldModel.item.po_supplier_id,\n    'plant_id': arguments[0].fieldModel.item.po_plant,\n    'organization_id': arguments[0].fieldModel.item.organization_id,\n    'invoice_payment_term_id': arguments[0].fieldModel.item.po_payment_terms,\n    'po_no_display': arguments[0].fieldModel.item.purchase_order_no,\n    'goods_receiving_no': [],\n    'table_pi':[]\n})\n\n// Check if purchase_order_id has a value\nconst purchaseOrderId = data.fake_purchase_order_id;\nif (!purchaseOrderId) {\n    return;\n}\n\n// Address \nif(purchaseOrderId) {\n    this.display('address_grid')\n    const resetFormFields = () => {\n        this.setData({\n            'pi_billing_name': '',\n            'pi_billing_cp': '',\n            'pi_shipping_address': '',\n            'pi_billing_address': '',\n            'billing_address_line_1': '',\n            'billing_address_line_1': '',\n            'billing_address_line_2': '',\n            'billing_address_line_3': '',\n            'billing_address_line_4': '',\n            'billing_address_city': '',\n            'billing_address_state': '',\n            'billing_postal_code': '',\n            'billing_address_country': '',\n            'shipping_address_line_1': '',\n            'shipping_address_line_2': '',\n            'shipping_address_line_3': '',\n            'shipping_address_line_4': '',\n            'shipping_address_city': '',\n            'shipping_address_state': '',\n            'shipping_postal_code': '',\n            'shipping_address_country': '',\n        });\n    };\n\n    const setAddressFields = (addressType, address) => {\n        this.setData({\n          [`${addressType}_address_line_1`]: address.address_line_1,\n          [`${addressType}_address_line_2`]: address.address_line_2,\n          [`${addressType}_address_line_3`]: address.address_line_3,\n          [`${addressType}_address_line_4`]: address.address_line_4,\n          [`${addressType}_address_city`]: address.address_city,\n          [`${addressType}_address_state`]: address.adddress_state,\n          [`${addressType}_postal_code`]: address.address_postal_code,\n          [`${addressType}_address_country`]: address.address_country_id,\n        });\n      };\n\n    resetFormFields();\n\n    const supplierIdFromPO = arguments[0]?.fieldModel?.item?.po_supplier_id;\n\n    if(supplierIdFromPO){\n        Promise.all([\n            db.collection('address_purpose').where({ purpose_name: 'Shipping' }).get(),\n            db.collection('supplier_head').where({ id: supplierIdFromPO }).get(),\n        ]).then(async ([resShipping, resSupplier]) => {\n            \n            if (resSupplier.data.length === 0 || resShipping.data.length === 0) return;\n            \n            const supplierData = resSupplier.data[0];\n            const shippingAddrId = resShipping.data[0].id;\n    \n            const addresses = supplierData.address_list.filter(address => \n                address.switch_save_as_default\n            );\n\n            await this.display('purchase_order_id');\n            await this.hide('fake_purchase_order_id');\n            const poArray = [purchaseOrderId];\n            await this.setData({\n                'supplier_name': supplierData.id,\n                'agent_id': supplierData.supplier_agent_id,\n                'purchase_order_id': poArray\n            });\n\n            \n    \n            addresses.forEach((address) => {\n                Promise.all([\n                    db.collection('country').where({ id: address.address_country_id }).get(),\n                    db.collection('state').where({ id: address.adddress_state }).get(),\n                ]).then(([resCountry, resState]) => {\n                    if (resCountry.data.length === 0 || resState.data.length === 0) return;\n            \n                    const countryName = resCountry.data[0].country_name;\n                    const stateName = resState.data[0].state_name;\n            \n                    const addressComponents = [\n                    address.address_line_1,\n                    address.address_line_2,\n                    address.address_line_3,\n                    address.address_line_4,\n                    address.address_city,\n                    address.address_postal_code,\n                    stateName,\n                    countryName,\n                    ]; \n            \n                    const formattedAddress = addressComponents.filter(Boolean).join(',\\n').replace(/([^,])\\n/g, '$1,\\n');\n            \n                    const isShipping = address.address_purpose_id === shippingAddrId;\n                    const addressType = isShipping ? 'shipping' : 'billing';\n            \n                    setAddressFields(\n                    addressType,\n                    address,\n                    resState.data[0].id,\n                    resCountry.data[0].id\n                    );\n            \n                    if(addressType === 'shipping') {\n                    this.setData({ 'pi_shipping_address': formattedAddress });\n                    } else {\n                    this.setData({ \n                        'pi_billing_address': formattedAddress, \n                        'pi_billing_name': address.address_name,\n                        'pi_billing_cp': address.address_phone, });\n                    }\n                });\n            })\n        })\n    }\n}\n\nif(!currencyCode){\n    this.hide(['exchange_rate', 'exchange_rate_myr', 'exchange_rate_currency', 'myr_total_amount', 'total_amount_myr'])\n    return\n} else {\n    this.setData({\"total_gross_currency\":currencyCode,\n        \"total_discount_currency\":currencyCode,\n        \"total_tax_currency\":currencyCode,\n        \"total_amount_currency\":currencyCode,\n        \"exchange_rate_currency\":currencyCode})\n\n    if(currencyCode !== \"----\" && currencyCode !== \"MYR\"){\n        \n        this.setData({exchange_rate: exchangeRate})\n        this.display(['exchange_rate', 'exchange_rate_myr', 'exchange_rate_currency', 'myr_total_amount', 'total_amount_myr']);\n\n    }else{\n        this.setData({exchange_rate:1,})\n        this.hide(['exchange_rate', 'exchange_rate_myr', 'exchange_rate_currency', 'myr_total_amount', 'total_amount_myr'])\n    }\n} ",
        "type": "js"
      }
    ],
    "uniqueGroup": [],
    "params": [
      {
        "key": "kgo8fibi",
        "name": "purchase_invoice_no",
        "title": "",
        "description": "",
        "bsonType": "string",
        "isExpand": false,
        "children": []
      },
      {
        "key": "0v817zr3",
        "name": "page_status",
        "title": "",
        "description": "",
        "bsonType": "string",
        "isExpand": false,
        "children": []
      }
    ],
    "deps": {},
    "paramsDeps": {},
    "styleSheets": ".padding{\n  padding:20px\n}\n\n.margin{\n  margin-left: 15px\n}\n\n.marginright{\n  margin-right: 20px;\n  margin-top : 3px;\n}\n\n.fixbutton{\n  position: fixed;\n  bottom: 0;\n  right: 0;\n}\n\n"
  }
}
