{
  "list": [
    {
      "name": "Flex",
      "type": "flex",
      "el": "su-fm-flex",
      "mainIcon": "自动布局",
      "typeIcon": "自动布局",
      "icon": "icon-zhediemianban",
      "group": "Design",
      "groupSort": 6,
      "enableScopes": ["Component", "Table", "Page"],
      "options": {
        "title": "布局",
        "customClass": "",
        "hidden": false,
        "recursive": false,
        "recursiveStyleFx": "",
        "slotTarget": "",
        "defaultValue": "",
        "flexDirection": "row",
        "flexWrap": "nowrap",
        "alignItems": "",
        "justifyContent": "",
        "hGap": "",
        "vGap": "",
        "grid": {
          "row": {
            "value": "",
            "visible": true
          },
          "col": {
            "value": "",
            "visible": true
          },
          "use": false
        },
        "padding": ["", "", "", ""],
        "margin": ["", "", "", ""],
        "boxSizing": "border-box",
        "width": "",
        "height": "",
        "radius": ["", "", "", ""],
        "position": "",
        "positions": ["", "", "", ""],
        "zIndex": "",
        "flex": "",
        "flexGrow": "",
        "flexShrink": "",
        "fills": [],
        "borders": [],
        "effects": [],
        "states": [],
        "hoverClass": "",
        "overflow": "",
        "styleFx": "",
        "behave": "",
        "remoteFunc": "func_buf38mr8",
        "remoteOption": "option_buf38mr8",
        "tableColumn": false,
        "subform": false,
        "props": {},
        "datasource": {
          "source": null,
          "rules": {
            "collectionId": "",
            "list": [
              {
                "id": 1723795236686,
                "parentId": 1723795236685,
                "isTop": true,
                "prop": "",
                "operator": "",
                "valueType": "",
                "value": "",
                "type": "leaf",
                "level": 1
              }
            ]
          }
        },
        "remote": false,
        "remoteType": "datasource",
        "url_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        },
        "body_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        }
      },
      "list": [
        {
          "name": "",
          "type": "utext",
          "el": "su-fm-text",
          "mainIcon": "文字",
          "typeIcon": "文字",
          "icon": "icon-wenzishezhi-",
          "group": "Design",
          "groupSort": 6,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "defaultValue": "Sales Invoice",
            "customClass": "marginright",
            "hidden": false,
            "isRich": false,
            "padding": ["", "", "", ""],
            "margin": ["", "", "", ""],
            "boxSizing": "border-box",
            "width": "",
            "maxWidth": "",
            "lineHeight": "",
            "color": "#333333",
            "fontSize": "24px",
            "fontWeight": "700",
            "textAlign": "left",
            "fontStyle": "",
            "textOverflow": "",
            "whiteSpace": "",
            "lines": 0,
            "radius": ["", "", "", ""],
            "position": "",
            "positions": ["", "", "", ""],
            "zIndex": "",
            "flex": "",
            "flexGrow": "",
            "flexShrink": "",
            "fills": [],
            "borders": [],
            "effects": [],
            "states": [],
            "styleFx": "",
            "remoteFunc": "func_iord96hb",
            "remoteOption": "option_iord96hb",
            "tableColumn": false,
            "subform": false,
            "dynamicValueFx": "",
            "dynamicValueType": "fx",
            "isDynamicValue": false
          },
          "events": {
            "onClick": ""
          },
          "key": "iord96hb",
          "model": "sales_invoice_title",
          "rules": []
        },
        {
          "name": "Draft Status",
          "type": "html",
          "icon": "icon-html",
          "mainIcon": "HTML",
          "typeIcon": "HTML",
          "group": "View",
          "groupSort": 1,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "defaultValue": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Draft Button</title>\n    <style>\n        body {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n            margin: 0;\n            background-color: #f4f4f9;\n        }\n\n        .draft-button {\n            padding: 0 20px;\n            border: 2px solid #8C95A4;\n            background-color: #D0D5DD;\n            color: #4D5A74;\n            font-size: 14px;\n            font-family: Arial, sans-serif;\n            border-radius: 20px;\n            cursor: default;\n            transition: background-color 0.3s;\n            width: max-content;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"draft-button\">Draft</div>\n</body>\n</html>",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": true,
            "dataBind": true,
            "required": false,
            "width": "",
            "tip": "",
            "remoteFunc": "func_nuowqrrd",
            "remoteOption": "option_nuowqrrd",
            "tableColumn": false,
            "subform": false,
            "customClass": "",
            "hideLabel": true
          },
          "events": {
            "onChange": ""
          },
          "key": "nuowqrrd",
          "model": "draft_status",
          "rules": []
        },
        {
          "name": "Completed Status",
          "type": "html",
          "icon": "icon-html",
          "mainIcon": "HTML",
          "typeIcon": "HTML",
          "group": "View",
          "groupSort": 1,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "defaultValue": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Completed Button</title>\n    <style>\n        body {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n            margin: 0;\n            background-color: #f4f4f9;\n        }\n\n        .completed-button {\n            padding: 0 20px;\n            border: 2px solid #00AE00;\n            background-color: #C5F5C5;\n            color: #016701;\n            font-size: 14px;\n            font-family: Arial, sans-serif;\n            border-radius: 20px;\n            cursor: default;\n            transition: background-color 0.3s;\n            width: max-content;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"completed-button\">Completed</div>\n</body>\n</html>",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": true,
            "dataBind": true,
            "required": false,
            "width": "",
            "tip": "",
            "remoteFunc": "func_nuowqrrd",
            "remoteOption": "option_nuowqrrd",
            "tableColumn": false,
            "subform": false,
            "customClass": "",
            "hideLabel": true
          },
          "events": {
            "onChange": ""
          },
          "key": "kr8yy1vo",
          "model": "completed_status",
          "rules": []
        },
        {
          "name": "Fully Posted Status",
          "type": "html",
          "icon": "icon-html",
          "mainIcon": "HTML",
          "typeIcon": "HTML",
          "group": "View",
          "groupSort": 1,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "defaultValue": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Fully Posted Button</title>\n    <style>\n        body {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n            margin: 0;\n            background-color: #f4f4f9;\n        }\n\n        .fullyposted-button {\n            padding: 0 20px;\n            border: 2px solid #00AE00;\n            background-color: #C5F5C5;\n            color: #016701;\n            font-size: 14px;\n            font-family: Arial, sans-serif;\n            border-radius: 20px;\n            cursor: default;\n            transition: background-color 0.3s;\n            width: max-content;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"fullyposted-button\">Fully Posted</div>\n</body>\n</html>",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": true,
            "dataBind": true,
            "required": false,
            "width": "",
            "tip": "",
            "remoteFunc": "func_nuowqrrd",
            "remoteOption": "option_nuowqrrd",
            "tableColumn": false,
            "subform": false,
            "customClass": "",
            "hideLabel": true
          },
          "events": {
            "onChange": ""
          },
          "key": "9nnpbu2l",
          "model": "fullyposted_status",
          "rules": []
        }
      ],
      "events": {
        "onClick": ""
      },
      "key": "buf38mr8",
      "model": "flex_buf38mr8",
      "rules": []
    },
    {
      "name": "Page Status",
      "type": "input",
      "mainIcon": "单行文本",
      "typeIcon": "多行文本",
      "icon": "icon-input",
      "group": "Text",
      "groupSort": 1,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-input",
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "dataType": "",
        "dataTypeCheck": false,
        "dataTypeMessage": "",
        "pattern": "",
        "patternCheck": false,
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "disabled": false,
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "showPassword": false,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_upca6ebx",
        "remoteOption": "option_upca6ebx",
        "tableColumn": false,
        "subform": false
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "upca6ebx",
      "model": "page_status",
      "rules": []
    },
    {
      "name": "SI Status",
      "type": "select",
      "mainIcon": "下拉单选",
      "typeIcon": "下拉单选",
      "icon": "icon-select",
      "group": "Select",
      "groupSort": 2,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-select",
      "options": {
        "defaultValue": "",
        "multiple": false,
        "disabled": false,
        "clearable": false,
        "placeholder": "",
        "required": false,
        "requiredMessage": "",
        "validatorCheck": false,
        "validator": "",
        "width": "",
        "options": [
          {
            "value": "Option 1",
            "label": "Option 1"
          },
          {
            "value": "Option 2",
            "label": "Option 2"
          },
          {
            "value": "Option 3",
            "label": "Option 3"
          }
        ],
        "remote": true,
        "remoteType": "innerdatasource",
        "remoteOption": "option_knkahd0f",
        "filterable": false,
        "pagingEnabled": true,
        "remoteOptions": [],
        "props": {
          "value": "dict_key",
          "label": "dict_key",
          "cascade": "",
          "children": "children",
          "image": "",
          "icon": ""
        },
        "remoteFunc": "func_knkahd0f",
        "customClass": "",
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "customProps": {},
        "tip": "",
        "tableColumn": false,
        "subform": false,
        "paging_enabled": 0,
        "paging_way": "Pagination",
        "page_size": 10,
        "more_fields": [],
        "datasource": {
          "source": "系统字典(勿删):Table:1897577528487428098",
          "rules": {
            "collectionId": "1897577528487428098",
            "list": [
              {
                "id": 1723795236686,
                "parentId": 1723795236685,
                "isTop": true,
                "prop": "parent_id",
                "operator": "numberEqual",
                "valueType": "value",
                "value": "1914242988707749889",
                "type": "leaf",
                "level": 1,
                "propLabel": "父主键",
                "valueLabel": "",
                "operatorLabel": "等于",
                "valueTypeLabel": "值"
              }
            ]
          }
        },
        "url_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        },
        "body_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        },
        "request_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        }
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "knkahd0f",
      "model": "si_status",
      "rules": []
    },
    {
      "name": "栅格布局",
      "type": "grid",
      "mainIcon": "栅格布局",
      "typeIcon": "栅格布局",
      "icon": "icon-RectangleCopy",
      "group": "Layout",
      "groupSort": 0,
      "enableScopes": ["Component", "Table", "Page"],
      "columns": [
        {
          "type": "col",
          "options": {
            "span": 12,
            "offset": 0,
            "push": 0,
            "pull": 0,
            "xs": 24,
            "sm": 12,
            "md": 12,
            "lg": 12,
            "xl": 12,
            "customClass": ""
          },
          "list": [
            {
              "name": "SO Number",
              "el": "su-fm-table-select",
              "mainIcon": "数据源",
              "typeIcon": "数据源",
              "group": "Select",
              "groupSort": 4,
              "generate": "part",
              "enableScopes": ["Component", "Table", "Page"],
              "options": {
                "defaultValue": [],
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "disabled": false,
                "dataBind": true,
                "required": true,
                "validator": "",
                "hideLabel": false,
                "pageSourceId": "1922493865105235969",
                "customProps": {},
                "pagingEnabled": true,
                "multiple": false,
                "placeholder": "",
                "lazyLoad": true,
                "props": {
                  "value": "id",
                  "label": "so_no",
                  "cascade": "",
                  "children": "",
                  "image": "",
                  "icon": ""
                },
                "datasource": {
                  "source": "Sales Order:Table:1902773735979597826",
                  "rules": {
                    "collectionId": "1902773735979597826",
                    "list": [
                      {
                        "id": 1747208088067,
                        "parentId": 1747208088068,
                        "isTop": true,
                        "type": "branch",
                        "operator": "all",
                        "prop": "",
                        "valueType": "",
                        "value": "",
                        "level": 1,
                        "children": [
                          {
                            "id": 1747208088071,
                            "isTop": false,
                            "parentId": 1747208088067,
                            "type": "branch",
                            "operator": "any",
                            "level": 2,
                            "children": [
                              {
                                "id": 1747208088085,
                                "parentId": 1747208088071,
                                "isTop": false,
                                "prop": "si_status",
                                "operator": "notEqual",
                                "valueType": "value",
                                "value": "Fully Invoiced",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "SI Completed Status",
                                "valueLabel": "",
                                "operatorLabel": "不等于",
                                "valueTypeLabel": "值"
                              },
                              {
                                "id": 1747208088072,
                                "parentId": 1747208088071,
                                "isTop": false,
                                "prop": "si_status",
                                "operator": "isNull",
                                "valueType": "value",
                                "value": null,
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "SI Completed Status",
                                "valueLabel": "",
                                "operatorLabel": "没有值",
                                "valueTypeLabel": "值"
                              }
                            ]
                          },
                          {
                            "id": 1747208088073,
                            "isTop": false,
                            "parentId": 1747208088067,
                            "type": "branch",
                            "operator": "all",
                            "level": 2,
                            "children": [
                              {
                                "id": 1747208088069,
                                "parentId": 1747208088073,
                                "isTop": false,
                                "prop": "so_status",
                                "operator": "notEqual",
                                "valueType": "value",
                                "value": "Draft",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "SO Status",
                                "valueLabel": "",
                                "operatorLabel": "不等于",
                                "valueTypeLabel": "值"
                              },
                              {
                                "id": 1747208088074,
                                "parentId": 1747208088073,
                                "isTop": false,
                                "prop": "so_status",
                                "operator": "notEqual",
                                "valueType": "value",
                                "value": "Cancelled",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "SO Status",
                                "valueLabel": "",
                                "operatorLabel": "不等于",
                                "valueTypeLabel": "值"
                              }
                            ]
                          },
                          {
                            "id": 1747208088070,
                            "parentId": 1747208088067,
                            "isTop": false,
                            "prop": "plant_name",
                            "operator": "isNotNull",
                            "valueType": "value",
                            "value": null,
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "Plant",
                            "valueLabel": "",
                            "operatorLabel": "有值",
                            "valueTypeLabel": "值"
                          }
                        ]
                      }
                    ]
                  },
                  "paging_enabled": 0,
                  "paging_way": "Pagination",
                  "page_size": 10,
                  "more_fields": [],
                  "datasource": {
                    "source": null,
                    "rules": {
                      "collectionId": "",
                      "list": [
                        {
                          "id": 1723795236686,
                          "parentId": 1723795236685,
                          "isTop": true,
                          "prop": "",
                          "operator": "",
                          "valueType": "",
                          "value": "",
                          "type": "leaf",
                          "level": 1
                        }
                      ]
                    }
                  },
                  "url_params": {
                    "list": [
                      {
                        "prop": "",
                        "propLabel": "",
                        "operator": "",
                        "operatorLabel": "",
                        "valueType": "value",
                        "valueTypeLabel": "",
                        "value": null,
                        "valueLabel": ""
                      }
                    ]
                  },
                  "body_params": {
                    "list": [
                      {
                        "prop": "",
                        "propLabel": "",
                        "operator": "",
                        "operatorLabel": "",
                        "valueType": "value",
                        "valueTypeLabel": "",
                        "value": null,
                        "valueLabel": ""
                      }
                    ]
                  },
                  "request_params": {
                    "list": [
                      {
                        "prop": "",
                        "propLabel": "",
                        "operator": "",
                        "operatorLabel": "",
                        "valueType": "value",
                        "valueTypeLabel": "",
                        "value": null,
                        "valueLabel": ""
                      }
                    ]
                  },
                  "remote": false,
                  "remoteType": "datasource"
                },
                "remoteFunc": "func_47v5s3pa",
                "remoteOption": "option_47v5s3pa",
                "tableColumn": false,
                "subform": false,
                "paging_enabled": 1,
                "paging_way": "Pagination",
                "page_size": 10,
                "more_fields": [],
                "url_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "body_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "request_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "columns": [
                  {
                    "title": "SO Number",
                    "name": "so_no"
                  }
                ],
                "remote": true,
                "remoteType": "innerdatasource",
                "pageId": "1922493865147179013"
              },
              "events": {
                "onChange": "dlh48fkt"
              },
              "type": "custom",
              "novalid": {},
              "key": "k5ldcg4c",
              "model": "fake_so_id",
              "rules": [
                {
                  "required": true,
                  "message": ""
                }
              ]
            },
            {
              "name": "SO Number",
              "el": "su-fm-table-select",
              "mainIcon": "数据源",
              "typeIcon": "数据源",
              "group": "Select",
              "groupSort": 4,
              "generate": "part",
              "enableScopes": ["Component", "Table", "Page"],
              "options": {
                "defaultValue": [],
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "disabled": false,
                "dataBind": true,
                "required": true,
                "validator": "",
                "hideLabel": false,
                "pageSourceId": "1922493865105235969",
                "customProps": {},
                "pagingEnabled": true,
                "multiple": true,
                "placeholder": "",
                "lazyLoad": true,
                "props": {
                  "value": "id",
                  "label": "so_no",
                  "cascade": "",
                  "children": "",
                  "image": "",
                  "icon": ""
                },
                "datasource": {
                  "source": "Sales Order:Table:1902773735979597826",
                  "rules": {
                    "collectionId": "1902773735979597826",
                    "list": [
                      {
                        "id": 1747208088067,
                        "parentId": 1747208088068,
                        "isTop": true,
                        "type": "branch",
                        "operator": "all",
                        "prop": "",
                        "valueType": "",
                        "value": "",
                        "level": 1,
                        "children": [
                          {
                            "id": 1747208088071,
                            "isTop": false,
                            "parentId": 1747208088067,
                            "type": "branch",
                            "operator": "any",
                            "level": 2,
                            "children": [
                              {
                                "id": 1747208088085,
                                "parentId": 1747208088071,
                                "isTop": false,
                                "prop": "si_status",
                                "operator": "notEqual",
                                "valueType": "value",
                                "value": "Fully Invoiced",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "SI Completed Status",
                                "valueLabel": "",
                                "operatorLabel": "不等于",
                                "valueTypeLabel": "值"
                              },
                              {
                                "id": 1747208088072,
                                "parentId": 1747208088071,
                                "isTop": false,
                                "prop": "si_status",
                                "operator": "isNull",
                                "valueType": "value",
                                "value": null,
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "SI Completed Status",
                                "valueLabel": "",
                                "operatorLabel": "没有值",
                                "valueTypeLabel": "值"
                              }
                            ]
                          },
                          {
                            "id": 1747208088073,
                            "isTop": false,
                            "parentId": 1747208088067,
                            "type": "branch",
                            "operator": "all",
                            "level": 2,
                            "children": [
                              {
                                "id": 1747208088069,
                                "parentId": 1747208088073,
                                "isTop": false,
                                "prop": "so_status",
                                "operator": "notEqual",
                                "valueType": "value",
                                "value": "Draft",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "SO Status",
                                "valueLabel": "",
                                "operatorLabel": "不等于",
                                "valueTypeLabel": "值"
                              },
                              {
                                "id": 1747208088074,
                                "parentId": 1747208088073,
                                "isTop": false,
                                "prop": "so_status",
                                "operator": "notEqual",
                                "valueType": "value",
                                "value": "Cancelled",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "SO Status",
                                "valueLabel": "",
                                "operatorLabel": "不等于",
                                "valueTypeLabel": "值"
                              }
                            ]
                          },
                          {
                            "id": 1747208088070,
                            "parentId": 1747208088067,
                            "isTop": false,
                            "prop": "plant_name",
                            "operator": "isNotNull",
                            "valueType": "value",
                            "value": null,
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "Plant",
                            "valueLabel": "",
                            "operatorLabel": "有值",
                            "valueTypeLabel": "值"
                          },
                          {
                            "id": 1747639392966,
                            "parentId": 1747208088067,
                            "isTop": false,
                            "prop": "customer_name",
                            "operator": "equal",
                            "valueType": "field",
                            "value": "{{value:customer_id}}",
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "Customer Name",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "字段"
                          }
                        ]
                      }
                    ]
                  },
                  "paging_enabled": 0,
                  "paging_way": "Pagination",
                  "page_size": 10,
                  "more_fields": [],
                  "datasource": {
                    "source": null,
                    "rules": {
                      "collectionId": "",
                      "list": [
                        {
                          "id": 1723795236686,
                          "parentId": 1723795236685,
                          "isTop": true,
                          "prop": "",
                          "operator": "",
                          "valueType": "",
                          "value": "",
                          "type": "leaf",
                          "level": 1
                        }
                      ]
                    }
                  },
                  "url_params": {
                    "list": [
                      {
                        "prop": "",
                        "propLabel": "",
                        "operator": "",
                        "operatorLabel": "",
                        "valueType": "value",
                        "valueTypeLabel": "",
                        "value": null,
                        "valueLabel": ""
                      }
                    ]
                  },
                  "body_params": {
                    "list": [
                      {
                        "prop": "",
                        "propLabel": "",
                        "operator": "",
                        "operatorLabel": "",
                        "valueType": "value",
                        "valueTypeLabel": "",
                        "value": null,
                        "valueLabel": ""
                      }
                    ]
                  },
                  "request_params": {
                    "list": [
                      {
                        "prop": "",
                        "propLabel": "",
                        "operator": "",
                        "operatorLabel": "",
                        "valueType": "value",
                        "valueTypeLabel": "",
                        "value": null,
                        "valueLabel": ""
                      }
                    ]
                  },
                  "remote": false,
                  "remoteType": "datasource"
                },
                "remoteFunc": "func_47v5s3pa",
                "remoteOption": "option_47v5s3pa",
                "tableColumn": false,
                "subform": false,
                "paging_enabled": 1,
                "paging_way": "Pagination",
                "page_size": 10,
                "more_fields": [],
                "url_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "body_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "request_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "columns": [
                  {
                    "title": "SO Number",
                    "name": "so_no"
                  }
                ],
                "remote": true,
                "remoteType": "innerdatasource",
                "pageId": "1922493865147179013"
              },
              "events": {
                "onChange": "y8ucfmfm"
              },
              "type": "custom",
              "novalid": {},
              "key": "47v5s3pa",
              "model": "so_id",
              "rules": [
                {
                  "required": true,
                  "message": ""
                }
              ]
            },
            {
              "name": "SO Number",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_p11a0xgv",
                "remoteOption": "option_p11a0xgv",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "p11a0xgv",
              "model": "so_no_display",
              "rules": []
            },
            {
              "name": "栅格布局",
              "type": "grid",
              "mainIcon": "栅格布局",
              "typeIcon": "栅格布局",
              "icon": "icon-RectangleCopy",
              "group": "Layout",
              "groupSort": 0,
              "enableScopes": ["Component", "Table", "Page"],
              "columns": [
                {
                  "type": "col",
                  "options": {
                    "span": 12,
                    "offset": 0,
                    "push": 0,
                    "pull": 0,
                    "xs": 24,
                    "sm": 12,
                    "md": 21,
                    "lg": 12,
                    "xl": 12,
                    "customClass": ""
                  },
                  "list": [
                    {
                      "name": "Customer",
                      "type": "select",
                      "mainIcon": "下拉单选",
                      "typeIcon": "下拉单选",
                      "icon": "icon-select",
                      "group": "Select",
                      "groupSort": 2,
                      "enableScopes": ["Component", "Table", "Page"],
                      "el": "fm-select",
                      "options": {
                        "defaultValue": "",
                        "multiple": false,
                        "disabled": true,
                        "clearable": true,
                        "placeholder": "",
                        "required": false,
                        "requiredMessage": "",
                        "validatorCheck": false,
                        "validator": "",
                        "width": "",
                        "options": [
                          {
                            "value": "Option 1",
                            "label": "Option 1"
                          },
                          {
                            "value": "Option 2",
                            "label": "Option 2"
                          },
                          {
                            "value": "Option 3",
                            "label": "Option 3"
                          }
                        ],
                        "remote": true,
                        "remoteType": "innerdatasource",
                        "remoteOption": "option_mm19stp5",
                        "filterable": true,
                        "pagingEnabled": true,
                        "remoteOptions": [],
                        "props": {
                          "value": "id",
                          "label": "customer_com_name",
                          "cascade": "",
                          "children": "",
                          "image": "",
                          "icon": ""
                        },
                        "remoteFunc": "func_mm19stp5",
                        "customClass": "",
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hidden": false,
                        "dataBind": true,
                        "customProps": {},
                        "tip": "",
                        "tableColumn": false,
                        "subform": false,
                        "paging_enabled": 1,
                        "paging_way": "Pagination",
                        "page_size": 10,
                        "more_fields": [],
                        "datasource": {
                          "source": "Customer:Table:1902779099617804290",
                          "rules": {
                            "collectionId": "1902779099617804290",
                            "list": [
                              {
                                "id": 1746495805274,
                                "parentId": 1746495805273,
                                "isTop": true,
                                "prop": "",
                                "operator": "",
                                "valueType": "",
                                "value": "",
                                "type": "leaf",
                                "level": 1
                              }
                            ]
                          }
                        },
                        "url_params": {
                          "list": [
                            {
                              "prop": "",
                              "propLabel": "",
                              "operator": "",
                              "operatorLabel": "",
                              "valueType": "value",
                              "valueTypeLabel": "",
                              "value": null,
                              "valueLabel": ""
                            }
                          ]
                        },
                        "body_params": {
                          "list": [
                            {
                              "prop": "",
                              "propLabel": "",
                              "operator": "",
                              "operatorLabel": "",
                              "valueType": "value",
                              "valueTypeLabel": "",
                              "value": null,
                              "valueLabel": ""
                            }
                          ]
                        },
                        "request_params": {
                          "list": [
                            {
                              "prop": "",
                              "propLabel": "",
                              "operator": "",
                              "operatorLabel": "",
                              "valueType": "value",
                              "valueTypeLabel": "",
                              "value": null,
                              "valueLabel": ""
                            }
                          ]
                        },
                        "select-card_n7ge7fmb": [],
                        "immutable": true
                      },
                      "events": {
                        "onChange": "2a1x6qji",
                        "onFocus": "",
                        "onBlur": ""
                      },
                      "novalid": {},
                      "key": "h2mx2a0v",
                      "model": "customer_id",
                      "rules": []
                    }
                  ],
                  "key": "y0jqy7u8",
                  "rules": []
                },
                {
                  "type": "col",
                  "options": {
                    "span": 12,
                    "offset": 0,
                    "push": 0,
                    "pull": 0,
                    "xs": 24,
                    "sm": 12,
                    "md": 3,
                    "lg": 12,
                    "xl": 12,
                    "customClass": ""
                  },
                  "list": [
                    {
                      "name": "Currency",
                      "type": "input",
                      "mainIcon": "单行文本",
                      "typeIcon": "多行文本",
                      "icon": "icon-input",
                      "group": "Text",
                      "groupSort": 1,
                      "enableScopes": ["Component", "Table", "Page"],
                      "el": "fm-input",
                      "options": {
                        "width": "",
                        "defaultValue": "",
                        "required": false,
                        "requiredMessage": "",
                        "dataType": "",
                        "dataTypeCheck": false,
                        "dataTypeMessage": "",
                        "pattern": "",
                        "patternCheck": false,
                        "patternMessage": "",
                        "validatorCheck": false,
                        "validator": "",
                        "placeholder": "",
                        "customClass": "",
                        "disabled": true,
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hidden": false,
                        "dataBind": true,
                        "showPassword": false,
                        "clearable": false,
                        "maxlength": "",
                        "showWordLimit": false,
                        "customProps": {},
                        "tip": "",
                        "remoteFunc": "func_qnmvahob",
                        "remoteOption": "option_qnmvahob",
                        "tableColumn": false,
                        "subform": false,
                        "hideLabel": true
                      },
                      "events": {
                        "onChange": "",
                        "onFocus": "",
                        "onBlur": ""
                      },
                      "novalid": {},
                      "key": "qnmvahob",
                      "model": "currency_code",
                      "rules": []
                    }
                  ],
                  "key": "dxtq2pxr",
                  "rules": []
                }
              ],
              "options": {
                "gutter": 4,
                "justify": "start",
                "align": "top",
                "customClass": "",
                "hidden": false,
                "flex": true,
                "responsive": true,
                "remoteFunc": "func_fwvf4exn",
                "remoteOption": "option_fwvf4exn",
                "tableColumn": false,
                "subform": false
              },
              "novalid": {},
              "key": "fwvf4exn",
              "model": "grid_fwvf4exn",
              "rules": []
            },
            {
              "name": "栅格布局",
              "type": "grid",
              "mainIcon": "栅格布局",
              "typeIcon": "栅格布局",
              "icon": "icon-RectangleCopy",
              "group": "Layout",
              "groupSort": 0,
              "enableScopes": ["Component", "Table", "Page"],
              "columns": [
                {
                  "type": "col",
                  "options": {
                    "span": 12,
                    "offset": 0,
                    "push": 0,
                    "pull": 0,
                    "xs": 24,
                    "sm": 12,
                    "md": 12,
                    "lg": 12,
                    "xl": 12,
                    "customClass": ""
                  },
                  "list": [
                    {
                      "name": "Name",
                      "type": "input",
                      "mainIcon": "单行文本",
                      "typeIcon": "多行文本",
                      "icon": "icon-input",
                      "group": "Text",
                      "groupSort": 1,
                      "enableScopes": ["Component", "Table", "Page"],
                      "el": "fm-input",
                      "options": {
                        "width": "",
                        "defaultValue": "",
                        "required": false,
                        "requiredMessage": "",
                        "dataType": "",
                        "dataTypeCheck": false,
                        "dataTypeMessage": "",
                        "pattern": "",
                        "patternCheck": false,
                        "patternMessage": "",
                        "validatorCheck": false,
                        "validator": "",
                        "placeholder": "",
                        "customClass": "",
                        "disabled": false,
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hidden": false,
                        "dataBind": true,
                        "showPassword": false,
                        "clearable": false,
                        "maxlength": "",
                        "showWordLimit": false,
                        "customProps": {},
                        "tip": "",
                        "remoteFunc": "func_d3hht467",
                        "remoteOption": "option_d3hht467",
                        "tableColumn": false,
                        "subform": false,
                        "labelWrap": true
                      },
                      "events": {
                        "onChange": "",
                        "onFocus": "",
                        "onBlur": ""
                      },
                      "novalid": {},
                      "key": "d3hht467",
                      "model": "si_address_name",
                      "rules": []
                    },
                    {
                      "name": "Billing Address",
                      "type": "textarea",
                      "mainIcon": "多行文本",
                      "typeIcon": "多行文本(1)",
                      "icon": "icon-diy-com-textarea",
                      "group": "Text",
                      "groupSort": 2,
                      "enableScopes": ["Component", "Table", "Page"],
                      "options": {
                        "width": "",
                        "defaultValue": "",
                        "required": false,
                        "requiredMessage": "",
                        "disabled": true,
                        "pattern": "",
                        "patternMessage": "",
                        "validatorCheck": false,
                        "validator": "",
                        "placeholder": "",
                        "customClass": "",
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hidden": false,
                        "dataBind": true,
                        "clearable": false,
                        "maxlength": "",
                        "showWordLimit": false,
                        "rows": 1,
                        "autosize": true,
                        "customProps": {},
                        "tip": "",
                        "remoteFunc": "func_6lllx40n",
                        "remoteOption": "option_6lllx40n",
                        "tableColumn": false,
                        "subform": false,
                        "hideLabel": false,
                        "labelWrap": true
                      },
                      "events": {
                        "onChange": "",
                        "onFocus": "",
                        "onBlur": ""
                      },
                      "novalid": {},
                      "key": "6lllx40n",
                      "model": "si_billing_address",
                      "rules": []
                    },
                    {
                      "name": "Manage Address",
                      "type": "link",
                      "mainIcon": "链接",
                      "typeIcon": "链接",
                      "icon": "icon-lianjie",
                      "group": "Buttons",
                      "groupSort": 2,
                      "enableScopes": ["Component", "Table", "Page"],
                      "options": {
                        "customClass": "",
                        "disabled": false,
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hideLabel": true,
                        "hidden": false,
                        "linkType": "default",
                        "linkName": "Manage Address",
                        "underline": true,
                        "blank": true,
                        "href": "",
                        "customProps": {},
                        "tip": "",
                        "remoteFunc": "func_ukf7ncys",
                        "remoteOption": "option_ukf7ncys",
                        "tableColumn": false,
                        "subform": false
                      },
                      "events": {
                        "onClick": "ojm80kkn"
                      },
                      "novalid": {},
                      "key": "ukf7ncys",
                      "model": "link_billing_address",
                      "rules": []
                    }
                  ],
                  "key": "8vx1qeqt",
                  "rules": []
                },
                {
                  "type": "col",
                  "options": {
                    "span": 12,
                    "offset": 0,
                    "push": 0,
                    "pull": 0,
                    "xs": 24,
                    "sm": 12,
                    "md": 12,
                    "lg": 12,
                    "xl": 12,
                    "customClass": ""
                  },
                  "list": [
                    {
                      "name": "Contact",
                      "type": "input",
                      "mainIcon": "单行文本",
                      "typeIcon": "多行文本",
                      "icon": "icon-input",
                      "group": "Text",
                      "groupSort": 1,
                      "enableScopes": ["Component", "Table", "Page"],
                      "el": "fm-input",
                      "options": {
                        "width": "",
                        "defaultValue": "",
                        "required": false,
                        "requiredMessage": "",
                        "dataType": "",
                        "dataTypeCheck": false,
                        "dataTypeMessage": "",
                        "pattern": "",
                        "patternCheck": false,
                        "patternMessage": "",
                        "validatorCheck": false,
                        "validator": "",
                        "placeholder": "",
                        "customClass": "",
                        "disabled": false,
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hidden": false,
                        "dataBind": true,
                        "showPassword": false,
                        "clearable": false,
                        "maxlength": "",
                        "showWordLimit": false,
                        "customProps": {},
                        "tip": "",
                        "remoteFunc": "func_d3hht467",
                        "remoteOption": "option_d3hht467",
                        "tableColumn": false,
                        "subform": false,
                        "labelWrap": true
                      },
                      "events": {
                        "onChange": "",
                        "onFocus": "",
                        "onBlur": ""
                      },
                      "novalid": {},
                      "key": "eytzijyv",
                      "model": "si_address_contact",
                      "rules": []
                    },
                    {
                      "name": "Shipping Address",
                      "type": "textarea",
                      "mainIcon": "多行文本",
                      "typeIcon": "多行文本(1)",
                      "icon": "icon-diy-com-textarea",
                      "group": "Text",
                      "groupSort": 2,
                      "enableScopes": ["Component", "Table", "Page"],
                      "options": {
                        "width": "",
                        "defaultValue": "",
                        "required": false,
                        "requiredMessage": "",
                        "disabled": true,
                        "pattern": "",
                        "patternMessage": "",
                        "validatorCheck": false,
                        "validator": "",
                        "placeholder": "",
                        "customClass": "",
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hidden": false,
                        "dataBind": true,
                        "clearable": false,
                        "maxlength": "",
                        "showWordLimit": false,
                        "rows": 1,
                        "autosize": true,
                        "customProps": {},
                        "tip": "",
                        "remoteFunc": "func_6lllx40n",
                        "remoteOption": "option_6lllx40n",
                        "tableColumn": false,
                        "subform": false,
                        "hideLabel": false,
                        "labelWrap": true
                      },
                      "events": {
                        "onChange": "",
                        "onFocus": "",
                        "onBlur": ""
                      },
                      "novalid": {},
                      "key": "5laphvaj",
                      "model": "si_shipping_address",
                      "rules": []
                    },
                    {
                      "name": "Manage Address",
                      "type": "link",
                      "mainIcon": "链接",
                      "typeIcon": "链接",
                      "icon": "icon-lianjie",
                      "group": "Buttons",
                      "groupSort": 2,
                      "enableScopes": ["Component", "Table", "Page"],
                      "options": {
                        "customClass": "",
                        "disabled": false,
                        "labelWidth": 100,
                        "isLabelWidth": false,
                        "hideLabel": true,
                        "hidden": false,
                        "linkType": "default",
                        "linkName": "Manage Address",
                        "underline": true,
                        "blank": true,
                        "href": "",
                        "customProps": {},
                        "tip": "",
                        "remoteFunc": "func_7kajd8xe",
                        "remoteOption": "option_7kajd8xe",
                        "tableColumn": false,
                        "subform": false
                      },
                      "events": {
                        "onClick": "xibb8q4c"
                      },
                      "novalid": {},
                      "key": "7kajd8xe",
                      "model": "link_shipping_address",
                      "rules": []
                    }
                  ],
                  "key": "jkswos3i",
                  "rules": []
                }
              ],
              "options": {
                "gutter": 32,
                "justify": "start",
                "align": "top",
                "customClass": "",
                "hidden": true,
                "flex": true,
                "responsive": true,
                "remoteFunc": "func_z1qu8cb7",
                "remoteOption": "option_z1qu8cb7",
                "tableColumn": false,
                "subform": false
              },
              "novalid": {},
              "key": "z1qu8cb7",
              "model": "address_grid",
              "rules": []
            },
            {
              "name": "Goods Delivery Number",
              "type": "select",
              "mainIcon": "下拉单选",
              "typeIcon": "下拉单选",
              "icon": "icon-select",
              "group": "Select",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-select",
              "options": {
                "defaultValue": "",
                "multiple": true,
                "disabled": false,
                "clearable": true,
                "placeholder": "",
                "required": true,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "width": "",
                "options": [
                  {
                    "value": "Option 1",
                    "label": "Option 1"
                  },
                  {
                    "value": "Option 2",
                    "label": "Option 2"
                  },
                  {
                    "value": "Option 3",
                    "label": "Option 3"
                  }
                ],
                "remote": true,
                "remoteType": "innerdatasource",
                "remoteOption": "option_6h52djbi",
                "filterable": true,
                "pagingEnabled": true,
                "remoteOptions": [],
                "props": {
                  "value": "id",
                  "label": "delivery_no",
                  "cascade": "",
                  "children": "",
                  "image": "",
                  "icon": ""
                },
                "remoteFunc": "func_6h52djbi",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "customProps": {},
                "tip": "",
                "tableColumn": false,
                "subform": false,
                "paging_enabled": 1,
                "paging_way": "Pagination",
                "page_size": 10,
                "more_fields": [],
                "datasource": {
                  "source": "Goods Delivery:Table:1902054888473481218",
                  "rules": {
                    "collectionId": "1902054888473481218",
                    "list": [
                      {
                        "id": 1746497638584,
                        "parentId": 1746497638585,
                        "isTop": true,
                        "type": "branch",
                        "operator": "all",
                        "prop": "",
                        "valueType": "",
                        "value": "",
                        "level": 1,
                        "children": [
                          {
                            "id": 1723795236686,
                            "parentId": 1746497638584,
                            "isTop": false,
                            "prop": "so_id",
                            "operator": "numberEqual",
                            "valueType": "field",
                            "value": "{{value:so_id}}",
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "SO Number",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "字段"
                          },
                          {
                            "id": 1746497638589,
                            "isTop": false,
                            "parentId": 1746497638584,
                            "type": "branch",
                            "operator": "any",
                            "level": 2,
                            "children": [
                              {
                                "id": 1746497638586,
                                "parentId": 1746497638589,
                                "isTop": false,
                                "prop": "plant_id",
                                "operator": "equal",
                                "valueType": "field",
                                "value": "{{system:deptIds}}",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "Plant",
                                "valueLabel": "",
                                "operatorLabel": "等于",
                                "valueTypeLabel": "字段"
                              },
                              {
                                "id": 1746497638591,
                                "isTop": false,
                                "parentId": 1746497638589,
                                "type": "branch",
                                "operator": "all",
                                "level": 3,
                                "children": [
                                  {
                                    "id": 1746497638590,
                                    "parentId": 1746497638591,
                                    "isTop": false,
                                    "prop": "organization_id",
                                    "operator": "equal",
                                    "valueType": "field",
                                    "value": "{{system:deptIds}}",
                                    "type": "leaf",
                                    "level": 4,
                                    "propLabel": "Organization",
                                    "valueLabel": "",
                                    "operatorLabel": "等于",
                                    "valueTypeLabel": "字段"
                                  },
                                  {
                                    "id": 1746497638592,
                                    "parentId": 1746497638591,
                                    "isTop": false,
                                    "prop": "plant_id",
                                    "operator": "containsAny",
                                    "valueType": "formula",
                                    "value": "{{global:deptIdList}}.split(',')",
                                    "type": "leaf",
                                    "level": 4,
                                    "propLabel": "Plant",
                                    "valueLabel": "",
                                    "operatorLabel": "包含任一",
                                    "valueTypeLabel": "公式"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "id": 1746497638588,
                            "parentId": 1746497638584,
                            "isTop": false,
                            "prop": "gd_status",
                            "operator": "equal",
                            "valueType": "value",
                            "value": "Completed",
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "GD Status",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "值"
                          },
                          {
                            "id": 1746497638593,
                            "isTop": false,
                            "parentId": 1746497638584,
                            "type": "branch",
                            "operator": "any",
                            "level": 2,
                            "children": [
                              {
                                "id": 1746497638587,
                                "parentId": 1746497638593,
                                "isTop": false,
                                "prop": "si_status",
                                "operator": "notEqual",
                                "valueType": "value",
                                "value": "Fully Invoiced",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "SI Status",
                                "valueLabel": "",
                                "operatorLabel": "不等于",
                                "valueTypeLabel": "值"
                              },
                              {
                                "id": 1746497638594,
                                "parentId": 1746497638593,
                                "isTop": false,
                                "prop": "si_status",
                                "operator": "isNull",
                                "valueType": "value",
                                "value": null,
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "SI Status",
                                "valueLabel": "",
                                "operatorLabel": "没有值",
                                "valueTypeLabel": "值"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                "url_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "body_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "request_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "dynamicValueType": "fx",
                "isDynamicValue": false
              },
              "events": {
                "onChange": "z5jh2lwo",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "6h52djbi",
              "model": "goods_delivery_number",
              "rules": [
                {
                  "required": true,
                  "message": ""
                }
              ]
            },
            {
              "name": "Goods Delivery Number",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_y52tqzgh",
                "remoteOption": "option_y52tqzgh",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "u5nvdjew",
              "model": "gd_no_display",
              "rules": []
            },
            {
              "name": " Sales Invoice Number ",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": true,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": true,
                "validator": "const page_status = this.getParamsVariables('page_status');\n\nif (page_status === 'View' || !value) {\n    callback();\n    return;\n}\n\ndb.collection(\"sales_invoice\")\n    .where({ sales_invoice_no: value })\n    .get()\n    .then(response => {\n        const matchingSalesInvoice = response.data || [];\n\n        if (matchingSalesInvoice.length === 0) {\n            callback();\n            return;\n        }\n\n        if (page_status === 'Edit') {\n            const currentSalesInvoiceNo = this.getParamsVariables('sales_invoice_no');\n            const isSameSalesInvoice = matchingSalesInvoice.some(sales_invoice_no => sales_invoice_no.id === currentSalesInvoiceNo);\n            callback(isSameSalesInvoice ? undefined : 'Sales invoice number already exists.');\n        } else {\n            callback('Sales invoice number already exists.');\n        }\n    })\n    .catch(error => {\n        console.error(\"Error checking sales invoice:\", error);\n        callback(\"Error validating sales invoice number.\");\n    });\n",
                "placeholder": "",
                "customClass": "",
                "disabled": true,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_y52tqzgh",
                "remoteOption": "option_y52tqzgh",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "y52tqzgh",
              "model": "sales_invoice_no",
              "rules": [
                {
                  "required": true,
                  "message": ""
                },
                {
                  "func": "const page_status = this.getParamsVariables('page_status');\n\nif (page_status === 'View' || !value) {\n    callback();\n    return;\n}\n\ndb.collection(\"sales_invoice\")\n    .where({ sales_invoice_no: value })\n    .get()\n    .then(response => {\n        const matchingSalesInvoice = response.data || [];\n\n        if (matchingSalesInvoice.length === 0) {\n            callback();\n            return;\n        }\n\n        if (page_status === 'Edit') {\n            const currentSalesInvoiceNo = this.getParamsVariables('sales_invoice_no');\n            const isSameSalesInvoice = matchingSalesInvoice.some(sales_invoice_no => sales_invoice_no.id === currentSalesInvoiceNo);\n            callback(isSameSalesInvoice ? undefined : 'Sales invoice number already exists.');\n        } else {\n            callback('Sales invoice number already exists.');\n        }\n    })\n    .catch(error => {\n        console.error(\"Error checking sales invoice:\", error);\n        callback(\"Error validating sales invoice number.\");\n    });\n"
                }
              ]
            },
            {
              "name": "Sales Invoice Date",
              "type": "date",
              "mainIcon": "日期",
              "typeIcon": "日期",
              "icon": "icon-date",
              "group": "DateTime",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "options": {
                "defaultValue": "",
                "readonly": false,
                "disabled": false,
                "editable": false,
                "clearable": true,
                "placeholder": "",
                "startPlaceholder": "",
                "endPlaceholder": "",
                "type": "timestamp",
                "timeStampType": "timestamp",
                "format": "YYYY-MM-DD",
                "timestamp": false,
                "required": true,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "width": "100%",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_fn344dup",
                "remoteOption": "option_fn344dup",
                "tableColumn": false,
                "subform": false,
                "dynamicValueFx": "{{system:now}}",
                "dynamicValueType": "fx",
                "isDynamicValue": true
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "fn344dup",
              "model": "sales_invoice_date",
              "rules": [
                {
                  "required": true,
                  "message": ""
                }
              ]
            },
            {
              "name": "Agent",
              "type": "select",
              "mainIcon": "下拉单选",
              "typeIcon": "下拉单选",
              "icon": "icon-select",
              "group": "Select",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-select",
              "options": {
                "defaultValue": "",
                "multiple": false,
                "disabled": false,
                "clearable": true,
                "placeholder": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "width": "",
                "options": [
                  {
                    "value": "Option 1",
                    "label": "Option 1"
                  },
                  {
                    "value": "Option 2",
                    "label": "Option 2"
                  },
                  {
                    "value": "Option 3",
                    "label": "Option 3"
                  }
                ],
                "remote": true,
                "remoteType": "innerdatasource",
                "remoteOption": "option_6h52djbi",
                "filterable": true,
                "pagingEnabled": true,
                "remoteOptions": [],
                "props": {
                  "value": "id",
                  "label": "agent_name",
                  "cascade": "",
                  "children": "",
                  "image": "",
                  "icon": ""
                },
                "remoteFunc": "func_6h52djbi",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "customProps": {},
                "tip": "",
                "tableColumn": false,
                "subform": false,
                "paging_enabled": 1,
                "paging_way": "Pagination",
                "page_size": 10,
                "more_fields": [],
                "datasource": {
                  "source": "Agent:Table:1901976872514867202",
                  "rules": {
                    "collectionId": "1901976872514867202",
                    "list": [
                      {
                        "id": 1746497857744,
                        "parentId": 1746497857745,
                        "isTop": true,
                        "type": "branch",
                        "operator": "any",
                        "prop": "",
                        "valueType": "",
                        "value": "",
                        "level": 1,
                        "children": [
                          {
                            "id": 1746497823831,
                            "parentId": 1746497857744,
                            "isTop": false,
                            "prop": "organization_id",
                            "operator": "equal",
                            "valueType": "field",
                            "value": "{{system:deptIds}}",
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "Organization",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "字段"
                          },
                          {
                            "id": 1746497857746,
                            "parentId": 1746497857744,
                            "isTop": false,
                            "prop": "organization_id",
                            "operator": "equal",
                            "valueType": "field",
                            "value": "{{global:deptParentId}}",
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "Organization",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "值"
                          }
                        ]
                      }
                    ]
                  }
                },
                "url_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "body_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "request_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "dynamicValueType": "fx",
                "isDynamicValue": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "3syhx3ia",
              "model": "sales_person_id",
              "rules": []
            },
            {
              "name": "Payment Term",
              "type": "select",
              "mainIcon": "下拉单选",
              "typeIcon": "下拉单选",
              "icon": "icon-select",
              "group": "Select",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-select",
              "options": {
                "defaultValue": "",
                "multiple": false,
                "disabled": false,
                "clearable": true,
                "placeholder": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "width": "",
                "options": [
                  {
                    "value": "Option 1",
                    "label": "Option 1"
                  },
                  {
                    "value": "Option 2",
                    "label": "Option 2"
                  },
                  {
                    "value": "Option 3",
                    "label": "Option 3"
                  }
                ],
                "remote": true,
                "remoteType": "innerdatasource",
                "remoteOption": "option_6h52djbi",
                "filterable": true,
                "pagingEnabled": true,
                "remoteOptions": [],
                "props": {
                  "value": "id",
                  "label": "term_name",
                  "cascade": "",
                  "children": "",
                  "image": "",
                  "icon": ""
                },
                "remoteFunc": "func_6h52djbi",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "customProps": {},
                "tip": "",
                "tableColumn": false,
                "subform": false,
                "paging_enabled": 1,
                "paging_way": "Pagination",
                "page_size": 10,
                "more_fields": [],
                "datasource": {
                  "source": "Payment Terms:Table:1901977384932986882",
                  "rules": {
                    "collectionId": "1901977384932986882",
                    "list": [
                      {
                        "id": 1746497910750,
                        "parentId": 1746497910751,
                        "isTop": true,
                        "type": "branch",
                        "operator": "any",
                        "prop": "",
                        "valueType": "",
                        "value": "",
                        "level": 1,
                        "children": [
                          {
                            "id": 1746497905517,
                            "parentId": 1746497910750,
                            "isTop": false,
                            "prop": "organization_id",
                            "operator": "equal",
                            "valueType": "field",
                            "value": "{{system:deptIds}}",
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "Organization",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "字段"
                          },
                          {
                            "id": 1746497910752,
                            "parentId": 1746497910750,
                            "isTop": false,
                            "prop": "organization_id",
                            "operator": "equal",
                            "valueType": "field",
                            "value": "{{global:deptParentId}}",
                            "type": "leaf",
                            "level": 2,
                            "propLabel": "Organization",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "值"
                          }
                        ]
                      }
                    ]
                  }
                },
                "url_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "body_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "request_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "dynamicValueType": "fx",
                "isDynamicValue": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "dpg7b18l",
              "model": "si_payment_term_id",
              "rules": []
            },
            {
              "name": "自动布局",
              "type": "flex",
              "el": "su-fm-flex",
              "mainIcon": "自动布局",
              "typeIcon": "自动布局",
              "icon": "icon-zhediemianban",
              "group": "Design",
              "groupSort": 6,
              "enableScopes": ["Component", "Table", "Page"],
              "options": {
                "title": "布局",
                "customClass": "",
                "hidden": false,
                "recursive": false,
                "recursiveStyleFx": "",
                "slotTarget": "",
                "defaultValue": "",
                "flexDirection": "row",
                "flexWrap": "nowrap",
                "alignItems": "",
                "justifyContent": "",
                "hGap": "",
                "vGap": "",
                "grid": {
                  "row": {
                    "value": "",
                    "visible": true
                  },
                  "col": {
                    "value": "",
                    "visible": true
                  },
                  "use": false
                },
                "padding": ["", "", "", ""],
                "margin": ["", "", "", ""],
                "boxSizing": "border-box",
                "width": "",
                "height": "",
                "radius": ["", "", "", ""],
                "position": "",
                "positions": ["", "", "", ""],
                "zIndex": "",
                "flex": "",
                "flexGrow": "",
                "flexShrink": "",
                "fills": [],
                "borders": [],
                "effects": [],
                "states": [],
                "hoverClass": "",
                "overflow": "",
                "styleFx": "",
                "behave": "",
                "remoteFunc": "func_t79uswyb",
                "remoteOption": "option_t79uswyb",
                "tableColumn": false,
                "subform": false,
                "props": {},
                "datasource": {
                  "source": null,
                  "rules": {
                    "collectionId": "",
                    "list": [
                      {
                        "id": 1723795236686,
                        "parentId": 1723795236685,
                        "isTop": true,
                        "prop": "",
                        "operator": "",
                        "valueType": "",
                        "value": "",
                        "type": "leaf",
                        "level": 1
                      }
                    ]
                  }
                },
                "remote": false,
                "remoteType": "datasource",
                "url_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "body_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "paging_enabled": 0,
                "paging_way": "Pagination",
                "page_size": 10,
                "more_fields": [],
                "request_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                }
              },
              "list": [
                {
                  "name": "Exchange Rate",
                  "type": "input",
                  "mainIcon": "单行文本",
                  "typeIcon": "多行文本",
                  "icon": "icon-input",
                  "group": "Text",
                  "groupSort": 1,
                  "enableScopes": ["Component", "Table", "Page"],
                  "el": "fm-input",
                  "options": {
                    "width": "",
                    "defaultValue": "",
                    "required": false,
                    "requiredMessage": "",
                    "dataType": "",
                    "dataTypeCheck": false,
                    "dataTypeMessage": "",
                    "pattern": "",
                    "patternCheck": false,
                    "patternMessage": "",
                    "validatorCheck": false,
                    "validator": "",
                    "placeholder": "",
                    "customClass": "",
                    "disabled": true,
                    "labelWidth": 100,
                    "isLabelWidth": false,
                    "hidden": false,
                    "dataBind": true,
                    "showPassword": false,
                    "clearable": false,
                    "maxlength": "",
                    "showWordLimit": false,
                    "customProps": {},
                    "tip": "",
                    "remoteFunc": "func_rkxzbhen",
                    "remoteOption": "option_rkxzbhen",
                    "tableColumn": false,
                    "subform": false
                  },
                  "events": {
                    "onChange": "",
                    "onFocus": "",
                    "onBlur": ""
                  },
                  "key": "rkxzbhen",
                  "model": "exchange_rate_currency",
                  "rules": []
                },
                {
                  "name": "Exchange Rate",
                  "type": "number",
                  "icon": "icon-number",
                  "mainIcon": "数字",
                  "typeIcon": "数字",
                  "group": "Number",
                  "groupSort": 2,
                  "enableScopes": ["Component", "Table", "Page"],
                  "el": "fm-number",
                  "options": {
                    "width": "",
                    "required": false,
                    "requiredMessage": "",
                    "validatorCheck": false,
                    "validator": "",
                    "defaultValue": 0,
                    "min": 0,
                    "step": 1,
                    "disabled": false,
                    "controls": false,
                    "controlsPosition": "",
                    "customClass": "",
                    "labelWidth": 100,
                    "isLabelWidth": false,
                    "hidden": false,
                    "dataBind": true,
                    "precision": 4,
                    "customProps": {
                      "progressColor": "",
                      "dividingNumber": "",
                      "showNumber": "",
                      "viewMode": "",
                      "format": "rmb",
                      "cacheProp": true
                    },
                    "tip": "",
                    "remoteFunc": "func_a3fyr9eb",
                    "remoteOption": "option_a3fyr9eb",
                    "tableColumn": false,
                    "subform": false,
                    "hideLabel": true
                  },
                  "events": {
                    "onChange": "bkz5djda",
                    "onFocus": "",
                    "onBlur": ""
                  },
                  "key": "a3fyr9eb",
                  "model": "exchange_rate",
                  "rules": []
                },
                {
                  "name": "Exchange Rate MYR",
                  "type": "input",
                  "mainIcon": "单行文本",
                  "typeIcon": "多行文本",
                  "icon": "icon-input",
                  "group": "Text",
                  "groupSort": 1,
                  "enableScopes": ["Component", "Table", "Page"],
                  "el": "fm-input",
                  "options": {
                    "width": "",
                    "defaultValue": "MYR",
                    "required": false,
                    "requiredMessage": "",
                    "dataType": "",
                    "dataTypeCheck": false,
                    "dataTypeMessage": "",
                    "pattern": "",
                    "patternCheck": false,
                    "patternMessage": "",
                    "validatorCheck": false,
                    "validator": "",
                    "placeholder": "",
                    "customClass": "",
                    "disabled": true,
                    "labelWidth": 100,
                    "isLabelWidth": false,
                    "hidden": false,
                    "dataBind": true,
                    "showPassword": false,
                    "clearable": false,
                    "maxlength": "",
                    "showWordLimit": false,
                    "customProps": {},
                    "tip": "",
                    "remoteFunc": "func_fzq4jpxk",
                    "remoteOption": "option_fzq4jpxk",
                    "tableColumn": false,
                    "subform": false,
                    "hideLabel": true
                  },
                  "events": {
                    "onChange": "",
                    "onFocus": "",
                    "onBlur": ""
                  },
                  "key": "fzq4jpxk",
                  "model": "exchange_rate_myr",
                  "rules": []
                }
              ],
              "events": {
                "onClick": ""
              },
              "novalid": {},
              "key": "t79uswyb",
              "model": "flex_t79uswyb",
              "rules": []
            },
            {
              "name": "Description",
              "type": "textarea",
              "mainIcon": "多行文本",
              "typeIcon": "多行文本(1)",
              "icon": "icon-diy-com-textarea",
              "group": "Text",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "options": {
                "width": "",
                "defaultValue": "",
                "required": true,
                "requiredMessage": "",
                "disabled": false,
                "pattern": "",
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "rows": 2,
                "autosize": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_8v68r87c",
                "remoteOption": "option_8v68r87c",
                "tableColumn": false,
                "subform": false,
                "dynamicValueType": "fx",
                "isDynamicValue": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "8v68r87c",
              "model": "si_description",
              "rules": [
                {
                  "required": true,
                  "message": ""
                }
              ]
            },
            {
              "name": "Posted Date",
              "type": "date",
              "mainIcon": "日期",
              "typeIcon": "日期",
              "icon": "icon-date",
              "group": "DateTime",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "options": {
                "defaultValue": "",
                "readonly": false,
                "disabled": false,
                "editable": false,
                "clearable": true,
                "placeholder": "",
                "startPlaceholder": "",
                "endPlaceholder": "",
                "type": "timestamp",
                "timeStampType": "timestamp",
                "format": "YYYY-MM-DD HH:mm:ss",
                "timestamp": false,
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "width": "",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_hl0o10q8",
                "remoteOption": "option_hl0o10q8",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "hl0o10q8",
              "model": "posted_date",
              "rules": []
            },
            {
              "name": "Posted Status",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_sgwzk8db",
                "remoteOption": "option_sgwzk8db",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "sgwzk8db",
              "model": "posted_status",
              "rules": []
            },
            {
              "name": "Plant",
              "type": "treeselect",
              "mainIcon": "下拉树状单选",
              "typeIcon": "下拉树状单选",
              "icon": "icon-shuxuanzeqi",
              "group": "Select",
              "groupSort": 4,
              "enableScopes": ["Component", "Table", "Page"],
              "options": {
                "defaultValue": "",
                "width": "",
                "placeholder": "",
                "disabled": false,
                "clearable": false,
                "options": [
                  {
                    "value": "Option 1",
                    "label": "Option 1",
                    "children": [
                      {
                        "value": "Option 1 - children",
                        "label": "Option 1 - children"
                      }
                    ]
                  },
                  {
                    "value": "Option 2",
                    "label": "Option 2",
                    "children": [
                      {
                        "value": "Option 2 - children",
                        "label": "Option 2 - children"
                      }
                    ]
                  },
                  {
                    "value": "Option 3",
                    "label": "Option 3"
                  }
                ],
                "remote": true,
                "remoteType": "innerdatasource",
                "remoteOption": "option_ggoqc1vt",
                "remoteOptions": [],
                "props": {
                  "value": "id",
                  "label": "dept_name",
                  "children": "children",
                  "cascade": "",
                  "image": "",
                  "icon": ""
                },
                "remoteFunc": "func_ggoqc1vt",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "required": false,
                "validatorCheck": false,
                "validator": "",
                "multiple": false,
                "filterable": true,
                "checkStrictly": true,
                "customProps": {},
                "tip": "",
                "tableColumn": false,
                "subform": false,
                "paging_enabled": 0,
                "paging_way": "Pagination",
                "page_size": 10,
                "more_fields": [],
                "datasource": {
                  "source": "组织机构(勿删勿改):Table:1789995126399348747",
                  "rules": {
                    "collectionId": "1789995126399348747",
                    "list": [
                      {
                        "id": 1747541362107,
                        "parentId": 1747541362108,
                        "isTop": true,
                        "type": "branch",
                        "operator": "any",
                        "prop": "",
                        "valueType": "",
                        "value": "",
                        "level": 1,
                        "children": [
                          {
                            "id": 1747541362110,
                            "isTop": false,
                            "parentId": 1747541362107,
                            "type": "branch",
                            "operator": "all",
                            "level": 2,
                            "children": [
                              {
                                "id": 1723795236686,
                                "parentId": 1747541362110,
                                "isTop": false,
                                "prop": "id",
                                "operator": "numberEqual",
                                "valueType": "field",
                                "value": "{{system:deptIds}}",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "主键ID",
                                "valueLabel": "",
                                "operatorLabel": "等于",
                                "valueTypeLabel": "值"
                              },
                              {
                                "id": 1747541362111,
                                "parentId": 1747541362110,
                                "isTop": false,
                                "prop": "parent_id",
                                "operator": "numberEqual",
                                "valueType": "field",
                                "value": "{{global:deptParentId}}",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "父主键",
                                "valueLabel": "",
                                "operatorLabel": "等于",
                                "valueTypeLabel": "值"
                              }
                            ]
                          },
                          {
                            "id": 1747541362112,
                            "isTop": false,
                            "parentId": 1747541362107,
                            "type": "branch",
                            "operator": "all",
                            "level": 2,
                            "children": [
                              {
                                "id": 1747541362109,
                                "parentId": 1747541362112,
                                "isTop": false,
                                "prop": "id",
                                "operator": "in",
                                "valueType": "formula",
                                "value": "{{global:deptIdList}}.split(',')",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "主键ID",
                                "valueLabel": "",
                                "operatorLabel": "等于任意一个",
                                "valueTypeLabel": "值"
                              },
                              {
                                "id": 1747541362113,
                                "parentId": 1747541362112,
                                "isTop": false,
                                "prop": "parent_id",
                                "operator": "numberEqual",
                                "valueType": "field",
                                "value": "{{system:deptIds}}",
                                "type": "leaf",
                                "level": 3,
                                "propLabel": "父主键",
                                "valueLabel": "",
                                "operatorLabel": "等于",
                                "valueTypeLabel": "值"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                "url_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "body_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                },
                "request_params": {
                  "list": [
                    {
                      "prop": "",
                      "propLabel": "",
                      "operator": "",
                      "operatorLabel": "",
                      "valueType": "value",
                      "valueTypeLabel": "",
                      "value": null,
                      "valueLabel": ""
                    }
                  ]
                }
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "ggoqc1vt",
              "model": "plant_id",
              "rules": []
            },
            {
              "name": "Organization",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_vp0yze8h",
                "remoteOption": "option_vp0yze8h",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "ho5zz7so",
              "model": "organization_id",
              "rules": []
            },
            {
              "name": "SO Doc Ref",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_vp0yze8h",
                "remoteOption": "option_vp0yze8h",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "aw8w31q8",
              "model": "so_docref",
              "rules": []
            }
          ],
          "key": "7lnmx9zd",
          "rules": []
        },
        {
          "type": "col",
          "options": {
            "span": 12,
            "offset": 0,
            "push": 0,
            "pull": 0,
            "xs": 24,
            "sm": 12,
            "md": 12,
            "lg": 12,
            "xl": 12,
            "customClass": ""
          },
          "list": [
            {
              "name": "Reference Documents",
              "type": "fileupload",
              "mainIcon": "文件上传",
              "typeIcon": "文件上传",
              "icon": "icon-wenjianshangchuan",
              "group": "Special",
              "groupSort": 0,
              "enableScopes": ["Component", "Table", "Page"],
              "options": {
                "defaultValue": [],
                "width": "",
                "tokenFunc": "funcGetToken",
                "token": "",
                "tokenType": "datasource",
                "disabled": false,
                "tip": "",
                "action": "/api/blade-resource/oss/endpoint/put-file",
                "customClass": "",
                "limit": 9,
                "multiple": false,
                "isQiniu": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "headers": [],
                "required": false,
                "validatorCheck": false,
                "validator": "",
                "withCredentials": false,
                "remoteFunc": "func_hmtcurne",
                "remoteOption": "option_hmtcurne",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onSelect": "",
                "onUploadSuccess": "",
                "onUploadError": "",
                "onRemove": ""
              },
              "novalid": {},
              "key": "hmtcurne",
              "model": "fileupload_hmtcurne",
              "rules": []
            }
          ],
          "key": "2fbjn8le"
        }
      ],
      "options": {
        "gutter": 32,
        "justify": "start",
        "align": "top",
        "customClass": "",
        "hidden": false,
        "flex": true,
        "responsive": true,
        "remoteFunc": "func_j0xfbwyc",
        "remoteOption": "option_j0xfbwyc",
        "tableColumn": false,
        "subform": false,
        "dynamicValueType": "fx",
        "isDynamicValue": false
      },
      "key": "j0xfbwyc",
      "model": "grid_j0xfbwyc",
      "rules": []
    },
    {
      "name": "SI Item",
      "type": "table",
      "mainIcon": "子表单",
      "typeIcon": "子表单",
      "icon": "icon-table",
      "group": "Container",
      "groupSort": 0,
      "enableScopes": ["Component", "Table", "Page"],
      "options": {
        "defaultValue": [],
        "customClass": "",
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": false,
        "dataBind": true,
        "disabled": false,
        "required": false,
        "validatorCheck": false,
        "validator": "",
        "paging": false,
        "pageSize": 5,
        "isAdd": true,
        "isDelete": true,
        "showControl": true,
        "virtualTable": true,
        "sortable": true,
        "tip": "",
        "remoteFunc": "func_zt0c3x55",
        "remoteOption": "option_zt0c3x55",
        "tableColumn": false,
        "subform": false,
        "hideLabel": true
      },
      "events": {
        "onChange": "",
        "onRowAdd": "",
        "onRowRemove": "",
        "onPageChange": ""
      },
      "tableColumns": [
        {
          "name": "SO Number",
          "type": "input",
          "mainIcon": "单行文本",
          "typeIcon": "多行文本",
          "icon": "icon-input",
          "group": "Text",
          "groupSort": 1,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-input",
          "options": {
            "width": "",
            "defaultValue": "",
            "required": false,
            "requiredMessage": "",
            "dataType": "",
            "dataTypeCheck": false,
            "dataTypeMessage": "",
            "pattern": "",
            "patternCheck": false,
            "patternMessage": "",
            "validatorCheck": false,
            "validator": "",
            "placeholder": "",
            "customClass": "",
            "disabled": true,
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "showPassword": false,
            "clearable": false,
            "maxlength": "",
            "showWordLimit": false,
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_j355x7lg",
            "remoteOption": "option_j355x7lg",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "j355x7lg",
          "model": "line_so_no",
          "rules": []
        },
        {
          "name": "Product",
          "type": "select",
          "mainIcon": "下拉单选",
          "typeIcon": "下拉单选",
          "icon": "icon-select",
          "group": "Select",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-select",
          "options": {
            "defaultValue": "",
            "multiple": false,
            "disabled": true,
            "clearable": true,
            "placeholder": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "width": "",
            "options": [
              {
                "value": "Option 1",
                "label": "Option 1"
              },
              {
                "value": "Option 2",
                "label": "Option 2"
              },
              {
                "value": "Option 3",
                "label": "Option 3"
              }
            ],
            "remote": true,
            "remoteType": "innerdatasource",
            "remoteOption": "option_4dgo4pr9",
            "filterable": true,
            "pagingEnabled": true,
            "remoteOptions": [],
            "props": {
              "value": "id",
              "label": "material_code",
              "cascade": "",
              "children": "",
              "image": "",
              "icon": ""
            },
            "remoteFunc": "func_4dgo4pr9",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "customProps": {},
            "tip": "",
            "tableColumn": true,
            "subform": false,
            "paging_enabled": 1,
            "paging_way": "Pagination",
            "page_size": 10,
            "more_fields": [],
            "datasource": {
              "source": "Item:Table:1901546842240438273",
              "rules": {
                "collectionId": "1901546842240438273",
                "list": [
                  {
                    "id": 1723795236686,
                    "parentId": 1723795236685,
                    "isTop": true,
                    "prop": "",
                    "operator": "",
                    "valueType": "",
                    "value": "",
                    "type": "leaf",
                    "level": 1
                  }
                ]
              }
            },
            "url_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "body_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "request_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            }
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "4dgo4pr9",
          "model": "material_id",
          "rules": []
        },
        {
          "name": "Product Detail",
          "type": "textarea",
          "mainIcon": "多行文本",
          "typeIcon": "多行文本(1)",
          "icon": "icon-diy-com-textarea",
          "group": "Text",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "width": "",
            "defaultValue": "",
            "required": false,
            "requiredMessage": "",
            "disabled": true,
            "pattern": "",
            "patternMessage": "",
            "validatorCheck": false,
            "validator": "",
            "placeholder": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "clearable": false,
            "maxlength": "",
            "showWordLimit": false,
            "rows": 1,
            "autosize": true,
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_y8khzh5o",
            "remoteOption": "option_y8khzh5o",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "y8khzh5o",
          "model": "material_desc",
          "rules": []
        },
        {
          "name": "Order Qty",
          "type": "number",
          "icon": "icon-number",
          "mainIcon": "金额",
          "typeIcon": "金额",
          "group": "Number",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-number-rmb",
          "options": {
            "width": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "defaultValue": 0,
            "min": 0,
            "max": 9999999,
            "step": 1,
            "disabled": true,
            "controls": false,
            "controlsPosition": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "precision": 3,
            "customProps": {
              "progressColor": "",
              "dividingNumber": "",
              "showNumber": "",
              "viewMode": "",
              "format": "rmb",
              "cacheProp": true
            },
            "tip": "",
            "remoteFunc": "func_nz5fjl68",
            "remoteOption": "option_nz5fjl68",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "nz5fjl68",
          "model": "so_order_quantity",
          "rules": []
        },
        {
          "name": "Order Qty (UOM)",
          "type": "select",
          "mainIcon": "下拉单选",
          "typeIcon": "下拉单选",
          "icon": "icon-select",
          "group": "Select",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-select",
          "options": {
            "defaultValue": "",
            "multiple": false,
            "disabled": true,
            "clearable": true,
            "placeholder": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "width": "",
            "options": [
              {
                "value": "Option 1",
                "label": "Option 1"
              },
              {
                "value": "Option 2",
                "label": "Option 2"
              },
              {
                "value": "Option 3",
                "label": "Option 3"
              }
            ],
            "remote": true,
            "remoteType": "innerdatasource",
            "remoteOption": "option_4dgo4pr9",
            "filterable": true,
            "pagingEnabled": true,
            "remoteOptions": [],
            "props": {
              "value": "id",
              "label": "uom_name",
              "cascade": "",
              "children": "",
              "image": "",
              "icon": ""
            },
            "remoteFunc": "func_4dgo4pr9",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "customProps": {},
            "tip": "",
            "tableColumn": true,
            "subform": false,
            "paging_enabled": 1,
            "paging_way": "Pagination",
            "page_size": 10,
            "more_fields": [],
            "datasource": {
              "source": "UOM:Table:1901805375573839874",
              "rules": {
                "collectionId": "1901805375573839874",
                "list": [
                  {
                    "id": 1746498038787,
                    "parentId": 1746498038786,
                    "isTop": true,
                    "prop": "",
                    "operator": "",
                    "valueType": "",
                    "value": "",
                    "type": "leaf",
                    "level": 1
                  }
                ]
              }
            },
            "url_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "body_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "request_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            }
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "ygs2seil",
          "model": "so_order_uom_id",
          "rules": []
        },
        {
          "name": "Delivery Qty",
          "type": "number",
          "icon": "icon-number",
          "mainIcon": "金额",
          "typeIcon": "金额",
          "group": "Number",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-number-rmb",
          "options": {
            "width": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "defaultValue": 0,
            "min": 0,
            "max": 9999999,
            "step": 1,
            "disabled": true,
            "controls": false,
            "controlsPosition": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "precision": 3,
            "customProps": {
              "progressColor": "",
              "dividingNumber": "",
              "showNumber": "",
              "viewMode": "",
              "format": "rmb",
              "cacheProp": true
            },
            "tip": "",
            "remoteFunc": "func_nz5fjl68",
            "remoteOption": "option_nz5fjl68",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "spclnkwf",
          "model": "good_delivery_quantity",
          "rules": []
        },
        {
          "name": "Invoice Qty",
          "type": "number",
          "icon": "icon-number",
          "mainIcon": "金额",
          "typeIcon": "金额",
          "group": "Number",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-number-rmb",
          "options": {
            "width": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "defaultValue": 0,
            "min": 0,
            "max": 9999999,
            "step": 1,
            "disabled": true,
            "controls": false,
            "controlsPosition": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "precision": 3,
            "customProps": {
              "progressColor": "",
              "dividingNumber": "",
              "showNumber": "",
              "viewMode": "",
              "format": "rmb",
              "cacheProp": true
            },
            "tip": "",
            "remoteFunc": "func_nz5fjl68",
            "remoteOption": "option_nz5fjl68",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "e063qm85",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "sgwg51ab",
          "model": "invoice_qty",
          "rules": []
        },
        {
          "name": "Invoice Qty (UOM)",
          "type": "select",
          "mainIcon": "下拉单选",
          "typeIcon": "下拉单选",
          "icon": "icon-select",
          "group": "Select",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-select",
          "options": {
            "defaultValue": "",
            "multiple": false,
            "disabled": true,
            "clearable": true,
            "placeholder": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "width": "",
            "options": [
              {
                "value": "Option 1",
                "label": "Option 1"
              },
              {
                "value": "Option 2",
                "label": "Option 2"
              },
              {
                "value": "Option 3",
                "label": "Option 3"
              }
            ],
            "remote": true,
            "remoteType": "innerdatasource",
            "remoteOption": "option_4dgo4pr9",
            "filterable": true,
            "pagingEnabled": true,
            "remoteOptions": [],
            "props": {
              "value": "id",
              "label": "uom_name",
              "cascade": "",
              "children": "",
              "image": "",
              "icon": ""
            },
            "remoteFunc": "func_4dgo4pr9",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "customProps": {},
            "tip": "",
            "tableColumn": true,
            "subform": false,
            "paging_enabled": 1,
            "paging_way": "Pagination",
            "page_size": 10,
            "more_fields": [],
            "datasource": {
              "source": "UOM:Table:1901805375573839874",
              "rules": {
                "collectionId": "1901805375573839874",
                "list": [
                  {
                    "id": 1746498038787,
                    "parentId": 1746498038786,
                    "isTop": true,
                    "prop": "",
                    "operator": "",
                    "valueType": "",
                    "value": "",
                    "type": "leaf",
                    "level": 1
                  }
                ]
              }
            },
            "url_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "body_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "request_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            }
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "jjgwth3l",
          "model": "invoice_qty_uom_id",
          "rules": []
        },
        {
          "name": "Unit Price",
          "type": "number",
          "icon": "icon-number",
          "mainIcon": "金额",
          "typeIcon": "金额",
          "group": "Number",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-number-rmb",
          "options": {
            "width": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "defaultValue": 0,
            "min": 0,
            "max": 9999999,
            "step": 1,
            "disabled": true,
            "controls": false,
            "controlsPosition": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "precision": 2,
            "customProps": {
              "progressColor": "",
              "dividingNumber": "",
              "showNumber": "",
              "viewMode": "",
              "format": "rmb",
              "cacheProp": true
            },
            "tip": "",
            "remoteFunc": "func_qpmn2p88",
            "remoteOption": "option_qpmn2p88",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "e063qm85",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "qpmn2p88",
          "model": "unit_price",
          "rules": []
        },
        {
          "name": "Gross",
          "type": "number",
          "icon": "icon-number",
          "mainIcon": "金额",
          "typeIcon": "金额",
          "group": "Number",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-number-rmb",
          "options": {
            "width": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "defaultValue": 0,
            "min": 0,
            "max": 9999999,
            "step": 1,
            "disabled": true,
            "controls": false,
            "controlsPosition": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "precision": 2,
            "customProps": {
              "progressColor": "",
              "dividingNumber": "",
              "showNumber": "",
              "viewMode": "",
              "format": "rmb",
              "cacheProp": true
            },
            "tip": "",
            "remoteFunc": "func_qpmn2p88",
            "remoteOption": "option_qpmn2p88",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "10xubhvq",
          "model": "gross",
          "rules": []
        },
        {
          "name": "Discount",
          "type": "number",
          "icon": "icon-number",
          "mainIcon": "金额",
          "typeIcon": "金额",
          "group": "Number",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-number-rmb",
          "options": {
            "width": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "defaultValue": 0,
            "min": 0,
            "max": 9999999,
            "step": 1,
            "disabled": false,
            "controls": false,
            "controlsPosition": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "precision": 2,
            "customProps": {
              "progressColor": "",
              "dividingNumber": "",
              "showNumber": "",
              "viewMode": "",
              "format": "rmb",
              "cacheProp": true
            },
            "tip": "",
            "remoteFunc": "func_qpmn2p88",
            "remoteOption": "option_qpmn2p88",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "e063qm85",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "5dzgzr5r",
          "model": "si_discount",
          "rules": []
        },
        {
          "name": "Discount (Type)",
          "type": "select",
          "mainIcon": "下拉单选",
          "typeIcon": "下拉单选",
          "icon": "icon-select",
          "group": "Select",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-select",
          "options": {
            "defaultValue": "",
            "multiple": false,
            "disabled": false,
            "clearable": true,
            "placeholder": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "width": "",
            "options": [
              {
                "value": "%",
                "label": "%",
                "image": [],
                "icon": ""
              },
              {
                "value": "Amount",
                "label": "Amount",
                "image": [],
                "icon": ""
              }
            ],
            "remote": false,
            "remoteType": "datasource",
            "remoteOption": "option_eqqq1vgn",
            "filterable": true,
            "pagingEnabled": true,
            "remoteOptions": [],
            "props": {
              "value": "value",
              "label": "label"
            },
            "remoteFunc": "func_eqqq1vgn",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "customProps": {},
            "tip": "",
            "tableColumn": true,
            "subform": false,
            "paging_enabled": 0,
            "paging_way": "Pagination",
            "page_size": 10,
            "more_fields": [],
            "datasource": {
              "source": "static",
              "rules": {
                "collectionId": "",
                "list": [
                  {
                    "id": 1723795236686,
                    "parentId": 1723795236685,
                    "isTop": true,
                    "prop": "",
                    "operator": "",
                    "valueType": "",
                    "value": "",
                    "type": "leaf",
                    "level": 1
                  }
                ]
              }
            },
            "url_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "body_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "request_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            }
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "eqqq1vgn",
          "model": "si_discount_uom_id",
          "rules": []
        },
        {
          "name": "Discount Amount",
          "type": "number",
          "icon": "icon-number",
          "mainIcon": "金额",
          "typeIcon": "金额",
          "group": "Number",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-number-rmb",
          "options": {
            "width": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "defaultValue": 0,
            "min": 0,
            "max": 9999999,
            "step": 1,
            "disabled": true,
            "controls": false,
            "controlsPosition": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "precision": 2,
            "customProps": {
              "progressColor": "",
              "dividingNumber": "",
              "showNumber": "",
              "viewMode": "",
              "format": "rmb",
              "cacheProp": true
            },
            "tip": "",
            "remoteFunc": "func_qpmn2p88",
            "remoteOption": "option_qpmn2p88",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "dn4x23nm",
          "model": "discount_amount",
          "rules": []
        },
        {
          "name": "Tax Rate",
          "type": "select",
          "mainIcon": "下拉单选",
          "typeIcon": "下拉单选",
          "icon": "icon-select",
          "group": "Select",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-select",
          "options": {
            "defaultValue": "",
            "multiple": false,
            "disabled": false,
            "clearable": true,
            "placeholder": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "width": "",
            "options": [
              {
                "value": "%",
                "label": "%",
                "image": [],
                "icon": ""
              },
              {
                "value": "Amount",
                "label": "Amount",
                "image": [],
                "icon": ""
              }
            ],
            "remote": true,
            "remoteType": "innerdatasource",
            "remoteOption": "option_eqqq1vgn",
            "filterable": true,
            "pagingEnabled": true,
            "remoteOptions": [],
            "props": {
              "value": "id",
              "label": "tax_code",
              "cascade": "",
              "children": "",
              "image": "",
              "icon": ""
            },
            "remoteFunc": "func_eqqq1vgn",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "customProps": {},
            "tip": "",
            "tableColumn": true,
            "subform": false,
            "paging_enabled": 1,
            "paging_way": "Pagination",
            "page_size": 10,
            "more_fields": [],
            "datasource": {
              "source": "Tax Rate:Table:1901979496744079362",
              "rules": {
                "collectionId": "1901979496744079362",
                "list": [
                  {
                    "id": 1746498152610,
                    "parentId": 1746498152611,
                    "isTop": true,
                    "type": "branch",
                    "operator": "all",
                    "prop": "",
                    "valueType": "",
                    "value": "",
                    "level": 1,
                    "children": [
                      {
                        "id": 1746498152613,
                        "isTop": false,
                        "parentId": 1746498152610,
                        "type": "branch",
                        "operator": "any",
                        "level": 2,
                        "children": [
                          {
                            "id": 1723795236686,
                            "parentId": 1746498152613,
                            "isTop": false,
                            "prop": "tax_type",
                            "operator": "equal",
                            "valueType": "value",
                            "value": "Sales",
                            "type": "leaf",
                            "level": 3,
                            "propLabel": "Tax Type",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "值"
                          },
                          {
                            "id": 1746498152614,
                            "parentId": 1746498152613,
                            "isTop": false,
                            "prop": "tax_type",
                            "operator": "equal",
                            "valueType": "value",
                            "value": "Purchase & Sales",
                            "type": "leaf",
                            "level": 3,
                            "propLabel": "Tax Type",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "值"
                          }
                        ]
                      },
                      {
                        "id": 1746498152615,
                        "isTop": false,
                        "parentId": 1746498152610,
                        "type": "branch",
                        "operator": "any",
                        "level": 2,
                        "children": [
                          {
                            "id": 1746498152612,
                            "parentId": 1746498152615,
                            "isTop": false,
                            "prop": "organization_id",
                            "operator": "equal",
                            "valueType": "field",
                            "value": "{{system:deptIds}}",
                            "type": "leaf",
                            "level": 3,
                            "propLabel": "Organization",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "值"
                          },
                          {
                            "id": 1746498152616,
                            "parentId": 1746498152615,
                            "isTop": false,
                            "prop": "organization_id",
                            "operator": "equal",
                            "valueType": "field",
                            "value": "{{global:deptParentId}}",
                            "type": "leaf",
                            "level": 3,
                            "propLabel": "Organization",
                            "valueLabel": "",
                            "operatorLabel": "等于",
                            "valueTypeLabel": "值"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "url_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "body_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "request_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            }
          },
          "events": {
            "onChange": "jtwa8dxk",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "dlkjht47",
          "model": "si_tax_rate_id",
          "rules": []
        },
        {
          "name": "Tax Rate Percentage",
          "type": "select",
          "mainIcon": "下拉单选",
          "typeIcon": "下拉单选",
          "icon": "icon-select",
          "group": "Select",
          "groupSort": 2,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-select",
          "options": {
            "defaultValue": "",
            "multiple": false,
            "disabled": true,
            "clearable": true,
            "placeholder": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "width": "",
            "options": [
              {
                "value": "%",
                "label": "%",
                "image": [],
                "icon": ""
              },
              {
                "value": "Amount",
                "label": "Amount",
                "image": [],
                "icon": ""
              }
            ],
            "remote": true,
            "remoteType": "innerdatasource",
            "remoteOption": "option_eqqq1vgn",
            "filterable": true,
            "pagingEnabled": true,
            "remoteOptions": [],
            "props": {
              "value": "tax_rate_percent",
              "label": "tax_rate_percent",
              "cascade": "",
              "children": "",
              "image": "",
              "icon": ""
            },
            "remoteFunc": "func_eqqq1vgn",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "customProps": {},
            "tip": "",
            "tableColumn": true,
            "subform": false,
            "paging_enabled": 1,
            "paging_way": "Pagination",
            "page_size": 10,
            "more_fields": [],
            "datasource": {
              "source": "Tax Rate Percent:Table:1902027195556155393",
              "rules": {
                "collectionId": "1902027195556155393",
                "list": [
                  {
                    "id": 1746498213742,
                    "parentId": 1746498213741,
                    "isTop": true,
                    "prop": "",
                    "operator": "",
                    "valueType": "",
                    "value": "",
                    "type": "leaf",
                    "level": 1
                  }
                ]
              }
            },
            "url_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "body_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "request_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            }
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "w15b1ffc",
          "model": "tax_rate_percent",
          "rules": []
        },
        {
          "name": "Tax Fee Amount",
          "type": "number",
          "icon": "icon-number",
          "mainIcon": "金额",
          "typeIcon": "金额",
          "group": "Number",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-number-rmb",
          "options": {
            "width": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "defaultValue": 0,
            "min": 0,
            "max": 9999999,
            "step": 1,
            "disabled": true,
            "controls": false,
            "controlsPosition": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": true,
            "dataBind": true,
            "precision": 2,
            "customProps": {
              "progressColor": "",
              "dividingNumber": "",
              "showNumber": "",
              "viewMode": "",
              "format": "rmb",
              "cacheProp": true
            },
            "tip": "",
            "remoteFunc": "func_qpmn2p88",
            "remoteOption": "option_qpmn2p88",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "zekmre2n",
          "model": "tax_amount",
          "rules": []
        },
        {
          "name": "Tax Inclusive",
          "type": "switch",
          "mainIcon": "开关",
          "typeIcon": "开关",
          "icon": "icon-switch",
          "group": "Select",
          "groupSort": 8,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "defaultValue": 0,
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "disabled": false,
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "width": "",
            "customProps": {},
            "tip": "",
            "booleanValueMode": false,
            "alignright": false,
            "checkboxMode": true,
            "remoteFunc": "func_5iy39q5o",
            "remoteOption": "option_5iy39q5o",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "e063qm85"
          },
          "novalid": {},
          "key": "5iy39q5o",
          "model": "si_tax_inclusive",
          "rules": []
        },
        {
          "name": "Amount (to be posted)",
          "type": "number",
          "icon": "icon-number",
          "mainIcon": "金额",
          "typeIcon": "金额",
          "group": "Number",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-number-rmb",
          "options": {
            "width": "",
            "required": false,
            "requiredMessage": "",
            "validatorCheck": false,
            "validator": "",
            "defaultValue": 0,
            "min": 0,
            "max": 9999999,
            "step": 1,
            "disabled": true,
            "controls": false,
            "controlsPosition": "",
            "customClass": "",
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": false,
            "dataBind": true,
            "precision": 2,
            "customProps": {
              "progressColor": "",
              "dividingNumber": "",
              "showNumber": "",
              "viewMode": "",
              "format": "rmb",
              "cacheProp": true
            },
            "tip": "",
            "remoteFunc": "func_qpmn2p88",
            "remoteOption": "option_qpmn2p88",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "2xyr42ry",
          "model": "si_amount",
          "rules": []
        },
        {
          "name": "SO ID",
          "type": "input",
          "mainIcon": "单行文本",
          "typeIcon": "多行文本",
          "icon": "icon-input",
          "group": "Text",
          "groupSort": 1,
          "enableScopes": ["Component", "Table", "Page"],
          "el": "fm-input",
          "options": {
            "width": "",
            "defaultValue": "",
            "required": false,
            "requiredMessage": "",
            "dataType": "",
            "dataTypeCheck": false,
            "dataTypeMessage": "",
            "pattern": "",
            "patternCheck": false,
            "patternMessage": "",
            "validatorCheck": false,
            "validator": "",
            "placeholder": "",
            "customClass": "",
            "disabled": true,
            "labelWidth": 100,
            "isLabelWidth": false,
            "hidden": true,
            "dataBind": true,
            "showPassword": false,
            "clearable": false,
            "maxlength": "",
            "showWordLimit": false,
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_la81hqvd",
            "remoteOption": "option_la81hqvd",
            "tableColumn": true,
            "subform": false
          },
          "events": {
            "onChange": "",
            "onFocus": "",
            "onBlur": ""
          },
          "novalid": {},
          "key": "la81hqvd",
          "model": "line_so_id",
          "rules": []
        }
      ],
      "key": "zt0c3x55",
      "model": "table_si",
      "rules": []
    },
    {
      "name": "自动布局",
      "type": "flex",
      "el": "su-fm-flex",
      "mainIcon": "自动布局",
      "typeIcon": "自动布局",
      "icon": "icon-zhediemianban",
      "group": "Design",
      "groupSort": 6,
      "enableScopes": ["Component", "Table", "Page"],
      "options": {
        "title": "布局",
        "customClass": "",
        "hidden": false,
        "recursive": false,
        "recursiveStyleFx": "",
        "slotTarget": "",
        "defaultValue": "",
        "flexDirection": "row",
        "flexWrap": "nowrap",
        "alignItems": "center",
        "justifyContent": "flex-end",
        "hGap": "",
        "vGap": "",
        "grid": {
          "row": {
            "value": "",
            "visible": true
          },
          "col": {
            "value": "",
            "visible": true
          },
          "use": false
        },
        "padding": ["", "", "", ""],
        "margin": ["", "", "", ""],
        "boxSizing": "border-box",
        "width": "",
        "height": "",
        "radius": ["", "", "", ""],
        "position": "",
        "positions": ["", "", "", ""],
        "zIndex": "",
        "flex": "",
        "flexGrow": "",
        "flexShrink": "",
        "fills": [],
        "borders": [],
        "effects": [],
        "states": [],
        "hoverClass": "",
        "overflow": "",
        "styleFx": "",
        "behave": "",
        "remoteFunc": "func_jeqtlj7t",
        "remoteOption": "option_jeqtlj7t",
        "tableColumn": false,
        "subform": false,
        "props": {},
        "datasource": {
          "source": null,
          "rules": {
            "collectionId": "",
            "list": [
              {
                "id": 1723795236686,
                "parentId": 1723795236685,
                "isTop": true,
                "prop": "",
                "operator": "",
                "valueType": "",
                "value": "",
                "type": "leaf",
                "level": 1
              }
            ]
          }
        },
        "remote": false,
        "remoteType": "datasource",
        "url_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        },
        "body_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        },
        "paging_enabled": 0,
        "paging_way": "Pagination",
        "page_size": 10,
        "more_fields": [],
        "request_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        }
      },
      "list": [
        {
          "name": "自动布局",
          "type": "flex",
          "el": "su-fm-flex",
          "mainIcon": "自动布局",
          "typeIcon": "自动布局",
          "icon": "icon-zhediemianban",
          "group": "Design",
          "groupSort": 6,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "title": "布局",
            "customClass": "",
            "hidden": false,
            "recursive": false,
            "recursiveStyleFx": "",
            "slotTarget": "",
            "defaultValue": "",
            "flexDirection": "column",
            "flexWrap": "",
            "alignItems": "",
            "justifyContent": "",
            "hGap": "",
            "vGap": "",
            "grid": {
              "row": {
                "value": "",
                "visible": true
              },
              "col": {
                "value": "",
                "visible": true
              },
              "use": false
            },
            "padding": ["", "", "", ""],
            "margin": ["", "", "", ""],
            "boxSizing": "border-box",
            "width": "175px",
            "height": "",
            "radius": ["", "", "", ""],
            "position": "",
            "positions": ["", "", "", ""],
            "zIndex": "",
            "flex": "",
            "flexGrow": "",
            "flexShrink": "",
            "fills": [],
            "borders": [],
            "effects": [],
            "states": [],
            "hoverClass": "",
            "overflow": "",
            "styleFx": "",
            "behave": "",
            "remoteFunc": "func_dzngm3mp",
            "remoteOption": "option_dzngm3mp",
            "tableColumn": false,
            "subform": false,
            "props": {},
            "datasource": {
              "source": null,
              "rules": {
                "collectionId": "",
                "list": [
                  {
                    "id": 1723795236686,
                    "parentId": 1723795236685,
                    "isTop": true,
                    "prop": "",
                    "operator": "",
                    "valueType": "",
                    "value": "",
                    "type": "leaf",
                    "level": 1
                  }
                ]
              }
            },
            "remote": false,
            "remoteType": "datasource",
            "url_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            }
          },
          "list": [
            {
              "name": "Total Gross",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": true,
                "labelWidth": 130,
                "isLabelWidth": true,
                "hidden": false,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_j8oesevd",
                "remoteOption": "option_j8oesevd",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "key": "j8oesevd",
              "model": "total_gross_currency",
              "rules": []
            },
            {
              "name": "Total Discount",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": true,
                "labelWidth": 130,
                "isLabelWidth": true,
                "hidden": false,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_j8oesevd",
                "remoteOption": "option_j8oesevd",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "key": "p1yyngyc",
              "model": "total_discount_currency",
              "rules": []
            },
            {
              "name": "Total Tax Fee",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": true,
                "labelWidth": 130,
                "isLabelWidth": true,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_j8oesevd",
                "remoteOption": "option_j8oesevd",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "key": "ehu1kn7g",
              "model": "total_tax_currency",
              "rules": []
            },
            {
              "name": "",
              "type": "divider",
              "mainIcon": "分割线",
              "typeIcon": "分割线",
              "icon": "icon-fengexian",
              "group": "Layout",
              "groupSort": 7,
              "enableScopes": ["Component", "Table", "Page"],
              "options": {
                "hidden": false,
                "contentPosition": "left",
                "customProps": {},
                "remoteFunc": "func_ohu5i0e6",
                "remoteOption": "option_ohu5i0e6",
                "tableColumn": false,
                "subform": false,
                "customClass": ""
              },
              "novalid": {},
              "key": "9g21dcqu",
              "model": "divider_9g21dcqu",
              "rules": []
            },
            {
              "name": "Total Amount",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": true,
                "labelWidth": 130,
                "isLabelWidth": true,
                "hidden": false,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_j8oesevd",
                "remoteOption": "option_j8oesevd",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "key": "j9lreuqb",
              "model": "total_amount_currency",
              "rules": []
            },
            {
              "name": "Total Amount (MYR)",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "MYR",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": true,
                "labelWidth": 130,
                "isLabelWidth": true,
                "hidden": false,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_j8oesevd",
                "remoteOption": "option_j8oesevd",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "key": "h5qb99eq",
              "model": "total_amount_myr",
              "rules": []
            }
          ],
          "events": {
            "onClick": ""
          },
          "key": "dzngm3mp",
          "model": "flex_dzngm3mp",
          "rules": []
        },
        {
          "name": "自动布局",
          "type": "flex",
          "el": "su-fm-flex",
          "mainIcon": "自动布局",
          "typeIcon": "自动布局",
          "icon": "icon-zhediemianban",
          "group": "Design",
          "groupSort": 6,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "title": "布局",
            "customClass": "",
            "hidden": false,
            "recursive": true,
            "recursiveStyleFx": "",
            "slotTarget": "",
            "defaultValue": "",
            "flexDirection": "column",
            "flexWrap": "",
            "alignItems": "",
            "justifyContent": "",
            "hGap": "",
            "vGap": "",
            "grid": {
              "row": {
                "value": "",
                "visible": true
              },
              "col": {
                "value": "",
                "visible": true
              },
              "use": false
            },
            "padding": ["", "", "", ""],
            "margin": ["", "", "", ""],
            "boxSizing": "border-box",
            "width": "185px",
            "height": "",
            "radius": ["", "", "", ""],
            "position": "",
            "positions": ["", "", "", ""],
            "zIndex": "",
            "flex": "",
            "flexGrow": "",
            "flexShrink": "",
            "fills": [],
            "borders": [],
            "effects": [],
            "states": [],
            "hoverClass": "",
            "overflow": "",
            "styleFx": "",
            "behave": "",
            "remoteFunc": "func_ykq79zdq",
            "remoteOption": "option_ykq79zdq",
            "tableColumn": false,
            "subform": false,
            "props": {},
            "datasource": {
              "source": null,
              "rules": {
                "collectionId": "",
                "list": [
                  {
                    "id": 1723795236686,
                    "parentId": 1723795236685,
                    "isTop": true,
                    "prop": "",
                    "operator": "",
                    "valueType": "",
                    "value": "",
                    "type": "leaf",
                    "level": 1
                  }
                ]
              }
            },
            "remote": false,
            "remoteType": "datasource",
            "url_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            },
            "body_params": {
              "list": [
                {
                  "prop": "",
                  "propLabel": "",
                  "operator": "",
                  "operatorLabel": "",
                  "valueType": "value",
                  "valueTypeLabel": "",
                  "value": null,
                  "valueLabel": ""
                }
              ]
            }
          },
          "list": [
            {
              "name": "Sub Total",
              "type": "number",
              "icon": "icon-number",
              "mainIcon": "数字",
              "typeIcon": "数字",
              "group": "Number",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-number",
              "options": {
                "width": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "defaultValue": 0,
                "min": 0,
                "step": 1,
                "disabled": true,
                "controls": false,
                "controlsPosition": "",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "precision": 2,
                "customProps": {
                  "progressColor": "",
                  "dividingNumber": "",
                  "showNumber": "",
                  "viewMode": "",
                  "format": "rmb",
                  "cacheProp": true
                },
                "tip": "",
                "remoteFunc": "func_j41uhqmu",
                "remoteOption": "option_j41uhqmu",
                "tableColumn": false,
                "subform": false,
                "hideLabel": true
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "j41uhqmu",
              "model": "invoice_subtotal",
              "rules": []
            },
            {
              "name": "Total Discount",
              "type": "number",
              "icon": "icon-number",
              "mainIcon": "数字",
              "typeIcon": "数字",
              "group": "Number",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-number",
              "options": {
                "width": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "defaultValue": 0,
                "min": 0,
                "step": 1,
                "disabled": true,
                "controls": false,
                "controlsPosition": "",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "precision": 2,
                "customProps": {
                  "progressColor": "",
                  "dividingNumber": "",
                  "showNumber": "",
                  "viewMode": "",
                  "format": "rmb",
                  "cacheProp": true
                },
                "tip": "",
                "remoteFunc": "func_j41uhqmu",
                "remoteOption": "option_j41uhqmu",
                "tableColumn": false,
                "subform": false,
                "hideLabel": true
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "nw3tfsyn",
              "model": "invoice_total_discount",
              "rules": []
            },
            {
              "name": "Total Tax Amount",
              "type": "number",
              "icon": "icon-number",
              "mainIcon": "数字",
              "typeIcon": "数字",
              "group": "Number",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-number",
              "options": {
                "width": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "defaultValue": 0,
                "min": 0,
                "step": 1,
                "disabled": true,
                "controls": false,
                "controlsPosition": "",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "precision": 2,
                "customProps": {
                  "progressColor": "",
                  "dividingNumber": "",
                  "showNumber": "",
                  "viewMode": "",
                  "format": "rmb",
                  "cacheProp": true
                },
                "tip": "",
                "remoteFunc": "func_j41uhqmu",
                "remoteOption": "option_j41uhqmu",
                "tableColumn": false,
                "subform": false,
                "hideLabel": true
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "u1men2mv",
              "model": "invoice_taxes_amount",
              "rules": []
            },
            {
              "name": "",
              "type": "divider",
              "mainIcon": "分割线",
              "typeIcon": "分割线",
              "icon": "icon-fengexian",
              "group": "Layout",
              "groupSort": 7,
              "enableScopes": ["Component", "Table", "Page"],
              "options": {
                "hidden": false,
                "contentPosition": "left",
                "customProps": {},
                "remoteFunc": "func_ohu5i0e6",
                "remoteOption": "option_ohu5i0e6",
                "tableColumn": false,
                "subform": false,
                "customClass": ""
              },
              "novalid": {},
              "key": "ohu5i0e6",
              "model": "divider_ohu5i0e6",
              "rules": []
            },
            {
              "name": "Total",
              "type": "number",
              "icon": "icon-number",
              "mainIcon": "数字",
              "typeIcon": "数字",
              "group": "Number",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-number",
              "options": {
                "width": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "defaultValue": 0,
                "min": 0,
                "step": 1,
                "disabled": true,
                "controls": false,
                "controlsPosition": "",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "precision": 2,
                "customProps": {
                  "progressColor": "",
                  "dividingNumber": "",
                  "showNumber": "",
                  "viewMode": "",
                  "format": "rmb",
                  "cacheProp": true
                },
                "tip": "",
                "remoteFunc": "func_j41uhqmu",
                "remoteOption": "option_j41uhqmu",
                "tableColumn": false,
                "subform": false,
                "hideLabel": true
              },
              "events": {
                "onChange": "bkz5djda",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "6mv9sbo5",
              "model": "invoice_total",
              "rules": []
            },
            {
              "name": "Total Amount ",
              "type": "number",
              "icon": "icon-number",
              "mainIcon": "数字",
              "typeIcon": "数字",
              "group": "Number",
              "groupSort": 2,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-number",
              "options": {
                "width": "",
                "required": false,
                "requiredMessage": "",
                "validatorCheck": false,
                "validator": "",
                "defaultValue": 0,
                "min": 0,
                "step": 1,
                "disabled": true,
                "controls": false,
                "controlsPosition": "",
                "customClass": "",
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": false,
                "dataBind": true,
                "precision": 2,
                "customProps": {
                  "progressColor": "",
                  "dividingNumber": "",
                  "showNumber": "",
                  "viewMode": "",
                  "format": "rmb",
                  "cacheProp": true
                },
                "tip": "",
                "remoteFunc": "func_j41uhqmu",
                "remoteOption": "option_j41uhqmu",
                "tableColumn": false,
                "subform": false,
                "hideLabel": true
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "27t4h39d",
              "model": "myr_total_amount",
              "rules": []
            }
          ],
          "events": {
            "onClick": ""
          },
          "key": "ykq79zdq",
          "model": "flex_ykq79zdq",
          "rules": []
        }
      ],
      "events": {
        "onClick": ""
      },
      "key": "jeqtlj7t",
      "model": "flex_jeqtlj7t",
      "rules": []
    },
    {
      "name": "Remarks",
      "type": "textarea",
      "mainIcon": "多行文本",
      "typeIcon": "多行文本(1)",
      "icon": "icon-diy-com-textarea",
      "group": "Text",
      "groupSort": 2,
      "enableScopes": ["Component", "Table", "Page"],
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "disabled": false,
        "pattern": "",
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": false,
        "dataBind": true,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "rows": 2,
        "autosize": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_2rgahso7",
        "remoteOption": "option_2rgahso7",
        "tableColumn": false,
        "subform": false
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "2rgahso7",
      "model": "remarks",
      "rules": []
    },
    {
      "name": "自动布局",
      "type": "flex",
      "el": "su-fm-flex",
      "mainIcon": "自动布局",
      "typeIcon": "自动布局",
      "icon": "icon-zhediemianban",
      "group": "Design",
      "groupSort": 6,
      "enableScopes": ["Component", "Table", "Page"],
      "options": {
        "title": "布局",
        "customClass": "",
        "hidden": false,
        "recursive": false,
        "recursiveStyleFx": "",
        "slotTarget": "",
        "defaultValue": "",
        "flexDirection": "column",
        "flexWrap": "",
        "alignItems": "",
        "justifyContent": "",
        "hGap": "",
        "vGap": "",
        "grid": {
          "row": {
            "value": "",
            "visible": true
          },
          "col": {
            "value": "",
            "visible": true
          },
          "use": false
        },
        "padding": ["", "", "", ""],
        "margin": ["", "", "", ""],
        "boxSizing": "border-box",
        "width": "",
        "height": "70px",
        "radius": ["", "", "", ""],
        "position": "",
        "positions": ["", "", "", ""],
        "zIndex": "",
        "flex": "",
        "flexGrow": "",
        "flexShrink": "",
        "fills": [
          {
            "type": "color",
            "value": "#ffffffff",
            "mode": "aspectFill",
            "rotate": "",
            "visible": true
          }
        ],
        "borders": [],
        "effects": [],
        "states": [],
        "hoverClass": "",
        "overflow": "",
        "styleFx": "",
        "behave": "",
        "remoteFunc": "func_xy35uiq9",
        "remoteOption": "option_xy35uiq9",
        "tableColumn": false,
        "subform": false,
        "props": {},
        "datasource": {
          "source": null,
          "rules": {
            "collectionId": "",
            "list": [
              {
                "id": 1723795236686,
                "parentId": 1723795236685,
                "isTop": true,
                "prop": "",
                "operator": "",
                "valueType": "",
                "value": "",
                "type": "leaf",
                "level": 1
              }
            ]
          }
        },
        "remote": false,
        "remoteType": "datasource",
        "url_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        },
        "body_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        },
        "request_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        }
      },
      "list": [],
      "events": {
        "onClick": ""
      },
      "key": "xy35uiq9",
      "model": "flex_xy35uiq9",
      "rules": []
    },
    {
      "name": "Flex",
      "type": "flex",
      "el": "su-fm-flex",
      "mainIcon": "自动布局",
      "typeIcon": "自动布局",
      "icon": "icon-zhediemianban",
      "group": "Design",
      "groupSort": 6,
      "enableScopes": ["Component", "Table", "Page"],
      "options": {
        "title": "布局",
        "customClass": "fixbutton",
        "hidden": false,
        "recursive": false,
        "recursiveStyleFx": "",
        "slotTarget": "",
        "defaultValue": "",
        "flexDirection": "row",
        "flexWrap": "nowrap",
        "alignItems": "flex-end",
        "justifyContent": "flex-end",
        "hGap": "",
        "vGap": "",
        "grid": {
          "row": {
            "value": "",
            "visible": true
          },
          "col": {
            "value": "",
            "visible": true
          },
          "use": false
        },
        "padding": ["10px", "", "", ""],
        "margin": ["", "", "", ""],
        "boxSizing": "border-box",
        "width": "60%",
        "height": "",
        "radius": ["", "", "", ""],
        "position": "",
        "positions": ["", "", "", ""],
        "zIndex": "",
        "flex": "",
        "flexGrow": "",
        "flexShrink": "",
        "fills": [
          {
            "type": "color",
            "value": "#ffffffff",
            "mode": "aspectFill",
            "rotate": "",
            "visible": true
          }
        ],
        "borders": [],
        "effects": [],
        "states": [],
        "hoverClass": "",
        "overflow": "",
        "styleFx": "",
        "behave": "",
        "remoteFunc": "func_mgb3r5td",
        "remoteOption": "option_mgb3r5td",
        "tableColumn": false,
        "subform": false,
        "props": {},
        "datasource": {
          "source": null,
          "rules": {
            "collectionId": "",
            "list": [
              {
                "id": 1723795236686,
                "parentId": 1723795236685,
                "isTop": true,
                "prop": "",
                "operator": "",
                "valueType": "",
                "value": "",
                "type": "leaf",
                "level": 1
              }
            ]
          }
        },
        "remote": false,
        "remoteType": "datasource",
        "url_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        },
        "body_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        },
        "request_params": {
          "list": [
            {
              "prop": "",
              "propLabel": "",
              "operator": "",
              "operatorLabel": "",
              "valueType": "value",
              "valueTypeLabel": "",
              "value": null,
              "valueLabel": ""
            }
          ]
        }
      },
      "list": [
        {
          "name": "Draft",
          "type": "button",
          "mainIcon": "按钮",
          "typeIcon": "按钮",
          "icon": "icon-button",
          "group": "Buttons",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "customClass": "",
            "disabled": false,
            "labelWidth": 100,
            "isLabelWidth": false,
            "hideLabel": true,
            "hidden": false,
            "buttonSize": "default",
            "buttonType": "info",
            "buttonPlain": true,
            "buttonRound": true,
            "buttonCircle": false,
            "buttonName": "Save as Draft",
            "width": "",
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_kylrm9hw",
            "remoteOption": "option_kylrm9hw",
            "tableColumn": false,
            "subform": false
          },
          "events": {
            "onClick": "qf9w3db9"
          },
          "key": "kylrm9hw",
          "model": "button_save_as_draft",
          "rules": []
        },
        {
          "name": "Completed",
          "type": "button",
          "mainIcon": "按钮",
          "typeIcon": "按钮",
          "icon": "icon-button",
          "group": "Buttons",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "customClass": "margin",
            "disabled": false,
            "labelWidth": 100,
            "isLabelWidth": false,
            "hideLabel": true,
            "hidden": false,
            "buttonSize": "default",
            "buttonType": "success",
            "buttonPlain": true,
            "buttonRound": true,
            "buttonCircle": false,
            "buttonName": "Completed",
            "width": "",
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_kylrm9hw",
            "remoteOption": "option_kylrm9hw",
            "tableColumn": false,
            "subform": false,
            "shadow": "default"
          },
          "events": {
            "onClick": "mlkqamzp"
          },
          "key": "xwrlmkob",
          "model": "button_completed",
          "rules": []
        },
        {
          "name": "Completed & Post",
          "type": "button",
          "mainIcon": "按钮",
          "typeIcon": "按钮",
          "icon": "icon-button",
          "group": "Buttons",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "customClass": "margin",
            "disabled": false,
            "labelWidth": 100,
            "isLabelWidth": false,
            "hideLabel": true,
            "hidden": false,
            "buttonSize": "default",
            "buttonType": "success",
            "buttonPlain": false,
            "buttonRound": true,
            "buttonCircle": false,
            "buttonName": "Completed & Post",
            "width": "",
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_kylrm9hw",
            "remoteOption": "option_kylrm9hw",
            "tableColumn": false,
            "subform": false,
            "shadow": "default"
          },
          "events": {
            "onClick": "2knzknsc"
          },
          "key": "fgwmhuke",
          "model": "button_completed_posted",
          "rules": []
        },
        {
          "name": "Post",
          "type": "button",
          "mainIcon": "按钮",
          "typeIcon": "按钮",
          "icon": "icon-button",
          "group": "Buttons",
          "groupSort": 0,
          "enableScopes": ["Component", "Table", "Page"],
          "options": {
            "customClass": "margin marginright",
            "disabled": false,
            "labelWidth": 100,
            "isLabelWidth": false,
            "hideLabel": true,
            "hidden": false,
            "buttonSize": "default",
            "buttonType": "success",
            "buttonPlain": false,
            "buttonRound": true,
            "buttonCircle": false,
            "buttonName": "Post",
            "width": "",
            "customProps": {},
            "tip": "",
            "remoteFunc": "func_kylrm9hw",
            "remoteOption": "option_kylrm9hw",
            "tableColumn": false,
            "subform": false,
            "shadow": "default"
          },
          "events": {
            "onClick": "j0i3xkkb"
          },
          "key": "3nb8ju83",
          "model": "button_posted",
          "rules": []
        }
      ],
      "events": {
        "onClick": ""
      },
      "key": "mgb3r5td",
      "model": "flex_button",
      "rules": []
    },
    {
      "name": "Address",
      "type": "input",
      "mainIcon": "单行文本",
      "typeIcon": "多行文本",
      "icon": "icon-input",
      "group": "Text",
      "groupSort": 1,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-input",
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "dataType": "",
        "dataTypeCheck": false,
        "dataTypeMessage": "",
        "pattern": "",
        "patternCheck": false,
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "disabled": false,
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "showPassword": false,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_1inctmat",
        "remoteOption": "option_1inctmat",
        "tableColumn": false,
        "subform": false
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "1inctmat",
      "model": "billing_address_line_1",
      "rules": []
    },
    {
      "name": "",
      "type": "input",
      "mainIcon": "单行文本",
      "typeIcon": "多行文本",
      "icon": "icon-input",
      "group": "Text",
      "groupSort": 1,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-input",
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "dataType": "",
        "dataTypeCheck": false,
        "dataTypeMessage": "",
        "pattern": "",
        "patternCheck": false,
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "disabled": false,
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "showPassword": false,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_dr5h4lxb",
        "remoteOption": "option_dr5h4lxb",
        "tableColumn": false,
        "subform": false
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "dr5h4lxb",
      "model": "billing_address_line_2",
      "rules": []
    },
    {
      "name": "",
      "type": "input",
      "mainIcon": "单行文本",
      "typeIcon": "多行文本",
      "icon": "icon-input",
      "group": "Text",
      "groupSort": 1,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-input",
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "dataType": "",
        "dataTypeCheck": false,
        "dataTypeMessage": "",
        "pattern": "",
        "patternCheck": false,
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "disabled": false,
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "showPassword": false,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_l8607d28",
        "remoteOption": "option_l8607d28",
        "tableColumn": false,
        "subform": false
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "l8607d28",
      "model": "billing_address_line_3",
      "rules": []
    },
    {
      "name": "",
      "type": "input",
      "mainIcon": "单行文本",
      "typeIcon": "多行文本",
      "icon": "icon-input",
      "group": "Text",
      "groupSort": 1,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-input",
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "dataType": "",
        "dataTypeCheck": false,
        "dataTypeMessage": "",
        "pattern": "",
        "patternCheck": false,
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "disabled": false,
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "showPassword": false,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_6xzgzxjp",
        "remoteOption": "option_6xzgzxjp",
        "tableColumn": false,
        "subform": false
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "6xzgzxjp",
      "model": "billing_address_line_4",
      "rules": []
    },
    {
      "name": "栅格布局",
      "type": "grid",
      "mainIcon": "栅格布局",
      "typeIcon": "栅格布局",
      "icon": "icon-RectangleCopy",
      "group": "Layout",
      "groupSort": 0,
      "enableScopes": ["Component", "Table", "Page"],
      "columns": [
        {
          "type": "col",
          "options": {
            "span": 12,
            "offset": 0,
            "push": 0,
            "pull": 0,
            "xs": 24,
            "sm": 12,
            "md": 12,
            "lg": 12,
            "xl": 12,
            "customClass": ""
          },
          "list": [
            {
              "name": "City",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_gsshl6pq",
                "remoteOption": "option_gsshl6pq",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "key": "gsshl6pq",
              "model": "billing_address_city",
              "rules": [],
              "novalid": {}
            },
            {
              "name": "Postal Code",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_jjxpxxsq",
                "remoteOption": "option_jjxpxxsq",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "key": "jjxpxxsq",
              "model": "billing_postal_code",
              "rules": [],
              "novalid": {}
            }
          ],
          "key": "mlvjmjtj",
          "rules": []
        },
        {
          "type": "col",
          "options": {
            "span": 12,
            "offset": 0,
            "push": 0,
            "pull": 0,
            "xs": 24,
            "sm": 12,
            "md": 12,
            "lg": 12,
            "xl": 12,
            "customClass": ""
          },
          "list": [
            {
              "name": "State",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_jdp5oifg",
                "remoteOption": "option_jdp5oifg",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "jdp5oifg",
              "model": "billing_address_state",
              "rules": []
            },
            {
              "name": "Country",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_jdp5oifg",
                "remoteOption": "option_jdp5oifg",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "e5mllhac",
              "model": "billing_address_country",
              "rules": []
            }
          ],
          "key": "beu2zf0a",
          "rules": []
        }
      ],
      "options": {
        "gutter": 0,
        "justify": "start",
        "align": "top",
        "customClass": "",
        "hidden": false,
        "flex": true,
        "responsive": true,
        "remoteFunc": "func_2sss17kl",
        "remoteOption": "option_2sss17kl",
        "tableColumn": false,
        "subform": false
      },
      "key": "2sss17kl",
      "model": "grid_2sss17kl",
      "rules": []
    },
    {
      "name": "Address",
      "type": "input",
      "mainIcon": "单行文本",
      "typeIcon": "多行文本",
      "icon": "icon-input",
      "group": "Text",
      "groupSort": 1,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-input",
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "dataType": "",
        "dataTypeCheck": false,
        "dataTypeMessage": "",
        "pattern": "",
        "patternCheck": false,
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "disabled": false,
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "showPassword": false,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_1inctmat",
        "remoteOption": "option_1inctmat",
        "tableColumn": false,
        "subform": false
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "acv3idia",
      "model": "shipping_address_line_1",
      "rules": []
    },
    {
      "name": "",
      "type": "input",
      "mainIcon": "单行文本",
      "typeIcon": "多行文本",
      "icon": "icon-input",
      "group": "Text",
      "groupSort": 1,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-input",
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "dataType": "",
        "dataTypeCheck": false,
        "dataTypeMessage": "",
        "pattern": "",
        "patternCheck": false,
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "disabled": false,
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "showPassword": false,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_dr5h4lxb",
        "remoteOption": "option_dr5h4lxb",
        "tableColumn": false,
        "subform": false
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "7fkif0pj",
      "model": "shipping_address_line_2",
      "rules": []
    },
    {
      "name": "",
      "type": "input",
      "mainIcon": "单行文本",
      "typeIcon": "多行文本",
      "icon": "icon-input",
      "group": "Text",
      "groupSort": 1,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-input",
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "dataType": "",
        "dataTypeCheck": false,
        "dataTypeMessage": "",
        "pattern": "",
        "patternCheck": false,
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "disabled": false,
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "showPassword": false,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_dr5h4lxb",
        "remoteOption": "option_dr5h4lxb",
        "tableColumn": false,
        "subform": false
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "rfz0ci78",
      "model": "shipping_address_line_3",
      "rules": []
    },
    {
      "name": "",
      "type": "input",
      "mainIcon": "单行文本",
      "typeIcon": "多行文本",
      "icon": "icon-input",
      "group": "Text",
      "groupSort": 1,
      "enableScopes": ["Component", "Table", "Page"],
      "el": "fm-input",
      "options": {
        "width": "",
        "defaultValue": "",
        "required": false,
        "requiredMessage": "",
        "dataType": "",
        "dataTypeCheck": false,
        "dataTypeMessage": "",
        "pattern": "",
        "patternCheck": false,
        "patternMessage": "",
        "validatorCheck": false,
        "validator": "",
        "placeholder": "",
        "customClass": "",
        "disabled": false,
        "labelWidth": 100,
        "isLabelWidth": false,
        "hidden": true,
        "dataBind": true,
        "showPassword": false,
        "clearable": false,
        "maxlength": "",
        "showWordLimit": false,
        "customProps": {},
        "tip": "",
        "remoteFunc": "func_dr5h4lxb",
        "remoteOption": "option_dr5h4lxb",
        "tableColumn": false,
        "subform": false
      },
      "events": {
        "onChange": "",
        "onFocus": "",
        "onBlur": ""
      },
      "key": "f1wh6pce",
      "model": "shipping_address_line_4",
      "rules": []
    },
    {
      "name": "栅格布局",
      "type": "grid",
      "mainIcon": "栅格布局",
      "typeIcon": "栅格布局",
      "icon": "icon-RectangleCopy",
      "group": "Layout",
      "groupSort": 0,
      "enableScopes": ["Component", "Table", "Page"],
      "columns": [
        {
          "type": "col",
          "options": {
            "span": 12,
            "offset": 0,
            "push": 0,
            "pull": 0,
            "xs": 24,
            "sm": 12,
            "md": 12,
            "lg": 12,
            "xl": 12,
            "customClass": ""
          },
          "list": [
            {
              "name": "City",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_gsshl6pq",
                "remoteOption": "option_gsshl6pq",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "key": "hgsfqry4",
              "model": "shipping_address_city",
              "rules": [],
              "novalid": {}
            },
            {
              "name": "Postal Code",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_jjxpxxsq",
                "remoteOption": "option_jjxpxxsq",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "key": "dynwya1c",
              "model": "shipping_postal_code",
              "rules": [],
              "novalid": {}
            }
          ],
          "key": "11su722r",
          "rules": []
        },
        {
          "type": "col",
          "options": {
            "span": 12,
            "offset": 0,
            "push": 0,
            "pull": 0,
            "xs": 24,
            "sm": 12,
            "md": 12,
            "lg": 12,
            "xl": 12,
            "customClass": ""
          },
          "list": [
            {
              "name": "Country",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_jdp5oifg",
                "remoteOption": "option_jdp5oifg",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "wshav1by",
              "model": "shipping_address_country",
              "rules": []
            },
            {
              "name": "State",
              "type": "input",
              "mainIcon": "单行文本",
              "typeIcon": "多行文本",
              "icon": "icon-input",
              "group": "Text",
              "groupSort": 1,
              "enableScopes": ["Component", "Table", "Page"],
              "el": "fm-input",
              "options": {
                "width": "",
                "defaultValue": "",
                "required": false,
                "requiredMessage": "",
                "dataType": "",
                "dataTypeCheck": false,
                "dataTypeMessage": "",
                "pattern": "",
                "patternCheck": false,
                "patternMessage": "",
                "validatorCheck": false,
                "validator": "",
                "placeholder": "",
                "customClass": "",
                "disabled": false,
                "labelWidth": 100,
                "isLabelWidth": false,
                "hidden": true,
                "dataBind": true,
                "showPassword": false,
                "clearable": false,
                "maxlength": "",
                "showWordLimit": false,
                "customProps": {},
                "tip": "",
                "remoteFunc": "func_jdp5oifg",
                "remoteOption": "option_jdp5oifg",
                "tableColumn": false,
                "subform": false
              },
              "events": {
                "onChange": "",
                "onFocus": "",
                "onBlur": ""
              },
              "novalid": {},
              "key": "jj5a8w7p",
              "model": "shipping_address_state",
              "rules": []
            }
          ],
          "key": "wwwdw3nr"
        }
      ],
      "options": {
        "gutter": 0,
        "justify": "start",
        "align": "top",
        "customClass": "",
        "hidden": false,
        "flex": true,
        "responsive": true,
        "remoteFunc": "func_2sss17kl",
        "remoteOption": "option_2sss17kl",
        "tableColumn": false,
        "subform": false
      },
      "key": "1vyu2bzl",
      "model": "grid_1vyu2bzl",
      "rules": []
    }
  ],
  "config": {
    "labelWidth": 180,
    "labelPosition": "left",
    "size": "small",
    "customClass": "padding",
    "ui": "element",
    "layout": "horizontal",
    "width": "100%",
    "hideLabel": false,
    "hideErrorMessage": false,
    "eventScript": [
      {
        "key": "onFormChange",
        "name": "onFormChange",
        "type": "rule"
      },
      {
        "key": "mounted",
        "name": "mounted",
        "func": "const generatePrefix = (runNumber, now, prefixData) => {\n    let generated = prefixData.current_prefix_config;\n    generated = generated.replace(\"prefix\", prefixData.prefix_value);\n    generated = generated.replace(\"suffix\", prefixData.suffix_value);\n    generated = generated.replace(\"month\", String(now.getMonth() + 1).padStart(2, \"0\"));\n    generated = generated.replace(\"day\", String(now.getDate()).padStart(2, '0'));\n    generated = generated.replace(\"year\", now.getFullYear());\n    generated = generated.replace(\"running_number\", String(runNumber).padStart(prefixData.padding_zeroes, '0'));\n    return generated;\n};\n\nconst checkUniqueness = async (generatedPrefix) => {\n    const existingDoc = await db.collection(\"sales_invoice\")\n        .where({sales_invoice_no: generatedPrefix})\n        .get();\n    return existingDoc.data[0] ? false : true;\n};\n\nconst findUniquePrefix = async (prefixData) => {\n    const now = new Date();\n    let prefixToShow;\n    let runningNumber = prefixData.running_number;\n    let isUnique = false;\n    let maxAttempts = 10;\n    let attempts = 0;\n\n    while (!isUnique && attempts < maxAttempts) {\n        attempts++;\n        prefixToShow = await generatePrefix(runningNumber, now, prefixData);\n        isUnique = await checkUniqueness(prefixToShow);\n        if (!isUnique) {\n            runningNumber++;\n        }\n    }\n    \n    if (!isUnique) {\n        throw new Error(\"Could not generate a unique Sales Invoices number after maximum attempts\");\n    }\n    return { prefixToShow, runningNumber };\n};\n\nconst setPrefix = async (organizationId) => {\n    const prefixData = await getPrefixData(organizationId);\n\n    const { prefixToShow } = await findUniquePrefix(prefixData);\n\n    this.setData({ 'sales_invoice_no': prefixToShow });\n}\n\nconst getPrefixData = async (organizationId) => {\n    const prefixEntry = await db.collection(\"prefix_configuration\").where({ document_types: \"Sales Invoices\" , is_deleted: 0, organization_id: organizationId}).get()\n    const prefixData = await prefixEntry.data[0];\n\n    if(prefixData.is_active === 0){\n        this.disabled(['sales_invoice_no'], false)\n    }\n\n    return prefixData;\n}\n\nconst showStatusHTML = async (status) => {\n    switch (status) {\n        case 'Draft':\n            this.display([\n                'draft_status'\n            ])\n            break;\n        case 'Completed':\n            this.display([\n                'completed_status'\n            ])\n            break;\n        case 'Fully Posted':\n            this.display([\n                'fullyposted_status'\n            ])\n            break;\n    }\n}\n\nconst displayCurrency = async () => {\n    const currencyCode = this.getValue('currency_code');\n\n    if (currencyCode !== \"----\" && currencyCode !== \"MYR\") {\n        this.display(['exchange_rate', 'exchange_rate_myr', 'exchange_rate_currency', 'myr_total_amount', 'total_amount_myr'])\n    }\n\n    this.setData({\n        \"total_gross_currency\": currencyCode,\n        \"total_discount_currency\": currencyCode,\n        \"total_tax_currency\": currencyCode,\n        \"total_amount_currency\": currencyCode,\n        \"exchange_rate_currency\": currencyCode\n    })\n}\n\nconst displaySOAddress = async () => {\n    const salesOrderId = this.getValue('so_id');\n\n    if(salesOrderId){\n        this.display('address_grid');\n    }\n}\n\nconst isViewMode = async (status) => {\n    this.display(['so_no_display', 'gd_no_display'])\n    this.hide(['so_id', 'goods_delivery_number'])\n\n    if(status === 'Completed'){\n        this.hide([\n            'link_shipping_address',\n            'link_billing_address',\n            'button_save_as_draft',\n            'button_completed',\n            'button_completed_posted'\n        ])\n    } else {\n        this.hide([\n            'link_shipping_address',\n            'link_billing_address',\n            'button_save_as_draft',\n            'button_completed',\n            'button_posted',\n            'button_completed_posted'\n        ]);\n    }\n}\n\n(async () => {\n    try{\n        const status = await this.getValue('si_status');\n\n        const pageStatus = this.isAdd ? 'Add' :\n        this.isEdit ? 'Edit' :\n        this.isView ? 'View' :\n        this.isCopy ? 'Clone' :\n        (() => { this.$message.error('Invalid page status') })();\n\n        let organizationId = this.getVarGlobal('deptParentId');\n        if(organizationId === '0'){\n            organizationId = this.getVarSystem('deptIds').split(',')[0];\n        }\n\n        this.setData({'organization_id': organizationId, 'page_status': pageStatus});\n        this.hide(['exchange_rate','exchange_rate_myr','exchange_rate_currency','myr_total_amount','total_amount_myr']);\n    \n        switch(pageStatus){\n            case 'Add':\n                this.display(['draft_status']);\n                this.hide('button_posted');\n\n                await setPrefix(organizationId);\n                break;\n            \n            case 'Edit':\n                await getPrefixData(organizationId);\n                await showStatusHTML(status);\n                await displayCurrency();\n                await displaySOAddress();\n\n                if(status === 'Draft'){\n                    this.hide('button_posted')\n                }\n                \n                break;\n\n            case 'View':\n                this.hide([\n                    'link_billing_address',\n                    'link_shipping_address',\n                    'button_save_as_draft',\n                    'button_save_as_issue'\n                ]);\n                await showStatusHTML(status);\n                await displayCurrency();\n                await displaySOAddress();\n                await isViewMode(status);\n\n                break;\n        }\n    } catch (error) {\n        this.$message.error(error)\n    }\n})();",
        "type": "js"
      },
      {
        "key": "refresh",
        "name": "refresh",
        "func": ""
      },
      {
        "key": "onBeforeAdd",
        "name": "onBeforeAdd",
        "func": ""
      },
      {
        "key": "onAfterAdd",
        "name": "onAfterAdd",
        "func": ""
      },
      {
        "key": "onBeforeUpdate",
        "name": "onBeforeUpdate",
        "func": ""
      },
      {
        "key": "onAfterUpdate",
        "name": "onAfterUpdate",
        "func": ""
      },
      {
        "key": "jtwa8dxk",
        "name": "onChange_tax_rate",
        "func": "",
        "type": "rule",
        "rules": [
          {
            "key": "bhedp84h",
            "action": "js",
            "options": {
              "func": "db.collection(\"tax_rate_percent\").where({\"tax_code\":arguments[0].value}).get().then((re) => {    \n    if(re.data.length > 0){\n  this.setOptionData(\"table_si.\" +arguments[0].rowIndex+\".tax_rate_percent\",re.data);    \n        this.disabled(['table_si.'+arguments[0].rowIndex+'.tax_rate_percent'], false);\n  }\n    \n    });\n\n"
            }
          }
        ]
      },
      {
        "key": "y8ucfmfm",
        "name": "onChange_SO",
        "func": "",
        "type": "rule",
        "rules": [
          {
            "key": "51nrhbkb",
            "action": "js",
            "options": {
              "func": "const data = this.getValues();\nconst salesOrderIds = Array.isArray(data.so_id) ? data.so_id : [data.so_id];\nconsole.log(\"Sales Order IDs:\", salesOrderIds);\n\n// Helper function to extract data from different response formats\nfunction extractData(result) {\n  if (Array.isArray(result) && result.length > 0) {\n    return result[0];\n  } else if (typeof result === \"object\" && result !== null) {\n    if (result.data) {\n      return Array.isArray(result.data) && result.data.length > 0\n        ? result.data[0]\n        : result.data;\n    } else if (\n      result.docs &&\n      Array.isArray(result.docs) &&\n      result.docs.length > 0\n    ) {\n      return result.docs[0].data ? result.docs[0].data() : result.docs[0];\n    }\n    return result;\n  }\n  return null;\n}\n\n// Helper function to calculate discount amount\nfunction calculateDiscount(grossValue, discount, discountUOM) {\n  if (!discount || discount === 0 || !discountUOM) {\n    return 0;\n  }\n\n  let discountAmount = 0;\n  if (discountUOM === \"Amount\") {\n    discountAmount = discount;\n  } else if (discountUOM === \"%\") {\n    discountAmount = (grossValue * discount) / 100;\n  }\n\n  // Cap discount at gross value\n  return Math.min(discountAmount, grossValue);\n}\n\n// Helper function to calculate tax\nfunction calculateTax(amountAfterDiscount, taxRate, taxInclusive) {\n  if (!taxRate) {\n    return {\n      taxAmount: 0,\n      finalAmount: amountAfterDiscount,\n    };\n  }\n\n  const taxRateDecimal = taxRate / 100;\n  let taxAmount = 0;\n  let finalAmount = amountAfterDiscount;\n\n  if (taxInclusive === 1) {\n    // Tax inclusive calculation\n    taxAmount =\n      amountAfterDiscount - amountAfterDiscount / (1 + taxRateDecimal);\n    finalAmount = amountAfterDiscount;\n  } else {\n    // Tax exclusive calculation\n    taxAmount = amountAfterDiscount * taxRateDecimal;\n    finalAmount = amountAfterDiscount + taxAmount;\n  }\n\n  return {\n    taxAmount: parseFloat(taxAmount.toFixed(2)),\n    finalAmount: parseFloat(finalAmount.toFixed(2)),\n  };\n}\n\n// Main processing\nconst processSalesInvoice = async () => {\n  try {\n    // Fetch Sales Order data for all sales order IDs\n    const soPromises = salesOrderIds.map(async (soId) => {\n      try {\n        const soResult = await db\n          .collection(\"sales_order\")\n          .where({\n            id: soId,\n          })\n          .get();\n\n        const soData = extractData(soResult);\n        console.log(`Extracted Sales Order data for ${soId}:`, soData);\n        return soData;\n      } catch (error) {\n        console.error(`Error retrieving data for SO ${soId}:`, error);\n        return null;\n      }\n    });\n\n    const allSOData = (await Promise.all(soPromises)).filter(Boolean);\n    console.log(\"All SO data:\", allSOData);\n\n    // Additional check to ensure we have SO data to process\n    if (allSOData.length === 0) {\n      console.error(\"No valid Sales Order data found\");\n      return;\n    }\n\n    // Process data and create table entries, keeping SO structure\n    const newTableSI = [];\n\n    // Process each SO and maintain its structure\n    allSOData.forEach((soData) => {\n      const soItems = soData.table_so || [];\n\n      soItems.forEach((soItem) => {\n        const itemId = soItem.item_name;\n        if (!itemId) return;\n\n        // Use delivered_qty from table_so\n        const deliveryQty = parseFloat(soItem.delivered_qty || 0);\n\n        // Create entry for this SO item\n        newTableSI.push({\n          line_so_id: soData.id || \"\",\n          line_so_no: soData.so_no || \"\",\n          material_id: itemId,\n          material_desc: soItem.so_desc || \"\",\n          so_order_quantity: parseFloat(soItem.so_quantity) || 0,\n          so_order_uom_id: soItem.so_item_uom,\n          good_delivery_quantity: deliveryQty,\n          unit_price: soItem.so_item_price,\n          si_discount: soItem.so_discount,\n          si_discount_uom_id: soItem.so_discount_uom,\n          si_tax_rate_id: soItem.so_tax_preference,\n          tax_rate_percent: soItem.so_tax_percentage,\n          si_tax_inclusive: soItem.so_tax_inclusive,\n          invoice_qty: deliveryQty,\n          invoice_qty_uom_id: soItem.so_item_uom,\n        });\n      });\n    });\n\n    console.log(\"Final table_si data:\", newTableSI);\n    await this.setData({\n      table_si: newTableSI,\n    });\n\n    // Calculate totals after setting table_si\n    await calculateTotals();\n  } catch (error) {\n    console.error(\"Error in processSalesInvoice:\", error);\n  }\n};\n\n// Function to calculate totals\nconst calculateTotals = () => {\n  const items = this.getValues().table_si;\n  const exchangeRate = data.exchange_rate;\n  let totalGross = 0;\n  let totalDiscount = 0;\n  let totalTax = 0;\n  let totalAmount = 0;\n\n  if (Array.isArray(items)) {\n    items.forEach((item, index) => {\n      const quantity = Number(item.invoice_qty) || 0;\n      const unitPrice = parseFloat(item.unit_price) || 0;\n      const grossValue = quantity * unitPrice;\n\n      totalGross += grossValue;\n\n      this.setData({\n        [`table_si.${index}.gross`]: grossValue,\n        [`table_si.${index}.si_amount`]: grossValue,\n        invoice_subtotal: totalGross,\n      });\n\n      // Calculate discount\n      const discount = parseFloat(item.si_discount) || 0;\n      const discountUOM = item.si_discount_uom_id;\n      const discountAmount = calculateDiscount(\n        grossValue,\n        discount,\n        discountUOM\n      );\n\n      if (discountAmount > 0) {\n        this.setData({\n          [`table_si.${index}.discount_amount`]: parseFloat(\n            discountAmount.toFixed(2)\n          ),\n        });\n      } else {\n        this.setData({\n          [`table_si.${index}.discount_amount`]: 0,\n        });\n      }\n\n      const amountAfterDiscount = grossValue - discountAmount;\n\n      // Calculate tax\n      const taxRate = Number(item.tax_rate_percent) || 0;\n      const taxInclusive = item.si_tax_inclusive;\n      const { taxAmount, finalAmount } = calculateTax(\n        amountAfterDiscount,\n        taxRate,\n        taxInclusive\n      );\n\n      // Set tax amount\n      this.setData({\n        [`table_si.${index}.tax_amount`]: taxAmount,\n      });\n\n      // Set final amount\n      this.setData({\n        [`table_si.${index}.si_amount`]: finalAmount,\n      });\n\n      totalDiscount += discountAmount;\n      totalTax += taxAmount;\n      totalAmount += finalAmount;\n    });\n\n    if (totalTax > 0) {\n      this.display([\"invoice_taxes_amount\", \"total_tax_currency\"]);\n    }\n\n    this.setData({\n      invoice_total_discount: parseFloat(totalDiscount.toFixed(2)),\n      invoice_taxes_amount: parseFloat(totalTax.toFixed(2)),\n      invoice_total: parseFloat(totalAmount.toFixed(2)),\n    });\n\n    if (exchangeRate) {\n      this.setData({\n        myr_total_amount: exchangeRate * parseFloat(totalAmount.toFixed(2)),\n      });\n    }\n  } else {\n    console.log(\"Not an array:\", items);\n  }\n};\n\n// Update sales orders when invoice is created (optional)\nconst updateSalesOrders = async () => {\n  try {\n    for (const soId of salesOrderIds) {\n      await db.collection(\"sales_order\").doc(soId).update({\n        invoice_status: \"Invoiced\",\n        update_time: new Date().toISOString(),\n      });\n      console.log(`Updated invoice status for SO ${soId}`);\n    }\n  } catch (error) {\n    console.error(\"Error updating sales order invoice status:\", error);\n  }\n};\n\n// Start the main process\nprocessSalesInvoice();\n"
            }
          },
          {
            "key": "954gv6qb",
            "action": "refreshFieldOptionData",
            "options": {
              "condition": "",
              "isCondition": false,
              "field": "goods_delivery_number",
              "valueTypes": {},
              "dataSource": {
                "args": {}
              }
            }
          }
        ]
      },
      {
        "key": "z5jh2lwo",
        "name": "onChange_SIfetchData",
        "func": "const data = this.getValues();\nconst salesOrderIds = Array.isArray(data.so_id) ? data.so_id : [data.so_id];\nconsole.log(\"Sales Order IDs:\", salesOrderIds);\n\n// Helper function to extract data from different response formats\nfunction extractData(result) {\n  if (Array.isArray(result) && result.length > 0) {\n    return result[0];\n  } else if (typeof result === \"object\" && result !== null) {\n    if (result.data) {\n      return Array.isArray(result.data) && result.data.length > 0\n        ? result.data[0]\n        : result.data;\n    } else if (\n      result.docs &&\n      Array.isArray(result.docs) &&\n      result.docs.length > 0\n    ) {\n      return result.docs[0].data ? result.docs[0].data() : result.docs[0];\n    }\n    return result;\n  }\n  return null;\n}\n\n// Helper function to calculate discount amount\nfunction calculateDiscount(grossValue, discount, discountUOM) {\n  if (!discount || discount === 0 || !discountUOM) {\n    return 0;\n  }\n\n  let discountAmount = 0;\n  if (discountUOM === \"Amount\") {\n    discountAmount = discount;\n  } else if (discountUOM === \"%\") {\n    discountAmount = (grossValue * discount) / 100;\n  }\n\n  // Cap discount at gross value\n  return Math.min(discountAmount, grossValue);\n}\n\n// Helper function to calculate tax\nfunction calculateTax(amountAfterDiscount, taxRate, taxInclusive) {\n  if (!taxRate) {\n    return {\n      taxAmount: 0,\n      finalAmount: amountAfterDiscount,\n    };\n  }\n\n  const taxRateDecimal = taxRate / 100;\n  let taxAmount = 0;\n  let finalAmount = amountAfterDiscount;\n\n  if (taxInclusive === 1) {\n    // Tax inclusive calculation\n    taxAmount =\n      amountAfterDiscount - amountAfterDiscount / (1 + taxRateDecimal);\n    finalAmount = amountAfterDiscount;\n  } else {\n    // Tax exclusive calculation\n    taxAmount = amountAfterDiscount * taxRateDecimal;\n    finalAmount = amountAfterDiscount + taxAmount;\n  }\n\n  return {\n    taxAmount: parseFloat(taxAmount.toFixed(2)),\n    finalAmount: parseFloat(finalAmount.toFixed(2)),\n  };\n}\n\n// Get GD numbers from arguments\nconst gdNumbers = arguments[0].value;\nconsole.log(\"GD Numbers:\", gdNumbers);\n\n// Check if gdNumbers is empty or invalid before proceeding\nif (!gdNumbers || (Array.isArray(gdNumbers) && gdNumbers.length === 0)) {\n  this.setData({ table_si: [] });\n  console.log(\"GD numbers is empty, skipping processing\");\n  return; // Exit early if gdNumbers is empty\n}\n\n// Display GD Numbers for user reference\nPromise.all(\n  gdNumbers.map((gdId) =>\n    db\n      .collection(\"goods_delivery\")\n      .doc(gdId) // Direct document reference\n      .get()\n      .then((doc) => (doc ? doc.data[0].delivery_no : null))\n  )\n).then((results) => {\n  const displayText = results.filter(Boolean).join(\", \");\n  console.log(\"gd\", results);\n  this.setData({ gd_no_display: displayText });\n});\n\n// Main processing\nconst processSalesInvoice = async () => {\n  try {\n    // Fetch Sales Order data for all sales order IDs\n    const soPromises = salesOrderIds.map(async (soId) => {\n      try {\n        const soResult = await db\n          .collection(\"sales_order\")\n          .where({\n            id: soId,\n          })\n          .get();\n\n        const soData = extractData(soResult);\n        console.log(`Extracted Sales Order data for ${soId}:`, soData);\n        return soData;\n      } catch (error) {\n        console.error(`Error retrieving data for SO ${soId}:`, error);\n        return null;\n      }\n    });\n\n    const allSOData = (await Promise.all(soPromises)).filter(Boolean);\n    console.log(\"All SO data:\", allSOData);\n\n    // Additional check to ensure we have SO data to process\n    if (allSOData.length === 0) {\n      console.error(\"No valid Sales Order data found\");\n      return;\n    }\n\n    // Additional validation check to make sure gdNumbers is an array\n    if (!Array.isArray(gdNumbers)) {\n      console.error(\"GD numbers is not an array:\", gdNumbers);\n      return;\n    }\n\n    // Fetch all Goods Delivery data\n    const gdPromises = gdNumbers.map(async (gdNumber) => {\n      try {\n        const gdResult = await db\n          .collection(\"goods_delivery\")\n          .where({\n            id: gdNumber,\n          })\n          .get();\n\n        const gdData = extractData(gdResult);\n        console.log(`Extracted GD data for ${gdNumber}:`, gdData);\n        return gdData;\n      } catch (error) {\n        console.error(`Error retrieving data for GD ${gdNumber}:`, error);\n        return null;\n      }\n    });\n\n    const allGDData = (await Promise.all(gdPromises)).filter(Boolean);\n    console.log(\"All GD data:\", allGDData);\n\n    // Additional check to ensure we have GD data to process\n    if (allGDData.length === 0) {\n      console.log(\"No valid GD data found, skipping further processing\");\n      return;\n    }\n\n    // Create a map of material IDs from all SOs to validate GD items\n    const validItems = new Set();\n    allSOData.forEach((soData) => {\n      const soItems = soData.table_so || [];\n      soItems.forEach((item) => {\n        if (item.item_name) {\n          validItems.add(item.item_name);\n        }\n      });\n    });\n\n    // Validate that GD items match SO items\n    let allGDItemsValid = true;\n    allGDData.forEach((gdData) => {\n      const gdItems = gdData.table_gd || [];\n      gdItems.forEach((item) => {\n        if (item.material_id && !validItems.has(item.material_id)) {\n          console.warn(`GD item ${item.material_id} is not in any Sales Order`);\n          allGDItemsValid = false;\n        }\n      });\n    });\n\n    if (!allGDItemsValid) {\n      console.warn(\n        \"Some GD items do not match any SO items. Proceeding with caution.\"\n      );\n      // You can decide whether to stop processing here or continue\n      // For now, we'll continue but you might want to add logic to stop if needed\n    }\n\n    // Process data and create table entries, keeping SO structure\n    const newTableSI = [];\n\n    // Create delivery quantity map from all GDs\n    const deliveryQtyMap = {};\n    allGDData.forEach((gdData) => {\n      const gdItems = gdData.table_gd || [];\n      gdItems.forEach((item) => {\n        if (item.material_id) {\n          if (!deliveryQtyMap[item.material_id]) {\n            deliveryQtyMap[item.material_id] = 0;\n          }\n          deliveryQtyMap[item.material_id] += parseFloat(item.gd_qty) || 0;\n        }\n      });\n    });\n\n    // Process each SO and maintain its structure\n    allSOData.forEach((soData) => {\n      const soItems = soData.table_so || [];\n\n      soItems.forEach((soItem) => {\n        const itemId = soItem.item_name;\n        if (!itemId) return;\n\n        // Get delivery quantity from our map\n        const deliveryQty = deliveryQtyMap[itemId] || 0;\n\n        // Create entry for this SO item\n        newTableSI.push({\n          line_so_id: soData.id || \"\",\n          line_so_no: soData.so_no || \"\",\n          material_id: itemId,\n          material_desc: soItem.so_desc || \"\",\n          so_order_quantity: parseFloat(soItem.so_quantity) || 0,\n          so_order_uom_id: soItem.so_item_uom,\n          good_delivery_quantity: deliveryQty,\n          unit_price: soItem.so_item_price,\n          si_discount: soItem.so_discount,\n          si_discount_uom_id: soItem.so_discount_uom,\n          si_tax_rate_id: soItem.so_tax_preference,\n          tax_rate_percent: soItem.so_tax_percentage,\n          si_tax_inclusive: soItem.so_tax_inclusive,\n          invoice_qty: deliveryQty,\n          invoice_qty_uom_id: soItem.so_item_uom,\n        });\n      });\n    });\n\n    console.log(\"Final table_si data:\", newTableSI);\n    await this.setData({\n      table_si: newTableSI,\n    });\n\n    // Calculate totals after setting table_si\n    await calculateTotals();\n  } catch (error) {\n    console.error(\"Error in processSalesInvoice:\", error);\n  }\n};\n\n// Function to calculate totals\nconst calculateTotals = () => {\n  const items = this.getValues().table_si;\n  const exchangeRate = data.exchange_rate;\n  let totalGross = 0;\n  let totalDiscount = 0;\n  let totalTax = 0;\n  let totalAmount = 0;\n\n  if (Array.isArray(items)) {\n    items.forEach((item, index) => {\n      const quantity = Number(item.invoice_qty) || 0;\n      const unitPrice = parseFloat(item.unit_price) || 0;\n      const grossValue = quantity * unitPrice;\n\n      totalGross += grossValue;\n\n      this.setData({\n        [`table_si.${index}.gross`]: grossValue,\n        [`table_si.${index}.si_amount`]: grossValue,\n        invoice_subtotal: totalGross,\n      });\n\n      // Calculate discount\n      const discount = parseFloat(item.si_discount) || 0;\n      const discountUOM = item.si_discount_uom_id;\n      const discountAmount = calculateDiscount(\n        grossValue,\n        discount,\n        discountUOM\n      );\n\n      if (discountAmount > 0) {\n        this.setData({\n          [`table_si.${index}.discount_amount`]: parseFloat(\n            discountAmount.toFixed(2)\n          ),\n        });\n      } else {\n        this.setData({\n          [`table_si.${index}.discount_amount`]: 0,\n        });\n      }\n\n      const amountAfterDiscount = grossValue - discountAmount;\n\n      // Calculate tax\n      const taxRate = Number(item.tax_rate_percent) || 0;\n      const taxInclusive = item.si_tax_inclusive;\n      const { taxAmount, finalAmount } = calculateTax(\n        amountAfterDiscount,\n        taxRate,\n        taxInclusive\n      );\n\n      // Set tax amount\n      this.setData({\n        [`table_si.${index}.tax_amount`]: taxAmount,\n      });\n\n      // Set final amount\n      this.setData({\n        [`table_si.${index}.si_amount`]: finalAmount,\n      });\n\n      totalDiscount += discountAmount;\n      totalTax += taxAmount;\n      totalAmount += finalAmount;\n    });\n\n    if (totalTax > 0) {\n      this.display([\"invoice_taxes_amount\", \"total_tax_currency\"]);\n    }\n\n    this.setData({\n      invoice_total_discount: parseFloat(totalDiscount.toFixed(2)),\n      invoice_taxes_amount: parseFloat(totalTax.toFixed(2)),\n      invoice_total: parseFloat(totalAmount.toFixed(2)),\n    });\n\n    if (exchangeRate) {\n      this.setData({\n        myr_total_amount: exchangeRate * parseFloat(totalAmount.toFixed(2)),\n      });\n    }\n  } else {\n    console.log(\"Not an array:\", items);\n  }\n};\n\n// Start the main process\nprocessSalesInvoice();\n",
        "type": "js"
      },
      {
        "key": "e063qm85",
        "name": "SIcalculation",
        "func": "const data = this.getValues();\nconst items = data.table_si;\nconst exchangeRate = data.exchange_rate;\nlet totalGross = 0;\nlet totalDiscount = 0;\nlet totalTax = 0;\nlet totalAmount = 0;\n\nif (Array.isArray(items)) {\n    items.forEach((item, index) => {\n        const quantity = Number(item.invoice_qty) || 0;\n        const unitPrice = parseFloat(item.unit_price) || 0;\n        const grossValue = quantity * unitPrice;\n        \n        totalGross += grossValue;\n\n        this.setData({\n            [`table_si.${index}.gross`]: grossValue,\n            [`table_si.${index}.si_amount`]: grossValue,\n            'invoice_subtotal': totalGross\n        });\n\n        let discount = parseFloat(item.si_discount) || 0;\n        const discountUOM = item.si_discount_uom_id;\n        let discountAmount = 0.00;\n        const taxRate = Number(item.tax_rate_percent) || 0;\n        const taxInclusive = item.si_tax_inclusive;\n\n        if(discountUOM){\n            if (discount !== 0) {\n                if (discountUOM === 'Amount') {\n                    discountAmount = discount;\n                } else if (discountUOM === '%') {\n                    discountAmount = (grossValue * discount) / 100;\n                }\n\n                if (discountAmount > grossValue) {\n                    \n                    discount = 0;\n                    discountAmount = 0;\n\n                    this.setData({\n                        [`table_si.${index}.si_discount`]: 0,\n                        [`table_si.${index}.discount_amount`]: 0\n                    });\n                } else {\n                    this.setData({\n                        [`table_si.${index}.discount_amount`]: parseFloat(discountAmount.toFixed(2))\n                    });\n                }\n            }\n        }\n        else {\n            this.setData({\n                [`table_si.${index}.discount_amount`]: 0\n            });\n        }\n        const amountAfterDiscount = grossValue - discountAmount;\n\n        // Calculate tax amount based on taxInclusive flag\n        let taxAmount = 0;\n        let finalAmount = amountAfterDiscount;\n\n        if (taxRate) {\n            const taxRateDecimal = taxRate / 100;\n\n            if (taxInclusive === 1) {\n                // Tax inclusive calculation\n                taxAmount = amountAfterDiscount - (amountAfterDiscount / (1 + taxRateDecimal));\n                finalAmount = amountAfterDiscount;\n            } else {\n                // Tax exclusive calculation\n                taxAmount = amountAfterDiscount * taxRateDecimal;\n                finalAmount = amountAfterDiscount + taxAmount;\n            }\n\n            // Set tax amount\n            this.setData({\n                [`table_si.${index}.tax_amount`]: parseFloat(taxAmount.toFixed(2))\n            });\n        } else {\n            this.setData({\n                [`table_si.${index}.tax_amount`]: 0\n            });\n        }\n\n        // Set final amount\n        this.setData({\n            [`table_si.${index}.si_amount`]: parseFloat(finalAmount.toFixed(2))\n        });\n\n        totalDiscount += discountAmount;\n        totalTax += taxAmount;\n        totalAmount += finalAmount;\n\n        if(totalTax > 0) {\n            this.display(['invoice_taxes_amount','total_tax_currency']);\n        }\n\n        this.setData({\n            'invoice_total_discount': parseFloat(totalDiscount.toFixed(2)),\n            'invoice_taxes_amount': parseFloat(totalTax.toFixed(2)),\n            'invoice_total': parseFloat(totalAmount.toFixed(2))\n        });\n\n        if(!exchangeRate){\n            return\n        } else {\n            this.setData({'myr_total_amount': exchangeRate * parseFloat(totalAmount.toFixed(2))})\n        }\n    });\n} else {\n    console.log(\"Not an array:\", items);\n}",
        "type": "js"
      },
      {
        "key": "qf9w3db9",
        "name": "onClick_save_as_draft",
        "func": "",
        "type": "rule",
        "rules": [
          {
            "key": "m9pofoo8",
            "action": "js",
            "options": {
              "func": "const closeDialog = () => {\n  if (this.parentGenerateForm) {\n    this.parentGenerateForm.$refs.SuPageDialogRef.hide();\n    this.parentGenerateForm.refresh();\n    this.hideLoading();\n  }\n};\n\nconst validateForm = (data, requiredFields) => {\n  const missingFields = requiredFields.filter((field) => {\n    const value = data[field.name];\n    if (Array.isArray(value)) return value.length === 0;\n    if (typeof value === \"string\") return value.trim() === \"\";\n    return !value;\n  });\n  return missingFields;\n};\n\nconst getPrefixData = async (organizationId) => {\n  const prefixEntry = await db\n    .collection(\"prefix_configuration\")\n    .where({\n      document_types: \"Sales Invoices\",\n      is_deleted: 0,\n      organization_id: organizationId,\n      is_active: 1,\n    })\n    .get();\n\n  const prefixData = await prefixEntry.data[0];\n\n  return prefixData;\n};\n\nconst generateDraftPrefix = async (organizationId) => {\n  try {\n    const prefixData = await getPrefixData(organizationId);\n    const currDraftNum = parseInt(prefixData.draft_number) + 1;\n    const newPrefix = \"DRAFT-SI-\" + currDraftNum;\n\n    db.collection(\"prefix_configuration\")\n      .where({\n        document_types: \"Sales Invoices\",\n        organization_id: organizationId,\n      })\n      .update({ draft_number: currDraftNum });\n\n    return newPrefix;\n  } catch (error) {\n    this.$message.error(error);\n  }\n};\n\n(async () => {\n  try {\n    this.showLoading();\n    const data = this.getValues();\n    const requiredFields = [{ name: \"so_id\", label: \"SO Number\" }];\n\n    const missingFields = await validateForm(data, requiredFields);\n\n    if (missingFields.length === 0) {\n      const page_status = data.page_status;\n      const salesInvoiceId = this.getValue(\"id\");\n\n      let organizationId = this.getVarGlobal(\"deptParentId\");\n      if (organizationId === \"0\") {\n        organizationId = this.getVarSystem(\"deptIds\").split(\",\")[0];\n      }\n\n      const {\n        so_id,\n        customer_id,\n        si_address_name,\n        si_address_contact,\n        goods_delivery_number,\n        sales_invoice_no,\n        sales_invoice_date,\n        sales_person_id,\n        si_payment_term_id,\n        si_description,\n        plant_id,\n        organization_id,\n        fileupload_hmtcurne,\n        so_no_display,\n        table_si,\n        invoice_subtotal,\n        invoice_total_discount,\n        invoice_taxes_amount,\n        invoice_total,\n        remarks,\n        si_shipping_address,\n        si_billing_address,\n        gd_no_display,\n        currency_code,\n        billing_address_line_1,\n        billing_address_line_2,\n        billing_address_line_3,\n        billing_address_line_4,\n        billing_address_city,\n        billing_address_state,\n        billing_postal_code,\n        billing_address_country,\n        shipping_address_line_1,\n        shipping_address_line_2,\n        shipping_address_line_3,\n        shipping_address_line_4,\n        shipping_address_city,\n        shipping_address_state,\n        shipping_postal_code,\n        shipping_address_country,\n        exchange_rate,\n        myr_total_amount,\n      } = data;\n\n      const entry = {\n        si_status: \"Draft\",\n        posted_status: \"Unposted\",\n        so_id,\n        customer_id,\n        si_address_name,\n        si_address_contact,\n        goods_delivery_number,\n        sales_invoice_no,\n        sales_invoice_date,\n        sales_person_id,\n        si_payment_term_id,\n        si_description,\n        plant_id,\n        organization_id,\n        so_no_display,\n        fileupload_hmtcurne,\n        table_si,\n        invoice_subtotal,\n        invoice_total_discount,\n        invoice_taxes_amount,\n        invoice_total,\n        remarks,\n        si_shipping_address,\n        si_billing_address,\n        gd_no_display,\n        currency_code,\n        billing_address_line_1,\n        billing_address_line_2,\n        billing_address_line_3,\n        billing_address_line_4,\n        billing_address_city,\n        billing_address_state,\n        billing_postal_code,\n        billing_address_country,\n        shipping_address_line_1,\n        shipping_address_line_2,\n        shipping_address_line_3,\n        shipping_address_line_4,\n        shipping_address_city,\n        shipping_address_state,\n        shipping_postal_code,\n        shipping_address_country,\n        exchange_rate,\n        myr_total_amount,\n      };\n\n      if (page_status === \"Add\" || page_status === \"Clone\") {\n        const newPrefix = await generateDraftPrefix(organizationId);\n        entry.sales_invoice_no = newPrefix;\n        await db.collection(\"sales_invoice\").add(entry);\n        this.$message.success(\"Add successfully\");\n        closeDialog();\n      } else if (page_status === \"Edit\") {\n        await db.collection(\"sales_invoice\").doc(salesInvoiceId).update(entry);\n        this.$message.success(\"Update successfully\");\n        closeDialog();\n      }\n    } else {\n      this.hideLoading();\n      const missingFieldNames = missingFields.map((f) => f.label).join(\", \");\n      this.$message.error(`Missing required fields: ${missingFieldNames}`);\n    }\n  } catch (error) {\n    this.$message.error(error);\n  }\n})();\n"
            }
          }
        ]
      },
      {
        "key": "ojm80kkn",
        "name": "onClick_manage_billing_address",
        "func": "const data = this.getValues();\n\nthis.routeLocation(\n    {\n    routeMode: \"dialog\",\n        routeInfo: {\n            source_id: \"1905102178127777793\",\n            name:\"Address\",\t\n        },\n    },\n    {   'address_purpose': 'Billing',\n        'address_line1': data.billing_address_line_1,\n        'address_line2': data.billing_address_line_2,\n        'address_line3': data.billing_address_line_3,\n        'address_line4': data.billing_address_line_4,\n        'city': data.billing_address_city,\n        'postal_code': data.billing_postal_code,\n        'state': data.billing_address_state,\n        'country': data.billing_address_country,\n        'moduleName':'si'\n    }\n);",
        "type": "js"
      },
      {
        "key": "xibb8q4c",
        "name": "onClick_manage_shipping_address",
        "func": "const data = this.getValues();\n\nthis.routeLocation(\n    {\n    routeMode: \"dialog\",\n        routeInfo: {\n            source_id: \"1905102178127777793\",\n            name:\"Address\",\t\n        },\n    },\n    {   'address_purpose': 'Shipping',\n        'address_line1': data.shipping_address_line_1,\n        'address_line2': data.shipping_address_line_2,\n        'address_line3': data.shipping_address_line_3,\n        'address_line4': data.shipping_address_line_4,\n        'city': data.shipping_address_city,\n        'postal_code': data.shipping_postal_code,\n        'state': data.shipping_address_state,\n        'country': data.shipping_address_country,\n        'moduleName':'si'\n    }\n);\n",
        "type": "js"
      },
      {
        "key": "mlkqamzp",
        "name": "onClick_save_as_completed",
        "func": "const closeDialog = () => {\n  if (this.parentGenerateForm) {\n    this.parentGenerateForm.$refs.SuPageDialogRef.hide();\n    this.parentGenerateForm.refresh();\n    this.hideLoading();\n  }\n};\n\nconst updateSalesOrderStatus = (salesOrderId, goodsDeliveryNo) => {\n  const completedQuery = db\n    .collection(\"sales_invoice\")\n    .where({ si_status: \"Completed\", so_id: salesOrderId });\n\n  const fullyPostedQuery = db\n    .collection(\"sales_invoice\")\n    .where({ si_status: \"Fully Posted\", so_id: salesOrderId });\n\n  Promise.all([\n    completedQuery.get(),\n    fullyPostedQuery.get(),\n    db.collection(\"sales_order\").where({ id: salesOrderId }).get(),\n  ]).then(([resComp, resPost, resSO]) => {\n    const allSIs = [...resComp.data, ...resPost.data] || [];\n    const soData = resSO.data[0];\n    if (!soData) return;\n\n    const soItems = soData.table_so || [];\n\n    // Create a map to sum received quantities for each item\n    const invoicedQtyMap = {};\n\n    // Initialize with zeros\n    soItems.forEach((item) => {\n      invoicedQtyMap[item.item_name] = 0;\n    });\n\n    // Sum received quantities from all PIs\n    allSIs.forEach((si) => {\n      (si.table_si || []).forEach((siItem) => {\n        if (invoicedQtyMap.hasOwnProperty(siItem.material_id)) {\n          invoicedQtyMap[siItem.material_id] += siItem.invoice_qty || 0;\n        }\n      });\n    });\n\n    // Check if all items are fully received\n    let allItemsComplete = false;\n    let anyItemProcessing = false;\n\n    soItems.forEach((item) => {\n      const orderedQty = item.so_quantity || 0;\n      const invoicedQty = invoicedQtyMap[item.item_name] || 0;\n\n      if (invoicedQty < orderedQty) {\n        anyItemProcessing = true;\n      } else {\n        allItemsComplete = true;\n      }\n    });\n\n    // Determine new status\n    let newSIStatus = soData.si_status;\n\n    if (allItemsComplete) {\n      newSIStatus = \"Fully Invoiced\";\n    } else if (anyItemProcessing) {\n      newSIStatus = \"Partially Invoiced\";\n    }\n\n    // Update PO status if changed\n    if (newSIStatus !== soData.si_status) {\n      db.collection(\"sales_order\").doc(soData.id).update({\n        si_status: newSIStatus,\n      });\n    }\n\n    goodsDeliveryNo.forEach((gd) => {\n      db.collection(\"goods_delivery\").doc(gd).update({\n        si_status: \"Fully Invoiced\",\n      });\n    });\n  });\n};\n\nconst validateForm = (data, requiredFields) => {\n  const missingFields = [];\n\n  requiredFields.forEach((field) => {\n    const value = data[field.name];\n\n    // Handle non-array fields (unchanged)\n    if (!field.isArray) {\n      if (validateField(value, field)) {\n        missingFields.push(field.label);\n      }\n      return;\n    }\n\n    // Handle array fields\n    if (!Array.isArray(value)) {\n      missingFields.push(`${field.label}`);\n      return;\n    }\n\n    if (value.length === 0) {\n      missingFields.push(`${field.label}`);\n      return;\n    }\n\n    // Check each item in the array\n    if (field.arrayType === \"object\" && field.arrayFields) {\n      value.forEach((item, index) => {\n        field.arrayFields.forEach((subField) => {\n          const subValue = item[subField.name];\n          if (validateField(subValue, subField)) {\n            missingFields.push(\n              `${subField.label} (in ${field.label} #${index + 1})`\n            );\n          }\n        });\n      });\n    }\n  });\n\n  return missingFields;\n};\n\nconst validateField = (value, field) => {\n  if (value === undefined || value === null) return true;\n  if (typeof value === \"string\") return value.trim() === \"\";\n  if (Array.isArray(value)) return value.length === 0;\n  if (typeof value === \"object\") return Object.keys(value).length === 0;\n  return !value;\n};\n\nconst getPrefixData = async (organizationId) => {\n  const prefixEntry = await db\n    .collection(\"prefix_configuration\")\n    .where({\n      document_types: \"Sales Invoices\",\n      is_deleted: 0,\n      organization_id: organizationId,\n      is_active: 1,\n    })\n    .get();\n\n  const prefixData = await prefixEntry.data[0];\n\n  return prefixData;\n};\n\nconst updatePrefix = async (organizationId, runningNumber) => {\n  try {\n    await db\n      .collection(\"prefix_configuration\")\n      .where({\n        document_types: \"Sales Invoices\",\n        is_deleted: 0,\n        organization_id: organizationId,\n      })\n      .update({ running_number: parseInt(runningNumber) + 1, has_record: 1 });\n  } catch (error) {\n    this.$message.error(error);\n  }\n};\n\nconst generatePrefix = (runNumber, now, prefixData) => {\n  let generated = prefixData.current_prefix_config;\n  generated = generated.replace(\"prefix\", prefixData.prefix_value);\n  generated = generated.replace(\"suffix\", prefixData.suffix_value);\n  generated = generated.replace(\n    \"month\",\n    String(now.getMonth() + 1).padStart(2, \"0\")\n  );\n  generated = generated.replace(\"day\", String(now.getDate()).padStart(2, \"0\"));\n  generated = generated.replace(\"year\", now.getFullYear());\n  generated = generated.replace(\n    \"running_number\",\n    String(runNumber).padStart(prefixData.padding_zeroes, \"0\")\n  );\n  return generated;\n};\n\nconst checkUniqueness = async (generatedPrefix) => {\n  const existingDoc = await db\n    .collection(\"sales_invoice\")\n    .where({ sales_invoice_no: generatedPrefix })\n    .get();\n  return existingDoc.data[0] ? false : true;\n};\n\nconst findUniquePrefix = async (prefixData) => {\n  const now = new Date();\n  let prefixToShow;\n  let runningNumber = prefixData.running_number;\n  let isUnique = false;\n  let maxAttempts = 10;\n  let attempts = 0;\n\n  while (!isUnique && attempts < maxAttempts) {\n    attempts++;\n    prefixToShow = await generatePrefix(runningNumber, now, prefixData);\n    isUnique = await checkUniqueness(prefixToShow);\n    if (!isUnique) {\n      runningNumber++;\n    }\n  }\n\n  if (!isUnique) {\n    this.$message.error(\n      \"Could not generate a unique Sales Invoices number after maximum attempts\"\n    );\n  }\n\n  return { prefixToShow, runningNumber };\n};\n\nconst addEntry = async (organizationId, entry) => {\n  try {\n    const prefixData = await getPrefixData(organizationId);\n    if (prefixData.length !== 0) {\n      await updatePrefix(organizationId, prefixData.running_number);\n      await db\n        .collection(\"sales_invoice\")\n        .add(entry)\n        .then(() => {\n          this.runWorkflow(\n            \"1917950696199892993\",\n            { sales_invoice_no: entry.sales_invoice_no },\n            async (res) => {\n              console.log(\"成功结果：\", res);\n            },\n            (err) => {\n              alert();\n              console.error(\"失败结果：\", err);\n              closeDialog();\n            }\n          );\n        });\n      await updateSalesOrderStatus(entry.so_id, entry.goods_delivery_number);\n      this.$message.success(\"Add successfully\");\n      closeDialog();\n    }\n  } catch (error) {\n    this.$message.error(error);\n  }\n};\n\nconst updateEntry = async (organizationId, entry, salesInvoiceId) => {\n  try {\n    const prefixData = await getPrefixData(organizationId);\n\n    if (prefixData.length !== 0) {\n      const { prefixToShow, runningNumber } = await findUniquePrefix(\n        prefixData\n      );\n\n      await updatePrefix(organizationId, runningNumber);\n\n      entry.sales_invoice_no = prefixToShow;\n      await db\n        .collection(\"sales_invoice\")\n        .doc(salesInvoiceId)\n        .update(entry)\n        .then(() => {\n          this.runWorkflow(\n            \"1917950696199892993\",\n            { sales_invoice_no: entry.sales_invoice_no },\n            async (res) => {\n              console.log(\"成功结果：\", res);\n            },\n            (err) => {\n              alert();\n              console.error(\"失败结果：\", err);\n              closeDialog();\n            }\n          );\n        });\n      await updateSalesOrderStatus(entry.so_id, entry.goods_delivery_number);\n      this.$message.success(\"Update successfully\");\n      await closeDialog();\n    }\n  } catch (error) {\n    this.$message.error(error);\n  }\n};\n\n(async () => {\n  try {\n    const data = this.getValues();\n    this.showLoading();\n\n    const requiredFields = [\n      { name: \"so_id\", label: \"SO Number\" },\n      { name: \"goods_delivery_number\", label: \"Goods Delivery Number\" },\n      { name: \"sales_invoice_no\", label: \"Sales Invoice Number \" },\n      { name: \"sales_invoice_date\", label: \"Sales Invoice Date\" },\n      { name: \"si_description\", label: \"Description\" },\n      {\n        name: \"table_si\",\n        label: \"SI Items\",\n        isArray: true,\n        arrayType: \"object\",\n        arrayFields: [],\n      },\n    ];\n\n    const missingFields = await validateForm(data, requiredFields);\n\n    if (missingFields.length === 0) {\n      const page_status = this.getValue(\"page_status\");\n\n      let organizationId = this.getVarGlobal(\"deptParentId\");\n      if (organizationId === \"0\") {\n        organizationId = this.getVarSystem(\"deptIds\").split(\",\")[0];\n      }\n\n      const {\n        so_id,\n        customer_id,\n        si_address_name,\n        si_address_contact,\n        goods_delivery_number,\n        sales_invoice_no,\n        sales_invoice_date,\n        sales_person_id,\n        si_payment_term_id,\n        si_description,\n        plant_id,\n        organization_id,\n        fileupload_hmtcurne,\n        so_no_display,\n        table_si,\n        invoice_subtotal,\n        invoice_total_discount,\n        invoice_taxes_amount,\n        invoice_total,\n        remarks,\n        si_shipping_address,\n        si_billing_address,\n        gd_no_display,\n        currency_code,\n        billing_address_line_1,\n        billing_address_line_2,\n        billing_address_line_3,\n        billing_address_line_4,\n        billing_address_city,\n        billing_address_state,\n        billing_postal_code,\n        billing_address_country,\n        shipping_address_line_1,\n        shipping_address_line_2,\n        shipping_address_line_3,\n        shipping_address_line_4,\n        shipping_address_city,\n        shipping_address_state,\n        shipping_postal_code,\n        shipping_address_country,\n        exchange_rate,\n        myr_total_amount,\n      } = data;\n\n      const entry = {\n        si_status: \"Completed\",\n        posted_status: \"Unposted\",\n        so_id,\n        customer_id,\n        si_address_name,\n        si_address_contact,\n        goods_delivery_number,\n        sales_invoice_no,\n        sales_invoice_date,\n        sales_person_id,\n        si_payment_term_id,\n        si_description,\n        plant_id,\n        organization_id,\n        so_no_display,\n        fileupload_hmtcurne,\n        table_si,\n        invoice_subtotal,\n        invoice_total_discount,\n        invoice_taxes_amount,\n        invoice_total,\n        remarks,\n        si_shipping_address,\n        si_billing_address,\n        gd_no_display,\n        currency_code,\n        billing_address_line_1,\n        billing_address_line_2,\n        billing_address_line_3,\n        billing_address_line_4,\n        billing_address_city,\n        billing_address_state,\n        billing_postal_code,\n        billing_address_country,\n        shipping_address_line_1,\n        shipping_address_line_2,\n        shipping_address_line_3,\n        shipping_address_line_4,\n        shipping_address_city,\n        shipping_address_state,\n        shipping_postal_code,\n        shipping_address_country,\n        exchange_rate,\n        myr_total_amount,\n      };\n\n      if (page_status === \"Add\") {\n        await addEntry(organizationId, entry);\n      } else if (page_status === \"Edit\") {\n        const salesInvoiceId = this.getValue(\"id\");\n        await updateEntry(organizationId, entry, salesInvoiceId);\n      }\n    } else {\n      this.hideLoading();\n      this.$message.error(`Missing fields: ${missingFields.join(\", \")}`);\n    }\n  } catch (error) {\n    this.hideLoading();\n    this.$message.error(error);\n  }\n})();\n",
        "type": "js"
      },
      {
        "key": "2knzknsc",
        "name": "onClick_save_as_completed_posted",
        "func": "// Store reference to this for consistent context\nconst self = this;\n\nconst closeDialog = () => {\n  if (self.parentGenerateForm) {\n    self.parentGenerateForm.$refs.SuPageDialogRef.hide();\n    self.parentGenerateForm.refresh();\n    self.hideLoading();\n  }\n};\n\nconst updateSalesOrderStatus = async (salesInvoiceId) => {\n  try {\n    const currentSIQuery = await db\n      .collection(\"sales_invoice\")\n      .where({ id: salesInvoiceId })\n      .get();\n\n    if (!currentSIQuery.data || currentSIQuery.data.length === 0) {\n      console.error(\"Sales invoice not found:\", salesInvoiceId);\n      return;\n    }\n\n    const currentSI = currentSIQuery.data[0];\n\n    const [resComp, resPost, resSO] = await Promise.all([\n      db\n        .collection(\"sales_invoice\")\n        .where({ si_status: \"Completed\", so_id: currentSI.so_id })\n        .get(),\n      db\n        .collection(\"sales_invoice\")\n        .where({ si_status: \"Fully Posted\", so_id: currentSI.so_id })\n        .get(),\n      db.collection(\"sales_order\").where({ id: currentSI.so_id }).get(),\n    ]);\n\n    const allSIs = [...(resComp.data || []), ...(resPost.data || [])] || [];\n    const postSIs = resPost.data || [];\n\n    if (!resSO.data || resSO.data.length === 0) {\n      console.error(\"Sales order not found for SO ID:\", currentSI.so_id);\n      return;\n    }\n\n    const soData = resSO.data[0];\n    const soItems = soData.table_so || [];\n\n    // Create a map to sum received quantities for each item\n    const invoicedQtyMap = {};\n    const postedQtyMap = {};\n\n    // Initialize with zeros\n    soItems.forEach((item) => {\n      invoicedQtyMap[item.item_name] = 0;\n      postedQtyMap[item.item_name] = 0;\n    });\n\n    // Sum received quantities from all SIs\n    allSIs.forEach((si) => {\n      (si.table_si || []).forEach((siItem) => {\n        if (invoicedQtyMap.hasOwnProperty(siItem.material_id)) {\n          invoicedQtyMap[siItem.material_id] += siItem.invoice_qty || 0;\n        }\n      });\n    });\n\n    postSIs.forEach((si) => {\n      (si.table_si || []).forEach((siItem) => {\n        if (postedQtyMap.hasOwnProperty(siItem.material_id)) {\n          postedQtyMap[siItem.material_id] += siItem.invoice_qty || 0;\n        }\n      });\n    });\n\n    let allItemsComplete = true;\n    let allItemsPosted = true;\n    let anyItemProcessing = false;\n    let anyItemPartiallyPosted = false;\n\n    soItems.forEach((item) => {\n      const orderedQty = item.so_quantity || 0;\n      const invoicedQty = invoicedQtyMap[item.item_name] || 0;\n      const postedQty = postedQtyMap[item.item_name] || 0;\n\n      if (invoicedQty < orderedQty) {\n        allItemsComplete = false;\n        if (invoicedQty > 0) {\n          anyItemProcessing = true;\n        }\n      }\n\n      if (postedQty < orderedQty) {\n        allItemsPosted = false;\n        if (postedQty > 0) {\n          anyItemPartiallyPosted = true;\n        }\n      }\n    });\n\n    const newSIStatus = allItemsComplete\n      ? \"Fully Invoiced\"\n      : anyItemProcessing\n      ? \"Partially Invoiced\"\n      : soData.si_status;\n\n    const newSIPostedStatus = allItemsPosted\n      ? \"Fully Posted\"\n      : anyItemPartiallyPosted\n      ? \"Partially Posted\"\n      : soData.si_posted_status;\n\n    // Prepare updates\n    const updates = [];\n\n    if (newSIStatus !== soData.si_status) {\n      updates.push(\n        db\n          .collection(\"sales_order\")\n          .doc(currentSI.so_id)\n          .update({ si_status: newSIStatus })\n      );\n    }\n\n    if (newSIPostedStatus !== soData.si_posted_status) {\n      updates.push(\n        db\n          .collection(\"sales_order\")\n          .doc(currentSI.so_id)\n          .update({ si_posted_status: newSIPostedStatus })\n      );\n    }\n\n    // Update GDs - Only if they exist\n    if (\n      currentSI.goods_delivery_number &&\n      Array.isArray(currentSI.goods_delivery_number)\n    ) {\n      const gdUpdates = currentSI.goods_delivery_number.map((gd) =>\n        db\n          .collection(\"goods_delivery\")\n          .doc(gd)\n          .update({ si_status: \"Fully Invoiced\" })\n      );\n      updates.push(...gdUpdates);\n    }\n\n    if (updates.length > 0) {\n      return Promise.all(updates);\n    }\n\n    return Promise.resolve(); // Return resolved promise if no updates needed\n  } catch (error) {\n    console.error(\"Error in updateSalesOrderStatus:\", error);\n    return Promise.reject(error);\n  }\n};\n\nconst validateForm = (data, requiredFields) => {\n  const missingFields = [];\n\n  requiredFields.forEach((field) => {\n    const value = data[field.name];\n\n    // Handle non-array fields (unchanged)\n    if (!field.isArray) {\n      if (validateField(value, field)) {\n        missingFields.push(field.label);\n      }\n      return;\n    }\n\n    // Handle array fields\n    if (!Array.isArray(value)) {\n      missingFields.push(`${field.label}`);\n      return;\n    }\n\n    if (value.length === 0) {\n      missingFields.push(`${field.label}`);\n      return;\n    }\n\n    // Check each item in the array\n    if (field.arrayType === \"object\" && field.arrayFields) {\n      value.forEach((item, index) => {\n        field.arrayFields.forEach((subField) => {\n          const subValue = item[subField.name];\n          if (validateField(subValue, subField)) {\n            missingFields.push(\n              `${subField.label} (in ${field.label} #${index + 1})`\n            );\n          }\n        });\n      });\n    }\n  });\n\n  return missingFields;\n};\n\nconst validateField = (value, field) => {\n  if (value === undefined || value === null) return true;\n  if (typeof value === \"string\") return value.trim() === \"\";\n  if (Array.isArray(value)) return value.length === 0;\n  if (typeof value === \"object\") return Object.keys(value).length === 0;\n  return !value;\n};\n\nconst getPrefixData = async (organizationId) => {\n  try {\n    const prefixEntry = await db\n      .collection(\"prefix_configuration\")\n      .where({\n        document_types: \"Sales Invoices\",\n        is_deleted: 0,\n        organization_id: organizationId,\n        is_active: 1,\n      })\n      .get();\n\n    if (!prefixEntry.data || prefixEntry.data.length === 0) {\n      throw new Error(\"No prefix configuration found for organization\");\n    }\n\n    return prefixEntry.data[0];\n  } catch (error) {\n    console.error(\"Error fetching prefix data:\", error);\n    throw error;\n  }\n};\n\nconst updatePrefix = async (organizationId, runningNumber) => {\n  try {\n    await db\n      .collection(\"prefix_configuration\")\n      .where({\n        document_types: \"Sales Invoices\",\n        is_deleted: 0,\n        organization_id: organizationId,\n      })\n      .update({ running_number: parseInt(runningNumber) + 1, has_record: 1 });\n  } catch (error) {\n    console.error(\"Error updating prefix:\", error);\n    self.$message.error(\"Failed to update prefix: \" + error.message);\n    throw error;\n  }\n};\n\nconst generatePrefix = (runNumber, now, prefixData) => {\n  let generated = prefixData.current_prefix_config;\n  generated = generated.replace(\"prefix\", prefixData.prefix_value);\n  generated = generated.replace(\"suffix\", prefixData.suffix_value);\n  generated = generated.replace(\n    \"month\",\n    String(now.getMonth() + 1).padStart(2, \"0\")\n  );\n  generated = generated.replace(\"day\", String(now.getDate()).padStart(2, \"0\"));\n  generated = generated.replace(\"year\", now.getFullYear());\n  generated = generated.replace(\n    \"running_number\",\n    String(runNumber).padStart(prefixData.padding_zeroes, \"0\")\n  );\n  return generated;\n};\n\nconst checkUniqueness = async (generatedPrefix) => {\n  const existingDoc = await db\n    .collection(\"sales_invoice\")\n    .where({ sales_invoice_no: generatedPrefix })\n    .get();\n  return !existingDoc.data || existingDoc.data.length === 0;\n};\n\nconst findUniquePrefix = async (prefixData) => {\n  const now = new Date();\n  let prefixToShow;\n  let runningNumber = prefixData.running_number;\n  let isUnique = false;\n  let maxAttempts = 10;\n  let attempts = 0;\n\n  while (!isUnique && attempts < maxAttempts) {\n    attempts++;\n    prefixToShow = generatePrefix(runningNumber, now, prefixData);\n    isUnique = await checkUniqueness(prefixToShow);\n    if (!isUnique) {\n      runningNumber++;\n    }\n  }\n\n  if (!isUnique) {\n    throw new Error(\n      \"Could not generate a unique Sales Invoices number after maximum attempts\"\n    );\n  }\n\n  return { prefixToShow, runningNumber };\n};\n\nconst addEntry = async (organizationId, entry) => {\n  try {\n    const prefixData = await getPrefixData(organizationId);\n\n    if (!prefixData || !prefixData.id) {\n      throw new Error(\"Invalid prefix configuration\");\n    }\n\n    const { prefixToShow, runningNumber } = await findUniquePrefix(prefixData);\n\n    // Set the generated prefix\n    entry.sales_invoice_no = prefixToShow;\n\n    // Transaction-like approach to ensure data consistency\n    await updatePrefix(organizationId, runningNumber);\n\n    const addResult = await db.collection(\"sales_invoice\").add(entry);\n\n    // Run workflow for the newly added invoice\n    await new Promise((resolve, reject) => {\n      self.runWorkflow(\n        \"1917950696199892993\",\n        { sales_invoice_no: entry.sales_invoice_no },\n        (res) => {\n          console.log(\"Workflow 1 completed successfully:\", res);\n          resolve(res);\n        },\n        (err) => {\n          console.error(\"Workflow 1 failed:\", err);\n          self.$message.error(\n            \"Workflow execution failed: \" + (err.message || \"Unknown error\")\n          );\n          reject(err);\n        }\n      );\n    });\n\n    // Run second workflow\n    await new Promise((resolve, reject) => {\n      self.runWorkflow(\n        \"1902567975299432449\",\n        { key: \"value\" },\n        async (res) => {\n          console.log(\"Workflow 2 completed successfully:\", res);\n\n          const siList = res.data.result || [];\n\n          // Process all successful SIs in parallel\n          try {\n            await Promise.all(\n              siList\n                .filter((si) => si.status === \"SUCCESS\")\n                .map((si) => updateSalesOrderStatus(si.id))\n            );\n\n            self.$message.success(\"Add successfully\");\n            closeDialog();\n            resolve(res);\n          } catch (updateError) {\n            console.error(\"Error updating sales order status:\", updateError);\n            self.$message.error(\n              \"Add successful but failed to update related records\"\n            );\n            closeDialog();\n            resolve(res); // Still resolve since the add was successful\n          }\n        },\n        (err) => {\n          console.error(\"Workflow 2 failed:\", err);\n          self.$message.error(\n            \"Workflow execution failed: \" + (err.message || \"Unknown error\")\n          );\n          reject(err);\n        }\n      );\n    });\n  } catch (error) {\n    console.error(\"Error in addEntry:\", error);\n    self.$message.error(error.message || \"Failed to add Sales Invoice\");\n    self.hideLoading();\n    throw error;\n  }\n};\n\nconst updateEntry = async (organizationId, entry, salesInvoiceId) => {\n  try {\n    // For updates, we should use the existing sales_invoice_no\n    // No need to generate a new one unless specifically requested\n\n    await db.collection(\"sales_invoice\").doc(salesInvoiceId).update(entry);\n\n    // Run first workflow\n    await new Promise((resolve, reject) => {\n      self.runWorkflow(\n        \"1917950696199892993\",\n        { sales_invoice_no: entry.sales_invoice_no },\n        (res) => {\n          console.log(\"Workflow 1 completed successfully:\", res);\n          resolve(res);\n        },\n        (err) => {\n          console.error(\"Workflow 1 failed:\", err);\n          self.$message.error(\n            \"Workflow execution failed: \" + (err.message || \"Unknown error\")\n          );\n          reject(err);\n        }\n      );\n    });\n\n    // Run second workflow\n    await new Promise((resolve, reject) => {\n      self.runWorkflow(\n        \"1902567975299432449\",\n        { key: \"value\" },\n        async (res) => {\n          console.log(\"Workflow 2 completed successfully:\", res);\n\n          const siList = res.data.result || [];\n\n          // Process all successful SIs in parallel\n          try {\n            await Promise.all(\n              siList\n                .filter((si) => si.status === \"SUCCESS\")\n                .map((si) => updateSalesOrderStatus(si.id))\n            );\n\n            self.$message.success(\"Update successfully\");\n            closeDialog();\n            resolve(res);\n          } catch (updateError) {\n            console.error(\"Error updating sales order status:\", updateError);\n            self.$message.error(\n              \"Update successful but failed to update related records\"\n            );\n            closeDialog();\n            resolve(res); // Still resolve since the update was successful\n          }\n        },\n        (err) => {\n          console.error(\"Workflow 2 failed:\", err);\n          self.$message.error(\n            \"Workflow execution failed: \" + (err.message || \"Unknown error\")\n          );\n          reject(err);\n        }\n      );\n    });\n  } catch (error) {\n    console.error(\"Error in updateEntry:\", error);\n    self.$message.error(error.message || \"Failed to update Sales Invoice\");\n    self.hideLoading();\n    throw error;\n  }\n};\n\n// Main execution\n(async () => {\n  try {\n    const data = self.getValues();\n    self.showLoading();\n\n    const requiredFields = [\n      { name: \"so_id\", label: \"SO Number\" },\n      { name: \"goods_delivery_number\", label: \"Goods Delivery Number\" },\n      { name: \"sales_invoice_no\", label: \"Sales Invoice Number \" },\n      { name: \"sales_invoice_date\", label: \"Sales Invoice Date\" },\n      { name: \"si_description\", label: \"Description\" },\n      {\n        name: \"table_si\",\n        label: \"SI Items\",\n        isArray: true,\n        arrayType: \"object\",\n        arrayFields: [],\n      },\n    ];\n\n    const missingFields = validateForm(data, requiredFields);\n\n    if (missingFields.length === 0) {\n      const page_status = self.getValue(\"page_status\");\n\n      let organizationId = self.getVarGlobal(\"deptParentId\");\n      if (!organizationId || organizationId === \"0\") {\n        const deptIds = self.getVarSystem(\"deptIds\");\n        if (!deptIds) {\n          throw new Error(\"No valid department ID found\");\n        }\n        organizationId = deptIds.split(\",\")[0];\n      }\n\n      const {\n        so_id,\n        customer_id,\n        si_address_name,\n        si_address_contact,\n        goods_delivery_number,\n        sales_invoice_no,\n        sales_invoice_date,\n        sales_person_id,\n        si_payment_term_id,\n        si_description,\n        plant_id,\n        organization_id,\n        fileupload_hmtcurne,\n        so_no_display,\n        table_si,\n        invoice_subtotal,\n        invoice_total_discount,\n        invoice_taxes_amount,\n        invoice_total,\n        remarks,\n        si_shipping_address,\n        si_billing_address,\n        gd_no_display,\n        currency_code,\n        billing_address_line_1,\n        billing_address_line_2,\n        billing_address_line_3,\n        billing_address_line_4,\n        billing_address_city,\n        billing_address_state,\n        billing_postal_code,\n        billing_address_country,\n        shipping_address_line_1,\n        shipping_address_line_2,\n        shipping_address_line_3,\n        shipping_address_line_4,\n        shipping_address_city,\n        shipping_address_state,\n        shipping_postal_code,\n        shipping_address_country,\n        exchange_rate,\n        myr_total_amount,\n      } = data;\n\n      const entry = {\n        si_status: \"Completed\",\n        posted_status: \"Pending Post\",\n        so_id,\n        customer_id,\n        si_address_name,\n        si_address_contact,\n        goods_delivery_number,\n        sales_invoice_no,\n        sales_invoice_date,\n        sales_person_id,\n        si_payment_term_id,\n        si_description,\n        plant_id,\n        organization_id,\n        so_no_display,\n        fileupload_hmtcurne,\n        table_si,\n        invoice_subtotal,\n        invoice_total_discount,\n        invoice_taxes_amount,\n        invoice_total,\n        remarks,\n        si_shipping_address,\n        si_billing_address,\n        gd_no_display,\n        currency_code,\n        billing_address_line_1,\n        billing_address_line_2,\n        billing_address_line_3,\n        billing_address_line_4,\n        billing_address_city,\n        billing_address_state,\n        billing_postal_code,\n        billing_address_country,\n        shipping_address_line_1,\n        shipping_address_line_2,\n        shipping_address_line_3,\n        shipping_address_line_4,\n        shipping_address_city,\n        shipping_address_state,\n        shipping_postal_code,\n        shipping_address_country,\n        exchange_rate,\n        myr_total_amount,\n      };\n\n      if (page_status === \"Add\") {\n        await addEntry(organizationId, entry);\n      } else if (page_status === \"Edit\") {\n        const salesInvoiceId = self.getValue(\"id\");\n        if (!salesInvoiceId) {\n          throw new Error(\"Sales Invoice ID is required for editing\");\n        }\n        await updateEntry(organizationId, entry, salesInvoiceId);\n      } else {\n        throw new Error(\"Unknown page status: \" + page_status);\n      }\n    } else {\n      self.hideLoading();\n      self.$message.error(`Missing fields: ${missingFields.join(\", \")}`);\n    }\n  } catch (error) {\n    console.error(\"Main execution error:\", error);\n    self.hideLoading();\n    self.$message.error(error.message || \"An unexpected error occurred\");\n  }\n})();\n",
        "type": "js"
      },
      {
        "key": "9g4mjczn",
        "name": "onChange_address",
        "func": "const data = this.getValues();\n\n// Reusable function to format address (now properly returning a Promise)\nconst formatAddress = (addressData, countryId, stateId) => {\n    return Promise.all([  // Added return here\n      db.collection('country').where({ id: countryId }).get(),\n      db.collection('state').where({ id: stateId }).get(),\n    ])\n    .then(([resCountry, resState]) => {\n        const countryName = resCountry?.data[0]?.country_name || '';\n        const stateName = resState?.data[0]?.state_name || '';\n    \n        const addressComponents = [\n          addressData.line1,\n          addressData.line2,\n          addressData.line3,\n          addressData.line4,\n          addressData.city,\n          addressData.postalCode,\n          stateName,\n          countryName,\n        ].filter(component => component && component.trim() !== '');\n    \n        return addressComponents.join(',\\n');\n    });\n};\n\n// Process both addresses in parallel\nPromise.all([\n  formatAddress(\n    {\n      line1: data.shipping_address_line_1,\n      line2: data.shipping_address_line_2,\n      line3: data.shipping_address_line_3,\n      line4: data.shipping_address_line_4,\n      city: data.shipping_address_city,\n      postalCode: data.shipping_postal_code,\n    },\n    data.shipping_address_country,\n    data.shipping_address_state\n  ),\n  formatAddress(\n    {\n      line1: data.billing_address_line_1,\n      line2: data.billing_address_line_2,\n      line3: data.billing_address_line_3,\n      line4: data.billing_address_line_4,\n      city: data.billing_address_city,\n      postalCode: data.billing_postal_code,\n    },\n    data.billing_address_country,\n    data.billing_address_state\n  ),\n])\n.then(([shippingAddress, billingAddress]) => {\n  // Set both addresses at once\n  this.setData({\n    'si_shipping_address': shippingAddress,\n    'si_billing_address': billingAddress\n  });\n})\n.catch(err => {\n  console.error('Error processing addresses:', err);\n});",
        "type": "js"
      },
      {
        "key": "j0i3xkkb",
        "name": "onClick_posted",
        "func": "const closeDialog = () => {\n    if (this.parentGenerateForm) {\n        this.parentGenerateForm.$refs.SuPageDialogRef.hide();\n        this.parentGenerateForm.refresh();\n        this.hideLoading();\n    }\n};\n  \nconst updateSalesOrderStatus = async (salesInvoiceId) => {\n\n    const currentSIQuery = await db.collection('sales_invoice').where({ id: salesInvoiceId }).get();\n\n    const currentSI = currentSIQuery.data[0];\n\n    const fullyPostedQuery = db.collection('sales_invoice')\n    .where({si_status: 'Fully Posted', so_id: currentSI.so_id});\n\n    Promise.all([\n        fullyPostedQuery.get(),\n        db.collection('sales_order').where({ id: currentSI.so_id }).get()\n    ])\n    .then(([resPost, resSO]) => {\n        const allSIs = resPost.data || [];\n        const soData = resSO.data[0];\n        if (!soData) return;\n        \n        const soItems = soData.table_so || [];\n        \n        // Create a map to sum received quantities for each item\n        const invoicedQtyMap = {};\n        \n        // Initialize with zeros\n        soItems.forEach(item => {\n            invoicedQtyMap[item.item_name] = 0;\n        });\n        \n        // Sum received quantities from all PIs\n        allSIs.forEach(si => {\n            (si.table_si || []).forEach(siItem => {\n            if (invoicedQtyMap.hasOwnProperty(siItem.material_id)) {\n                invoicedQtyMap[siItem.material_id] += siItem.invoice_qty || 0;\n            }\n            });\n        });\n        \n        // Check if all items are fully received\n        let allItemsComplete = true;\n        let anyItemProcessing = false;\n        \n        soItems.forEach(item => {\n            const orderedQty = item.so_quantity || 0;\n            const invoicedQty = invoicedQtyMap[item.item_name] || 0;\n            \n            if (invoicedQty < orderedQty) {\n                allItemsComplete = false;\n                if (invoicedQty > 0) {\n                    anyItemProcessing = true;\n                }\n            }\n        });\n        \n        // Determine new status\n        const newSIStatus = allItemsComplete ? 'Fully Posted' :\n                            anyItemProcessing ? 'Partially Posted' :\n                                    soData.si_posted_status;\n        \n        \n        // Update PO status if changed\n        if (newSIStatus !== soData.si_posted_status) {\n            db.collection('sales_order')\n            .doc(currentSI.so_id)\n            .update({ \n                si_posted_status: newSIStatus });\n        }\n    })\n};\n  \n(async () => {\n    try{\n        this.showLoading();\n  \n        const salesInvoiceId = this.getValue('id');\n        await db.collection(\"sales_invoice\").doc(salesInvoiceId).update({posted_status: \"Pending Post\"});\n        await this.runWorkflow(\n            '1902567975299432449',\n            {key: 'value'},\n            (res) => {\n                console.log(\"成功结果：\", res);\n                const siList = res.data.result;\n\n                siList.forEach(async (si) => {\n                if(si.status === 'SUCCESS'){\n                    await updateSalesOrderStatus(si.id);\n                    this.$message.success('Post successfully')\n                    closeDialog();\n                }\n                });\n            },\n            (err) => {\n                console.error(\"失败结果：\", err);\n            }\n        )\n    } catch (error) {\n      this.hideLoading();\n      this.$message.error(error);\n    }\n})();",
        "type": "js"
      },
      {
        "key": "bkz5djda",
        "name": "onChangeTotal",
        "func": "const exchangeRate = this.getValue('exchange_rate')\nconst siTotal = this.getValue('invoice_total')\n\nif(!exchangeRate){\n    return\n}\n\nif(siTotal === undefined || siTotal === 0){\n  this.setData({'myr_total_amount': 0.00})\n} else {\n  this.setData({'myr_total_amount': exchangeRate * siTotal})\n}",
        "type": "js"
      },
      {
        "key": "iwup0a1o",
        "name": "onChange_iwup0a1o",
        "func": "",
        "type": "rule"
      },
      {
        "key": "2a1x6qji",
        "name": "onChange_Customer",
        "func": "const salesOrderId = this.getValue(\"fake_so_id\");\n\nconst getDbData = async () => {\n  const res = await db\n    .collection(\"sales_order\")\n    .where({ id: salesOrderId })\n    .get();\n  return res.data[0];\n};\n\nconst resetFormFields = () =>\n  this.setData({\n    ...[\"billing\", \"shipping\"].reduce((acc, type) => {\n      [\n        \"address_line_1\",\n        \"address_line_2\",\n        \"address_line_3\",\n        \"address_line_4\",\n        \"address_city\",\n        \"address_state\",\n        \"postal_code\",\n        \"address_country\",\n      ].forEach((key) => {\n        acc[`${type}_${key}`] = \"\";\n      });\n      return acc;\n    }, {}),\n    si_address_name: \"\",\n  });\n\nconst formatAddress = async (\n  { line1, line2, line3, line4, city, postalCode },\n  countryId,\n  stateId\n) => {\n  const [resCountry, resState] = await Promise.all([\n    db.collection(\"country\").where({ id: countryId }).get(),\n    db.collection(\"state\").where({ id: stateId }).get(),\n  ]);\n  return [\n    line1,\n    line2,\n    line3,\n    line4,\n    city,\n    postalCode,\n    resState.data[0]?.state_name,\n    resCountry.data[0]?.country_name,\n  ]\n    .filter(Boolean)\n    .join(\",\\n\");\n};\n\nconst setAddressFields = async (type, addr) => {\n  const formatted = await formatAddress(\n    {\n      line1: addr.address_line_1,\n      line2: addr.address_line_2,\n      line3: addr.address_line_3,\n      line4: addr.address_line_4,\n      city: addr.address_city,\n      postalCode: addr.postal_code,\n    },\n    addr.address_country,\n    addr.address_state\n  );\n\n  const base = [\n    \"address_line_1\",\n    \"address_line_2\",\n    \"address_line_3\",\n    \"address_line_4\",\n    \"address_city\",\n    \"address_state\",\n    \"postal_code\",\n    \"address_country\",\n  ].reduce(\n    (acc, key) => {\n      acc[`${type}_${key}`] = addr[key];\n      return acc;\n    },\n    { [`si_${type}_address`]: formatted }\n  );\n\n  this.setData(base);\n};\n\nconst init = async () => {\n  if (!salesOrderId) return;\n  resetFormFields();\n  const d = await getDbData();\n  const currencyCode = d.so_currency;\n\n  if (!currencyCode) {\n    this.hide([\n      \"exchange_rate\",\n      \"exchange_rate_myr\",\n      \"exchange_rate_currency\",\n      \"myr_total_amount\",\n      \"total_amount_myr\",\n    ]);\n    return;\n  }\n  this.setData({\n    total_gross_currency: currencyCode,\n    total_discount_currency: currencyCode,\n    total_tax_currency: currencyCode,\n    total_amount_currency: currencyCode,\n    exchange_rate_currency: currencyCode,\n  });\n  if (currencyCode != \"----\" && currencyCode != \"MYR\") {\n    db.collection(\"currency\")\n      .where({ currency_code: currencyCode })\n      .get()\n      .then((res) => {\n        const currencyEntry = res.data[0];\n        this.setData({\n          exchange_rate:\n            this.getValue(\"exchange_rate\") == undefined\n              ? currencyEntry.currency_selling_rate\n              : this.getValue(\"exchange_rate\") !=\n                currencyEntry.currency_selling_rate\n              ? this.getValue(\"exchange_rate\")\n              : currencyEntry.currency_selling_rate,\n        });\n\n        this.display([\n          \"exchange_rate\",\n          \"exchange_rate_myr\",\n          \"exchange_rate_currency\",\n          \"myr_total_amount\",\n          \"total_amount_myr\",\n        ]);\n      });\n  } else {\n    this.setData({\n      exchange_rate: 1,\n    });\n    this.hide([\n      \"exchange_rate\",\n      \"exchange_rate_myr\",\n      \"exchange_rate_currency\",\n      \"myr_total_amount\",\n      \"total_amount_myr\",\n    ]);\n  }\n\n  const commonFields = {\n    sales_person_id: d.so_sales_person\n      ? d.so_sales_person\n      : this.getValue(\"sales_person_id\"),\n    si_payment_term_id: d.so_payment_term,\n    so_no_display: d.so_no,\n    customer_id: d.customer_name ? d.customer_name : customerName,\n    currency_code: currencyCode,\n    si_billing_address: d.cust_billing_address,\n    si_shipping_address: d.cust_shipping_address,\n    si_address_name: d.cust_billing_name,\n    si_address_contact: d.cust_cp,\n  };\n\n  const addressFields = [\"billing\", \"shipping\"].reduce((acc, type) => {\n    [\n      \"address_line_1\",\n      \"address_line_2\",\n      \"address_line_3\",\n      \"address_line_4\",\n      \"address_city\",\n      \"address_state\",\n      \"postal_code\",\n      \"address_country\",\n    ].forEach((key) => {\n      acc[`${type}_${key}`] = d[`${type}_${key}`];\n    });\n    return acc;\n  }, {});\n\n  this.setData({ ...commonFields, ...addressFields });\n  this.display(\"address_grid\");\n};\n\ninit();\n",
        "type": "js"
      },
      {
        "key": "dlh48fkt",
        "name": "onChange_fake_so_id",
        "func": "(async () => {\n  const fake_so_id = arguments[0]?.fieldModel?.value;\n\n  let organizationId = this.getVarGlobal(\"deptParentId\");\n  if (organizationId === \"0\") {\n    organizationId = this.getVarSystem(\"deptIds\").split(\",\")[0];\n  }\n\n  if (fake_so_id) {\n    await this.setData({\n      so_id: [fake_so_id],\n      customer_id: arguments[0]?.fieldModel?.item?.customer_name,\n      plant_id: arguments[0]?.fieldModel?.item?.plant_name,\n      organization_id: organizationId,\n    });\n\n    await this.display(\"so_id\");\n    await this.hide(\"fake_so_id\");\n  }\n})();\n",
        "type": "js"
      },
      {
        "key": "9xk689ww",
        "name": "onChange_9xk689ww",
        "func": "",
        "type": "rule"
      }
    ],
    "uniqueGroup": [],
    "params": [
      {
        "key": "jzb06b6s",
        "name": "sales_invoice_no",
        "title": "",
        "description": "",
        "bsonType": "string",
        "isExpand": false,
        "children": []
      },
      {
        "key": "9zgduoxl",
        "name": "page_status",
        "title": "",
        "description": "",
        "bsonType": "string",
        "isExpand": false,
        "children": []
      }
    ],
    "deps": {},
    "paramsDeps": {},
    "styleSheets": ".padding{\n  padding:20px\n}\n\n.margin{\n  margin-left: 15px\n}\n\n.marginright{\n  margin-right: 20px;\n  margin-top : 3px;\n}\n\n.fixbutton{\n  position: fixed;\n  bottom: 0;\n  right: 0;\n}\n\n\n"
  }
}
